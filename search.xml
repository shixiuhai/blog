<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>端云平台常用问题搜集解决</title>
      <link href="/2022/031738036.html"/>
      <url>/2022/031738036.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础环境相关管理"><a href="#基础环境相关管理" class="headerlink" title="基础环境相关管理"></a>基础环境相关管理</h2><ul><li><p>各个设备ip位置</p></li><li><p>端云福建的可视化平台</p><ul><li><p>福建下单之后客户所在平台：<a href="https://aisec.gttx.com/">https://aisec.gttx.com</a></p><p>系统管理员账号：18012345670  密码：aqwg_2021</p></li></ul></li><li><p>端云睿幕可视化平台</p><ul><li><p>睿幕平台：<a href="https://service.gttx.com/">https://service.gttx.com</a></p><p>系统管理员账号：18012345670  密码：aqwg_2021</p></li></ul></li><li><p>端云可视化平台业务数据库</p><ul><li><p>业务数据库Portal:172.16.0.3:3306\172.16.0.4:3306</p><p>账号：secgw             password:123qwe$R</p></li></ul></li><li><p>端云防火墙数据库trend</p><ul><li><p>防火墙数据库trend:172.16.1.8:23306</p><p>账号：root            password:6BVMmRYoWuyize72</p></li></ul></li><li><p>阿里云服务</p><p>账号：光通天下</p><p>密码：walker123</p><p>涉及的服务：域名、域名解析、ssl证书、阿里大于短信服务</p></li><li><p>端云平台和堡垒机</p><p>1、青云平台和堡垒机：</p><p>a、云主机 <a href="https://console.cloud.gttx.com/">https://console.cloud.gttx.com/</a></p><p>账号：<a href="mailto:&#x72;&#100;&#x5f;&#x67;&#x74;&#116;&#x78;&#64;&#x67;&#x74;&#116;&#x78;&#x2e;&#99;&#x6f;&#x6d;">&#x72;&#100;&#x5f;&#x67;&#x74;&#116;&#x78;&#64;&#x67;&#x74;&#116;&#x78;&#x2e;&#99;&#x6f;&#x6d;</a></p><p>密码： GttxR&amp;D@2021</p><p>b、堡垒机：<a href="http://jms-rd.gttx.com/auth/login/?next=/">http://jms-rd.gttx.com/auth/login/?next=/</a></p><p>账号：lijiang</p><p>密码：gttx@2019</p><p>重启堡垒机是通过青云平台，点击堡垒机关机》启动</p></li><li><p>Git平台</p><p>172.16.0.8:6001/users/sign_in</p><p>账号：root</p><p>密码：V5871baqwg</p></li><li><p>jenkins: 172.16.0.8:9999 发布平台</p><p>账号：root 密码：M2kZ2yJuHLWW8mf    </p><p>账号：lijiang 密码：M2kZ2yJuHLWW8mf</p><p>Secgw-service-prod  portal的java服务</p><p>Secgw-edge-prod       边缘节点的java服务</p><p>a、点击构建，构建成功后，登录堡垒机，登录相关的服务器，执行重启脚本；</p><p>b、Portal:172.16.0.3\172.16.0.4; </p><p>cd /opt/secgw/</p><p> ./deploy.sh secgw-service 1.0 -f</p><p>c、Edge:172.16.2.4\172.16.2.5</p><p> cd /opt/secgw/</p><p> ./deploy.sh secgw-edge 0.6 -f</p></li><li><p>在线设备监控 python脚本所在服务器</p><p>183.131.192.18</p><p>root  jyjf@2019</p></li></ul><h2 id="客服客户业务问题-数据表单相关"><a href="#客服客户业务问题-数据表单相关" class="headerlink" title="客服客户业务问题 数据表单相关"></a>客服客户业务问题 数据表单相关</h2><ul><li><p>订单问题</p><ul><li><p>业务逻辑：翼商云下单调用平台api生成对应订单和工单，平台处理工单上架设备后，订单进行计费后调用翼商云竣工接口。退订也是从翼商云发起；订单异常从逻辑上逐步排查。</p><p>工单表：business_work_order</p><p>订单表：business_order</p><p>设备表：business_equipment</p><p>调用日志：business_si_order_log</p><p>翼商云一个asp账号只能下同套餐的一个订单，平台一个客户的手机号只能属于一个客户，出现未生成订单的情况，查看调用日志，看对应的报错信息进行处理。</p></li></ul></li><li><p>数据问题排查</p><ul><li><p>流量数据排查</p><p>登录登录elog平台查看流量分析模块中的应用流量，进入之后等查询所有流量的结果，如果显示没有数据，则联系华为客服（华为客户联系方式？）进行问题排查，通常是elog服务的采集器或收集器出了问题。之后点击更多条件选择日志源，查询看是否有流量，如果无，则看是否纳管IP和客户防火墙与中心墙ipsec隧道是否正常，如果都正常则登录客户防火墙上查看是否有应用流量。如果elog上面有流量数据，则看平台是否普遍都无流量，如果是则排查边缘节点服务（边缘节点服务是什么）是否正常。如果都正常则问题是elog接口达到瓶颈（哪里瓶颈是态势大屏平台这边还是elog服务这边）了，需要联系销售傅本辉（18059036655）看舍弃哪些客户日志。</p></li><li><p>威胁日志数据排查</p><p>平台安全运营模块查看客户的威胁事件是否都是未确认；登录cis，点击检索，查询威胁事件，点击查询条件事件源ip=设备IP，看是否有数据，若无，则查询原始事件，还是相同的查询条件进行查询，若有数据，则说明此情况是正常；cis会过滤掉一些威胁事件。若无数据，则登录客户防火墙去确认是否有威胁事件。若无则确认策略是否生效（策略指的是哪里的策略，比如客户防火墙的策略），若有则确认防火墙与中心墙的ipsec是否正常（防火墙与中心墙的ipsec是否正常）。</p></li></ul></li><li><p>报表问题</p><p>第一步查看安全报告是否真的无报表，第二步查询该客户是否有数据，若无则进行问题2的排查流程，若有则登录大数据cdh平台查看yarn任务是否有失败的情况，若有则重启大数据cdh平台；cdh的平台账号密码见大数据人员的交接文档中。</p></li><li><p>修改设备在线状态</p><ul><li>根据esn和客户id查询business_equipment中设备记录，将状态3改为2</li></ul></li><li><p>修改esn套餐</p><ul><li>property_device_claim_form_deliver_detail、property_inventory_detail；修改这两个表里面对应esn的套餐id。</li><li>修改字段是combo_id</li></ul></li><li><p>客户订单信息解绑（license和设备型号对不上）</p><ul><li>license 型号不对 改business_license 表  解绑是customerId，esn置空，修改model<br>设备型号不对，修改business_license上的model</li><li>如果报license已被使用 ， 就删除该条数据 通过license查找匹配</li><li>status 状态改为1是为使用状态</li></ul></li><li><p>设备入库 出库 回收 库存表单</p><ul><li>入库表单 property_asn</li><li>出库表单  property_delivery_device_form_detail</li><li>设备回收历史表单 property_device_recovery_history</li><li>设备库存表单 property_inventory_detail</li></ul></li><li><p>策略下发问题</p><ul><li>如果策略下发不正常，则确认secoManager与客户防火墙的网络是否正常，如果连接的新的中心防火墙，则需要secoManager服务器上配置路由。其次查看防火墙上的北向接口是否正常，联系汪轶进行排查。</li></ul></li><li><p>修改客户信息（更改某个客户的用户名和电话号码）</p><ul><li><p>通过 business_customer 通过company_name 查询出id（customer_id）</p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316131921029.png" alt="image-20220316131921029"></p></li><li><p>在security_user表里通过customer_id 查询出用户相关信息进行修改（如用户名和电话号码）</p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316132009055.png" alt="image-20220316132009055"></p></li></ul></li></ul><h2 id="设备业务问题-平台操作相关"><a href="#设备业务问题-平台操作相关" class="headerlink" title="设备业务问题 平台操作相关"></a>设备业务问题 平台操作相关</h2><h3 id="Cis-Elog-secoManager-系统地址"><a href="#Cis-Elog-secoManager-系统地址" class="headerlink" title="Cis Elog secoManager 系统地址"></a>Cis Elog secoManager 系统地址</h3><p>Cis: 命令下方</p><p><a href="https://192.168.11.2:32229/">https://192.168.11.2:32229</a>  admin Gttx@2021</p><p>Elog: 流量获取 和下面的防火墙zhijie</p><p><a href="https://192.168.11.6:32229/">https://192.168.11.6:32229</a>        admin Huawei@123</p><p>secoManager: </p><ul><li>为什么secoManager有两套系统</li></ul><p><a href="https://192.168.11.200:31943/">https://192.168.11.200:31943</a>   admin Gttx@2022.</p><p><a href="https://192.168.11.200:31945/">https://192.168.11.200:31945</a>   admin Huawei@1234</p><h3 id="1-elog-服务"><a href="#1-elog-服务" class="headerlink" title="1. elog 服务"></a>1. elog 服务</h3><ul><li><p>设备没数据问题排查：</p><ul><li>查找墙的ip</li><li>登录墙 https：//ip:8443   账号admin  密码：gttx@2019    监控-&gt;流量日志</li><li>登录elog 账号admin   密码Huawei@123   流量分析-》应用流量》更多   筛选ip查询</li></ul></li><li><p>elog添加</p><ul><li><p>系统设置》日志源</p></li><li><p>日志源列表》日志源添加</p></li><li><p>服务管理&gt;采集器》关联日志源》批量添加<br>采集方式 dateflow，syslog</p></li></ul></li></ul><h3 id="2-CSI-服务"><a href="#2-CSI-服务" class="headerlink" title="2. CSI 服务"></a>2. CSI 服务</h3><ul><li>查看攻击详情<ol><li>怎么查看攻击详情</li></ol></li></ul><h2 id="3-secoManager"><a href="#3-secoManager" class="headerlink" title="3. secoManager"></a>3. secoManager</h2><ul><li><p>用户下发策略的管理</p><ol><li><p>怎么对用户下方策略</p></li><li><p>比如封ip这些操作怎么实现</p></li><li><p>secoManager具体做哪些</p></li><li><p>设备上架是否需要配置</p></li><li><p>secManager另一个网址是否是集群管理</p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220311144509919.png" alt="image-20220311144509919"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220311144520344.png"></p></li></ol></li></ul><h2 id="配置路由有几台设备需要配置路由"><a href="#配置路由有几台设备需要配置路由" class="headerlink" title="配置路由有几台设备需要配置路由"></a>配置路由有几台设备需要配置路由</h2><p>不在线的设备下载licensence</p><p>Changeme@123</p><h2 id="property-asn-表"><a href="#property-asn-表" class="headerlink" title="property_asn 表"></a>property_asn 表</h2><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130056314.png" alt="image-20220317130056314"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130134557.png" alt="image-20220317130134557"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130202503.png" alt="image-20220317130202503"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130225342.png" alt="image-20220317130225342"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130244437.png" alt="image-20220317130244437"></p><h2 id="property-device-claim-form-deliver-detail-表"><a href="#property-device-claim-form-deliver-detail-表" class="headerlink" title="property_device_claim_form_deliver_detail 表"></a>property_device_claim_form_deliver_detail 表</h2><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130819388.png" alt="image-20220317130819388"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130848667.png" alt="image-20220317130848667"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130915595.png" alt="image-20220317130915595"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130934185.png" alt="image-20220317130934185"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317130951255.png" alt="image-20220317130951255"></p><h2 id="property-device-recovery-history-表"><a href="#property-device-recovery-history-表" class="headerlink" title="property_device_recovery_history 表"></a>property_device_recovery_history 表</h2><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131257945.png" alt="image-20220317131257945"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131324637.png" alt="image-20220317131324637"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131338956.png" alt="image-20220317131338956"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131356550.png" alt="image-20220317131356550"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131411297.png" alt="image-20220317131411297"></p><h2 id="property-inventory-detail-表"><a href="#property-inventory-detail-表" class="headerlink" title="property_inventory_detail 表"></a>property_inventory_detail 表</h2><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131845053.png" alt="image-20220317131845053"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131817579.png" alt="image-20220317131817579"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131909874.png" alt="image-20220317131909874"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131938191.png" alt="image-20220317131938191"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317131954580.png" alt="image-20220317131954580"></p><p>涉及的表名有</p><h3 id="property-asn"><a href="#property-asn" class="headerlink" title="property_asn"></a>property_asn</h3><p>1021B0502906  id = 1321743819514843180</p><p>1021B0502908  id = 1290164131583758340</p><p>1021B0502909  id = 1290164131579564049</p><p>1021B0502910  id = 1290164131583758341</p><p>1021B0502911  id = 1290164131583758345</p><h3 id="property-device-claim-form-deliver-detail"><a href="#property-device-claim-form-deliver-detail" class="headerlink" title="property_device_claim_form_deliver_detail"></a>property_device_claim_form_deliver_detail</h3><p>1021B0502906  id = 2c9780837e719aaa017e7a5797da57ee</p><p>1021B0502908  id = 2c9780837e719aaa017e7a5797da57f0</p><p>1021B0502909  id = 2c9780837e719aaa017e7a5797da57ef</p><p>1021B0502910  id = 2c9780837e719aaa017e7a5797da57f1</p><p>1021B0502911  id = 2c9780837e719aaa017e7a5797da57f2 </p><h3 id="property-device-recovery-history"><a href="#property-device-recovery-history" class="headerlink" title="property_device_recovery_history"></a>property_device_recovery_history</h3><p>1021B0502906  id = 2c9780837dd72cd7017ddb9b2a3232d4</p><p>1021B0502908  id = 2c9780837dd72cd7017ddb9c44a432d6</p><p>1021B0502909  id = 2c9780837dd72cd7017ddb9a426632d2</p><p>1021B0502910  id = 2c9780837dd72cd7017ddb9a97b332d3</p><p>1021B0502911  id = 2c9780837dd72cd7017ddb9bd82d32d5</p><h3 id="property-inventory-detail"><a href="#property-inventory-detail" class="headerlink" title="property_inventory_detail"></a>property_inventory_detail</h3><p>1021B0502906  id = 2c938083754f03bd017573a904f9051f</p><p>1021B0502908  id = 2c97808273b27b600173b2e2c89400ad</p><p>1021B0502909  id = 2c97808273b27b600173b2e2c89400a6</p><p>1021B0502910  id = 2c97808273b27b600173b2e2c89400ae</p><p>1021B0502911  id = 2c97808273b27b600173b2e2c89400b2</p><p>receiver </p><p>receice_time</p><p>status</p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317142624365.png" alt="image-20220317142624365" style="zoom:25%;" /><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220317142714945.png" alt="image-20220317142714945"></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端云平台常用问题搜集解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy学习</title>
      <link href="/2022/03045367.html"/>
      <url>/2022/03045367.html</url>
      
        <content type="html"><![CDATA[<h3 id="scrapy-爬取流程"><a href="#scrapy-爬取流程" class="headerlink" title="scrapy 爬取流程"></a>scrapy 爬取流程</h3><blockquote><p>这个流程图看不懂可以跳过</p></blockquote><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220315141829926.png"></p><h2 id="scrapy-各个模块间的关系"><a href="#scrapy-各个模块间的关系" class="headerlink" title="scrapy 各个模块间的关系"></a>scrapy 各个模块间的关系</h2><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316173226279.png" alt="image-20220316173226279"></p><h3 id="1-创建scrapy-项目"><a href="#1-创建scrapy-项目" class="headerlink" title="1. 创建scrapy 项目"></a>1. 创建scrapy 项目</h3><pre class=" language-python3"><code class="language-python3">scrapy startproject projectName # projectName是项目的名称</code></pre><h3 id="2-生成一个爬虫"><a href="#2-生成一个爬虫" class="headerlink" title="2. 生成一个爬虫"></a>2. 生成一个爬虫</h3><pre class=" language-python3"><code class="language-python3">scrapy genspider spiderName "example_domain" # spiderName是项目里建立的爬虫名，example_domain是爬虫爬取范围</code></pre><h3 id="3-提取数据"><a href="#3-提取数据" class="headerlink" title="3. 提取数据"></a>3. 提取数据</h3><ul><li><p>完善爬虫设置细节</p><ul><li><p>设备爬虫name</p><pre class=" language-python3"><code class="language-python3"></code></pre></li><li><p>设置 allowed_domains</p><pre class=" language-python3"><code class="language-python3"></code></pre></li><li><p>设置start_urls</p><pre class=" language-python3"><code class="language-python3"></code></pre></li><li><p>设置log</p><pre class=" language-python3"><code class="language-python3"></code></pre></li></ul></li><li><p>items自定义爬取到数据的字段</p><ul><li><p>items里构建多个字段类</p><pre class=" language-python3"><code class="language-python3"></code></pre></li></ul></li><li><p>某个爬虫的示例</p><ul><li><p>没有使用items的示例</p><pre class=" language-python3"><code class="language-python3"></code></pre></li><li><p>使用了items的示例</p><pre class=" language-python3"><code class="language-python3"></code></pre></li></ul></li></ul><h3 id="4-保存数据"><a href="#4-保存数据" class="headerlink" title="4. 保存数据"></a>4. 保存数据</h3><ul><li>pipline中保存数据</li></ul><h3 id="5-运行爬虫"><a href="#5-运行爬虫" class="headerlink" title="5. 运行爬虫"></a>5. 运行爬虫</h3><pre class=" language-python3"><code class="language-python3">scrapy crawl spiderName # spiderName 需要启动的爬虫名字</code></pre><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220315155349061.png" alt="image-20220315155349061"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316161423572.png" alt="image-20220316161423572"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316162209636.png" alt="image-20220316162209636"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316162237404.png" alt="image-20220316162237404"></p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316162646920.png" alt="image-20220316162646920"></p><p>将i里面\xa0或者\s替换为空字符串</p><p>python3 可以在[]里面使用for循环</p><p>coutent = [ i for i in content if len(i)&gt;0] # 去除列表里面的空字符串</p><p><img src="C:\Users\15256\AppData\Roaming\Typora\typora-user-images\image-20220316163612628.png" alt="image-20220316163612628"></p><p>process_item是默认执行的方法，可以去调用新创建的方法</p><p>如果多个爬虫使用一个pipline 在爬虫的字典上定义一个come_from字段</p><p>定义多个pipline 可以一个pipline类对数据进行处理，另一个pipline对数据进行处理</p><p>process_item里的spider.name字段是爬虫的名字，可以在pipline进行数据筛选</p><p>item保存到mongodb里面需要对数据类型进行强制转换</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构设计</title>
      <link href="/2022/022217947.html"/>
      <url>/2022/022217947.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于权限表的设计</p></blockquote><p><a href="https://www.cnblogs.com/myseries/p/10871633.html">https://www.cnblogs.com/myseries/p/10871633.html</a></p><h2 id="1-设计的表有哪些"><a href="#1-设计的表有哪些" class="headerlink" title="1. 设计的表有哪些"></a>1. 设计的表有哪些</h2><ol><li>用户表（user）</li><li>权限表（Permission）</li><li>角色表（Roles）</li><li>用户和角色的关联表（UserRoles）</li><li>角色和权限关联表（RolePermissions）</li><li>菜单表（menu）</li></ol><h3 id="2-为什么要设计角色表"><a href="#2-为什么要设计角色表" class="headerlink" title="2. 为什么要设计角色表"></a>2. 为什么要设计角色表</h3><p>​        角色是什么？可以理解为一定数量的权限的集合，权限的载体。例如：一个论坛系统，“超级管理员”、“版主”都是角色。版主可管理版内的帖子、可管理版内的用户等，这些是权限。要给某个用户授予这些权限，不需要直接将权限授予用户，可将“版主”这个角色赋予该用户。 </p><p>当用户的数量非常大时，要给系统每个用户逐一授权（授角色），是件非常烦琐的事情。这时，就需要给用户分组，每个用户组内有多个用户。除了可给用户授权外，还可以给用户组授权。这样一来，用户拥有的所有权限，就是用户个人拥有的权限与该用户所在用户组拥有的权限之和。（下图为用户组、用户与角色三者的关联关系）</p>]]></content>
      
      
      <categories>
          
          <category> web开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于多台交换机的数据补录方法</title>
      <link href="/2022/012143105.html"/>
      <url>/2022/012143105.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2a2770a05e42dc48df1775083c7e5f6b1b9471d9f30a134b4b32f58f2cacb0b8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> csv到mysql </tag>
            
            <tag> mysql数据批量插入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法基础</title>
      <link href="/2022/011317141.html"/>
      <url>/2022/011317141.html</url>
      
        <content type="html"><![CDATA[<h3 id="递归实列-汉诺塔问题"><a href="#递归实列-汉诺塔问题" class="headerlink" title="递归实列(汉诺塔问题)"></a>递归实列(汉诺塔问题)</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 圆盘个数 n</span><span class="token comment" spellcheck="true"># a b c表示三个</span><span class="token keyword">def</span> <span class="token function">hanoi</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 将n-1个盘从a经过c移动到b</span>        hanoi<span class="token punctuation">(</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>c<span class="token punctuation">,</span>b<span class="token punctuation">)</span>              <span class="token comment" spellcheck="true"># 将 n-1个盘中从b经过a移动到c</span>        hanoi<span class="token punctuation">(</span>n<span class="token punctuation">,</span>b<span class="token punctuation">,</span>a<span class="token punctuation">,</span>c<span class="token punctuation">)</span></code></pre><h3 id="二分查找代码"><a href="#二分查找代码" class="headerlink" title="二分查找代码"></a>二分查找代码</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>li<span class="token punctuation">,</span>val<span class="token punctuation">)</span><span class="token punctuation">:</span>    left <span class="token operator">=</span><span class="token number">0</span>     right<span class="token operator">=</span>len<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">while</span> left <span class="token operator">&lt;=</span>right<span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>left<span class="token operator">+</span>right<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>        <span class="token keyword">if</span> li<span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">==</span> val<span class="token punctuation">:</span>            <span class="token keyword">return</span> mid        <span class="token comment" spellcheck="true"># val li(mid)</span>        <span class="token keyword">elif</span> li<span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token operator">></span>val<span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 待查找值在mid 左边</span>            right<span class="token operator">=</span>mid<span class="token number">-1</span>        <span class="token comment" spellcheck="true">#li(mid) val</span>        <span class="token keyword">else</span>：<span class="token comment" spellcheck="true"># li(mid)&lt;val # 待查找值在右边</span>            left<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>      <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> NONE                        </code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx基础使用</title>
      <link href="/2022/010442496.html"/>
      <url>/2022/010442496.html</url>
      
        <content type="html"><![CDATA[<h3 id="nginx-反向代理配置"><a href="#nginx-反向代理配置" class="headerlink" title="nginx 反向代理配置"></a>nginx 反向代理配置</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 反向代理基本配置</span>server <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        listen       80<span class="token punctuation">;</span>        server_name  208.208.128.122<span class="token punctuation">;</span>        location / <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                      proxy_pass http://192.168.1.10<span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true"># 对于proxy_pass的配置有如下几种情况</span><span class="token comment" spellcheck="true">## 1</span>location /aming/<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    proxy_pass http://192.168.1.10<span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true">## 2</span>location /aming/<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    proxy_pass http://192.168.1.10/<span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true">## 3</span>location /aming/<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    proxy_pass http://192.168.1.10/linux/<span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true">## 4</span>location /aming/<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    proxy_pass http://192.168.1.10/linux<span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true">## 5</span>location /aming<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    proxy_pass http://192.168.1.10/a/<span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true"># 假设请求为www.aminglinux.com/aming/a.html  当请求时拼接结果是</span><span class="token comment" spellcheck="true"># 1. http://192.168.1.10/aming/a.html</span><span class="token comment" spellcheck="true"># 2. http://192.168.1.10/a.html</span><span class="token comment" spellcheck="true"># 3. http://192.168.1.10/linux/a.html</span><span class="token comment" spellcheck="true"># 4. http://192.168.1.10/linuxa.html</span><span class="token comment" spellcheck="true"># 5. http://192.168.1.10/a//a.html</span></code></pre><h3 id="nginx刷新配置"><a href="#nginx刷新配置" class="headerlink" title="nginx刷新配置"></a>nginx刷新配置</h3><pre class=" language-bash"><code class="language-bash">nginx -s reload</code></pre><h3 id="检查nginx配置文件是否正确"><a href="#检查nginx配置文件是否正确" class="headerlink" title="检查nginx配置文件是否正确"></a>检查nginx配置文件是否正确</h3><pre class=" language-bash"><code class="language-bash">nginx -t -c /etc/nginx/nginx.conf</code></pre>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx基础 </tag>
            
            <tag> nginx反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python对redis基础使用</title>
      <link href="/2021/122948490.html"/>
      <url>/2021/122948490.html</url>
      
        <content type="html"><![CDATA[<pre class=" language-pyton"><code class="language-pyton"></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python操作redis基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过voc的xml数据集生成yolov5的txt数据集</title>
      <link href="/2021/122420090.html"/>
      <url>/2021/122420090.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-代码如下所示"><a href="#1-代码如下所示" class="headerlink" title="1.代码如下所示"></a>1.代码如下所示</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""实现voc的xml数据集转换为txt数据集"""</span><span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET<span class="token keyword">import</span> pickle<span class="token keyword">import</span> os<span class="token keyword">from</span> os <span class="token keyword">import</span> listdir<span class="token punctuation">,</span> getcwd<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> join<span class="token comment" spellcheck="true">## 0安全帽 1卡车 2 脚手架</span><span class="token comment" spellcheck="true"># 改变坐标格式</span><span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> box<span class="token punctuation">)</span><span class="token punctuation">:</span>    dw <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">(</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    dh <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">(</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span>     y <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span>     w <span class="token operator">=</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> box<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    h <span class="token operator">=</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> box<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    x <span class="token operator">=</span> x<span class="token operator">*</span>dw    w <span class="token operator">=</span> w<span class="token operator">*</span>dw    y <span class="token operator">=</span> y<span class="token operator">*</span>dh    h <span class="token operator">=</span> h<span class="token operator">*</span>dh    <span class="token keyword">return</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span>xml_path <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/VOC2028/VOC2028/Annotations/"</span>txt_path <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/VOC2028/VOC2028/labels/"</span><span class="token keyword">def</span> <span class="token function">convert_annotation</span><span class="token punctuation">(</span>xml_path<span class="token punctuation">,</span>txt_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>txt_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>txt_path<span class="token punctuation">)</span>    <span class="token keyword">for</span> image_id <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>xml_path<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#         print(xml_path+image_id)</span>        xml_file <span class="token operator">=</span> open<span class="token punctuation">(</span>xml_path<span class="token operator">+</span>image_id<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        txt_file <span class="token operator">=</span> open<span class="token punctuation">(</span>txt_path<span class="token operator">+</span>image_id<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        tree<span class="token operator">=</span>ET<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xml_file<span class="token punctuation">)</span>        root <span class="token operator">=</span> tree<span class="token punctuation">.</span>getroot<span class="token punctuation">(</span><span class="token punctuation">)</span>        size <span class="token operator">=</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'size'</span><span class="token punctuation">)</span>        w <span class="token operator">=</span> int<span class="token punctuation">(</span>size<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        h <span class="token operator">=</span> int<span class="token punctuation">(</span>size<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">for</span> obj <span class="token keyword">in</span> root<span class="token punctuation">.</span>iter<span class="token punctuation">(</span><span class="token string">'object'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># difficult = obj.find('difficult').text</span>            <span class="token comment" spellcheck="true"># difficult=0</span>            <span class="token comment" spellcheck="true"># 目标名字</span>            <span class="token comment" spellcheck="true">#cls = obj.find('name').text</span>            <span class="token comment" spellcheck="true"># cls_id = obj.index(cls)</span>            <span class="token comment" spellcheck="true"># print(cls_id)</span>            <span class="token comment" spellcheck="true"># if cls=='mask':</span>            <span class="token comment" spellcheck="true">#     cls_id=0</span>            <span class="token comment" spellcheck="true"># elif cls=='nomask':</span>            <span class="token comment" spellcheck="true">#     cls_id=1</span>            <span class="token comment" spellcheck="true"># 获取做标相关数值</span>            <span class="token comment" spellcheck="true"># cls_id 目标的位置 0 1 2</span>            cls_id<span class="token operator">=</span><span class="token number">0</span>            xmlbox <span class="token operator">=</span> obj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span>                    b <span class="token operator">=</span> <span class="token punctuation">(</span>float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>            bb <span class="token operator">=</span> convert<span class="token punctuation">(</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>            txt_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>cls_id<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> bb<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>convert_annotation<span class="token punctuation">(</span>xml_path<span class="token punctuation">,</span>txt_path<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> yolov5 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> voc数据集改yolov5数据集 </tag>
            
            <tag> xml转txt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础笔记</title>
      <link href="/2021/122117178.html"/>
      <url>/2021/122117178.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9030a9fd8df09c932157debbd90d1173b953d8f728b93ed12342910a376bdaff">14f2d733a805bc4143cc4d1dcd33bd08bcbf07520accae1acc30b02d3f4e443e96ee48eecfff5ab5a5532cdb254fe60f4465bcc83d42c7aa618a118a1ac80593a9193f7f75fba8ecc2c97babdc906f3a8758dd36c5d9f202be8bd93a6e7dab9ca8d3e6a341d7f6dd28b09ad74d280054d246173d698b5568ddab0eebd0d8082c6e20eece7078f5e36804c97692195b94702e4ee1cb3dd0b11c1952d4eac5dbaeab7416675968d1c1068fbe3eecd768fc8974c3570cc14ac09cb5014ae9024de99a8f551b4613958cb5cc15af55ec6cf56ab47afc3cfd5ad039232121cbd59a9abb71cd5cbea1c84ebab1e15e4d21ee68ae1adf43f5541f83866f96d764947b2dc499543f368e507852c620b3ba7274587bc913bc5deb51198bb1459daa6c3c2409afe6df0504f44ffd45998f38f4c05d7fc318233e9180c6bc3e21666a952b02df66ec671b7382079680f6c6d21786d05012185c75b7798ccc38071bf09851198fca613454e5dd1041970787481e9bc718f4e3b0780dce72951d042374bc09caad03f91a2d383384049ebc690731601ec3aa324e443c0d2d15d5729ad6508c1d256b749fce257264b5685a6ecf6a2e6b4d93edc63828c877b8b8f51a7ab9508e8db6cce7a18232142c029617fba6e304e62c4180f19e442e01254451764995b8dd0c916df10c33f8039d050aa247ef2872bdd6473a31a1d47eb785c28e8f861b237757e50e3f2192249bc313cdd14a6f42015fb701a1803ee934acf673c63435f79de7cf768c72fff058b40bb0bc87352b570b0450cc2d04fbd6e45e67c2208a41225eb925d97de1553b0d7c576a926a5d126af01848d80f155316b2ef75531cd98be77e0c03e758597aa151705eb3f0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记vscode相关配置</title>
      <link href="/2021/121939245.html"/>
      <url>/2021/121939245.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="1-安装的插件已经同步到微软账户"><a href="#1-安装的插件已经同步到微软账户" class="headerlink" title="1. 安装的插件已经同步到微软账户"></a>1. 安装的插件已经同步到微软账户</h3><h3 id="2-日常调试python"><a href="#2-日常调试python" class="headerlink" title="2. 日常调试python"></a>2. 日常调试python</h3><blockquote><p>直接debug按钮即可</p></blockquote><h3 id="3-日常调试flask"><a href="#3-日常调试flask" class="headerlink" title="3. 日常调试flask"></a>3. 日常调试flask</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 在项目文件夹下创建.vscode文件夹</span><span class="token comment" spellcheck="true">## 2. 在.vscode下创建launch.json</span><span class="token comment" spellcheck="true">## 3. launch.json内容如下</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid<span class="token operator">=</span>830387    <span class="token string">"version"</span><span class="token keyword">:</span> <span class="token string">"0.2.0"</span>,    <span class="token string">"configurations"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"Python: Flask"</span>,            <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"python"</span>,            <span class="token string">"request"</span><span class="token keyword">:</span> <span class="token string">"launch"</span>,            <span class="token string">"module"</span><span class="token keyword">:</span> <span class="token string">"flask"</span>,            <span class="token string">"env"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"FLASK_APP"</span><span class="token keyword">:</span> <span class="token string">"flask_app_1.py"</span>,                <span class="token string">"FLASK_ENV"</span><span class="token keyword">:</span> <span class="token string">"development"</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"run"</span>,                <span class="token string">"--no-debugger"</span>,                <span class="token string">"--no-reload"</span>             <span class="token punctuation">]</span>,            <span class="token string">"jinja"</span><span class="token keyword">:</span> <span class="token boolean">true</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><h3 id="4-日常调试django"><a href="#4-日常调试django" class="headerlink" title="4. 日常调试django"></a>4. 日常调试django</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 在项目文件夹下创建.vscode文件夹</span><span class="token comment" spellcheck="true">## 2. 在.vscode下创建launch.json</span><span class="token comment" spellcheck="true">## 3. launch.json内容如下</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid<span class="token operator">=</span>830387    <span class="token string">"version"</span><span class="token keyword">:</span> <span class="token string">"0.2.0"</span>,    <span class="token string">"configurations"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"Python: Django"</span>,            <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"python"</span>,            <span class="token string">"request"</span><span class="token keyword">:</span> <span class="token string">"launch"</span>,            <span class="token string">"program"</span><span class="token keyword">:</span> <span class="token string">"$&amp;#123;workspaceFolder&amp;#125;\\manage.py"</span>,            <span class="token string">"args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"runserver"</span>,                <span class="token string">"--noreload"</span>,            <span class="token punctuation">]</span>,            <span class="token string">"django"</span><span class="token keyword">:</span> <span class="token boolean">true</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><h3 id="5-vscode连接远程服务器"><a href="#5-vscode连接远程服务器" class="headerlink" title="5. vscode连接远程服务器"></a>5. vscode连接远程服务器</h3><blockquote><p>导入图1 步骤1</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211219212029.png"></p><blockquote><p>导入图2 步骤二<br><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211219212236.png"></p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. config里面内容配置如下（ssh配置文件里面的内容）</span>Host 104.225.236.140  HostName 104.225.236.140  User root  Port 27464  IdentityFile C:/Users/15256/.ssh/id_rsamyserver</code></pre>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode配置python调试 </tag>
            
            <tag> vscode配置连接远程服务器开发 </tag>
            
            <tag> vscode调试django </tag>
            
            <tag> vscode调试flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用百度地图api获取经纬度</title>
      <link href="/2021/1217198.html"/>
      <url>/2021/1217198.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7936ee0a9ffe9c183e5fb5af6710eca92df1b05b10e7b6a401836e9ecccbfbfb">14f2d733a805bc4143cc4d1dcd33bd08bcbf07520accae1acc30b02d3f4e443e7dfcd5170b101119ef950e65101eea690e2e26eb486229f97febe2e66365cd35c731ae25578c6519564047fce3745330770e9482b656b2af907cb72b71b3bf756d042ac98abfba1a56c093559fe633e9dff2857a56d15680a50549632e0ba4266d548d0c262047ca255a114559d875dbcb0be1f69e320f727c850191c7e8e42caf1d60b6cfa7f8db988fe2dd1906dd636d985bc92bd9221d985966ca71b0950fe342586279577190b0f8f2231a0e252bd4e26493f63b8f6c127fc9c433d053859a96c118252040cd62c55bd83148a2dca6e263615595ba8106e23d4c60de3d68de53b7358ee8c4d175ea669199b5137b73890dc3d6fdc8b841379d275851ffd98c622e273def41a4a7c1d9041e3188dcb17ec8b01dbc7b3956824efce1f73c7a1181235e8699facedffb551679cd6cf818e0bfcb7be497077ec69978dd847ceeeae0dc8759c0072d5f614ba45f1fc44f6f06fd66c908212d0356a33f3cbcd63c4f72ec7d220acaa4c79c385b99855aece241b30764eb7f06a88bcc11ea14e36cc712806f4785a6860965dba38802ab5dde3c38658f2d7f7efcf0bf9f0350082e87d687225623feb7fca0f87f8a56f85f7a6702e9c4ee2c57112401f5a75081a0608aa94cab3aac6dad8b693af7e8d62aba4a1654ab1b9ab9ab948a7dcdba21b56c1bcbc3b2625748fa54a2ef018f91e9ea0018fefa60a461055eed1d353b7fa0af8176c610c1f18616840b594bbdd4e54d2b8b95c17d3d72329077e7912c7d100e50d1252604f94cea20c34adfe1bd4505e5f588709c39e58e187bdd10fbb73989294fb403d4dc93314e867b2ade3f87bd95388d66d45692365de3f59fa1718ad8b5de43be13a6789462d1d2ec60dfbb9867f2357429a740f39df13e8be0cb74de5be2d4f7b891445f91337be16fa4c6cc2b6af1ffd832686b07cb50fb17e3e9ab61606a13c13ffa497f61103f1791292a28570f3720c97eddef989710cf69e2a55543a1637de5e9dd2b33d80c8df7c21cd6323288b585f4f99b876ed7679d08a79645da4db1c3c9f144f1ff61ba63ce46f8b85ccc40816e9b5a021ad373ffb66bc43df7e90afb5b9e946bd3126d7ac789a0a2ffbf30a72aa47f03f8c96a68785540e4047f4cd9c2142f085d26b16c6b4ec207f2ad000688b5d2d58bc044d7c82ffdafd238b8da7dd419d6217875ff145e0e2f51f64db83b13e21c2ff2ef09a01a25eeadfd6d4ab1e2d8494ccb7874927b22f9c9c02ca9b4017d019da2ee2f847b694c573e39dd7c6383fcb29b817d04e8d667522b7f7d32a8fda9ad390d3f3dfdf449bb37d02fd26271e991ca9fedfe0fe50727563f736fa02e0d13a04b5fc935e658dd5dba0ae4e300553b53c5398c319d67eb3babbed0c9e976ccaef11c7d46e3df76e1e01f4e941e2f162a7f26e0a8fa36b93a544833b316ce21ca6b69d5287b9e222fcba018e26a00576ab156587a990d02a81f8c999bd3adbe544b3811c7557d2bc97ccf6b972d03fa46d52e2076d11c2c8eab91ec68781f93723f1dfccd5c2b47790dbf68f6ac9bd971fd96f8f7e6dd5a2d7f9a137f8d68dda4d55e61f901a00711b9f3dad019bcf79f195898c07ff9afc89b1052f9ed01646d28c4d1defcaf77a8c6e49f0eb1f9fb55d75e45af17a36d7d43fd1686fd0a7812b1a2629b0019f504f8427f5007714c721a354272e8cbf025778f19c0fc59fc0acb11ff54b9a5d996aa45ff18633f222b1f5b3cbd2b7e3b3dffd312bb74a2043335571df88f83b61ea2fc836534727611bb535c10d32ba21dfb3012e77ab3815416140cda50b3b3a91af70c73bd609e938ae4b8f18e590aee1934ce6ddfa799d8206547b04faa89f5fe37857cbb80aa0902b69db7a850f642360f2feb03048669ff7a4f874d05815a2d1f2326dd75ac6a1f869b4035d8ca190c9e91b719e0fb1e2eed4a51a1ce2bab9ccada12aff48d48480a8eb2fc33cf83da7e5dec245dae3c36022a035c2d2f2b7d480be48473cc46122e7afbeda79aa6f9a6cc32daa25e1ee76b80e9bf98610c4bda7e9234fbbc225cd022508a08fa0199f47711f8dcf8655dd517eba27ba7bc8edbb44154d61546175d47b47edc918d4a3cff7242cf993c2f9b1001c01546ddd7ab0029f702490a271c45da18bf3d662badfc903a680768bce6275475e425f5577b8e74df2f0855a6a15117d52d82a1054e708b763d54aed2a99e6c66b761c5bbad102ac621553ef505de900b9328f0794ff13de5dc3a668e2e747949befc428242afa6e185d728e4dcd29e3e806fe5826ae89f82d9a6655008beaf8dae7ef376e4aa650894229bcf7ce24052cff666135870ebc52f3fdd63bfe425c8719d62efc75976588e59f580fb5e6a30d6322e342b2ac61e991558abef3e553551e86388ccc546ce0cc5a6bb3541966da57c77eda25d42de302e781323637a1a294fac6f73e518ada4025d8fcca9c3b4778cdbf4f22a76a1ea937067128d9efc69e9ec1d90211b8db70a386e7a042c1bdeeba57dee109e026bfe378f7b5e120dd060b4888d454d14b281620be68d3288765c1824556f009cc1a90affe2c9a87cfe8be54c1e67992d329d8f8609c284e01fe7fd84d06279bad0bf3c7f3a96fc199a66cffd863bc52e4943ebc1c3909270cd0842dcd16fbf2654b884234802bef8b09abab1316f9b91e8c8faaf5b362f1a0a99d3d56ad26fd8024b8fe8e821cae05b9819c6aefa273c49326222271fc6dc8b13a8c6db205b370bd67444747e2da90c2d764f6e3db6057f4e21f545f4b713fa562572f2e95ba3e91bcbb95b9abf5d8076078eadd5ab157453097f6014713417ce5511e14a3bc09bae0c35b731b94ed0680e573762e25817159962df4d4161d28f6cdaf2e3f03f3eb04d5b164aad8ff9d98225abe6f37e1f7de2d903ce7a2a0cdac437d08eaf2bb750c3eb8ac669d72a7d4d40d844b601621c072d345e016bb0cb63ac17f1bdda67f7c2de6bcaf5610331f185efda238c39236bf181d453c6fc22b8d64586dbfa7539deb8d87077eac370c0227767dec5aa6b8214c11a422137a94dd736d9cee1df0ceaeb8d1c87c104688866652b6ec778f43c5588f376acb875a5e73a264040521bf21e5f4f63ce485260be04d555f4034dc6a76c841bd8bf43dd8859211edf101b74f19ffe13d46be590a831ffe2ee8a54018b3c3d30e4f43d7fdba4978c58ecc79430aaa70ab7cd7e82ef4f2efda24836a7373a258624c42f1eb3d14f9983c52ffa9fb96b7b3f25d1d1e86c28c0d2b6a0199efb53f229752755921c4850ad93ba1d4316079d8b679f6c56e4b60e540d2860620a95efe9cb11a9781d27d8c13f68c09e515499370300d017afec76170fd67da8cb91d77d19ff02ab28ff304ac7b0255a7c763687581549fd47c7516e3e29c3b232a79ddc6f06e6bd85af9093949aa4a388d8c71135552eb6ceb1c69c691203ddd8b1dd5eb9fd260af8a41df38695bd24ca1ab0b81bfb84167afd0e8978eb1151a807a92d39aacb50a8d9389f726ae270e02628afc5bc1d3f2905528091d2622a0adf5fb0230918e792fd310a2cecd4e51350c551e0a5621893fca145c5bf2347409e4a1ef1b4cd37838d537a4cbc008d3d9664217c933bcfbd23aabea49a3838e8a06f88d02d4a016a4de5c916852b3feae802f52ecea857242311c0cfaa617c72b401900bd8c6a69cbf65be52bb9f3ebbc508a1e077e9bc05b509c9bb9d2fb51096509ee301dbf7b2bd8fa97fd3fde3d286c353dfcc6260c7323cfe7fa0e075e4bc4fe1df0336439e17a8ff3de15b245c97e3ed882eb9f61c091f29b1080cb579e9bbba2af2ae4502d778b65ab377e07ac5d286a0637c0df5a4bc24ec92aef8c1caf7c2fefbcedc7e969e6b9f0fcae9da9fd1a46cfc59e4cd8abbd953fc6121c076d7b9d940d213f893454afe034f79bcd3255c6b83bdc9983c4bc03052902bc9aaf209fe6c2b1350513a18c9506410559b218dfaf6779419ab944d1f2ee2b5b1a569e7e7fcfdc05f4753f0b7d46728a822bc0f4a92c44306dd018a5cffd6824c2ee0e1401d557a122c97a8fd172b4308404d603279ee073f5fb6f8f768cb87a9399ff2f1a6b353c601e7fc8e7f9b8e3e48190237c88d51aa005431e864f9ce8c4ef448f938fbb7b31349acfdb914fc81f0bca7053812b0cf940632c721448825b3caa39b564539371d84c7b3701ed8a552374379b88facf434d0f205774cc17dcc82857006fcecb7d8fa8e432514999002bccec1d6d67f7854487d64c2402e25d0f21006c0cff3bc9fd16a976b502019cedb49af0cf38790b3abad7c5df3dba61e59fab36516688c5ae7b1f67e91836def0ae1d889b072a885b66b2dc91d24d89fb8f414082b4bcf60b76b80c51adb0a9725ecc1a06cca735d9850056767026f81899580db4186f44d9208f4793730c6ea22410d031cc03ac88a186a5d019ef9ff7777d8f6764cb1514898b6670fb20b130cb9e2de04d8a62857b5ecc5e962c04fdcf5896826f7ef572bdbb909100e22be0b8bdab618802a9a97fa9a23776afd5b39e8a34f022b6c1047318df93295c3075edbb535373b216c762034d9542b811517416e93fe0f05cef61363eb6fef1ba981a78735c7d35f7fb92955339569919e0b438abbea689b879b4f87d2041108a69f3409ff0b97a4c9ddbc3301db6e9c131342f549e2ba5cea37807793d654f04029678c11668215949ee945ceef76a41dfc915752462c34b53bc7459c420a82c77ffd0647b632caf4dd732cf9cb71da9c9056fdd017abd6489e0d1801a71bbad20b708f73c25d499aab4f6a4ca30afb70</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调用百度地图api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js基础学习</title>
      <link href="/2021/121730907.html"/>
      <url>/2021/121730907.html</url>
      
        <content type="html"><![CDATA[<h3 id="以下教程都没有系统学习，只是单纯的用啥写啥"><a href="#以下教程都没有系统学习，只是单纯的用啥写啥" class="headerlink" title="以下教程都没有系统学习，只是单纯的用啥写啥"></a>以下教程都没有系统学习，只是单纯的用啥写啥</h3><pre class=" language-js"><code class="language-js">## json数据基本格式<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span><span class="token punctuation">[</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">'a1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'b1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'c1'</span><span class="token punctuation">:</span><span class="token number">2</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">'b1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'b2'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token string">'d'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// js 使用例子</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>     <span class="token comment" spellcheck="true">// var a=1;</span>    <span class="token comment" spellcheck="true">// var b=2;</span>        <span class="token comment" spellcheck="true">// window.alert(a+b);</span>         <span class="token comment" spellcheck="true">// document.write("您的浏览器支持JavaScript脚本!");</span>    <span class="token comment" spellcheck="true">// 先创建js数组</span>    <span class="token keyword">var</span> person<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"John"</span><span class="token punctuation">,</span>    <span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"Doe"</span><span class="token punctuation">,</span>    <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">,</span>    <span class="token string">"eyecolor"</span><span class="token punctuation">:</span><span class="token string">"blue"</span><span class="token punctuation">,</span>    <span class="token string">"test"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"a"</span><span class="token punctuation">:</span><span class="token string">"123"</span><span class="token punctuation">,</span>         <span class="token string">"b"</span><span class="token punctuation">:</span><span class="token string">"456"</span><span class="token punctuation">,</span>         <span class="token string">"c"</span><span class="token punctuation">:</span><span class="token string">"789"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">'d'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>         <span class="token string">'e'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>         <span class="token string">'f'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 取json里面的数据</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> person<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// document.write(i + person[i] +"&lt;br>");</span>                document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i  <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'hell owrd'</span> <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// document.write(person['test'].length+"&lt;br>");</span>        <span class="token comment" spellcheck="true">// 获取数组下标</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token string">"下标"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取数组里json</span>                <span class="token comment" spellcheck="true">// 获取单个&amp;#123;&amp;#125;数据 t是数组下标</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">"单个数组里的key"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 从单个数组里通过key获取value</span>                    <span class="token comment" spellcheck="true">// 获取数组里的value person['test'][t]是对象 i 是key</span>                    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"value"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//打印出key的value</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> person<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><pre class=" language-js"><code class="language-js">## js一个调用示例# 发送函数<span class="token keyword">function</span> <span class="token function">send_data</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span>url<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> xhr<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span>url<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> xhr<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span># 一个交互例子里面html的写法<span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>       <span class="token operator">&lt;</span>title<span class="token operator">></span>麦乐迪歌曲页面信息查询<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>       <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>     <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row clearfix"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-md-12 column"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>nav <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar navbar-default"</span> role<span class="token operator">=</span><span class="token string">"navigation"</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-header"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-toggle"</span> data<span class="token operator">-</span>toggle<span class="token operator">=</span><span class="token string">"collapse"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"#bs-example-navbar-collapse-1"</span><span class="token operator">></span> <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sr-only"</span><span class="token operator">></span>Toggle navigation<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-brand"</span> <span class="token operator">></span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"ktvName"</span><span class="token operator">></span>麦乐迪<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-header"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-toggle"</span> data<span class="token operator">-</span>toggle<span class="token operator">=</span><span class="token string">"collapse"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"#bs-example-navbar-collapse-1"</span><span class="token operator">></span> <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sr-only"</span><span class="token operator">></span>Toggle navigation<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-bar"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-brand"</span> <span class="token operator">></span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"total_number"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                                             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"collapse navbar-collapse"</span> id<span class="token operator">=</span><span class="token string">"bs-example-navbar-collapse-1"</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>form <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navbar-form navbar-right"</span> role<span class="token operator">=</span><span class="token string">"search"</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-group"</span><span class="token operator">></span>                                 <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-control"</span> id<span class="token operator">=</span><span class="token string">"music_singer_name"</span> <span class="token operator">/</span><span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"submit"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-default"</span>  onclick<span class="token operator">=</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span>搜索<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>                         <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"nav navbar-nav navbar-right"</span><span class="token operator">></span>                                                                                  <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                      <span class="token operator">&lt;</span><span class="token operator">/</span>nav<span class="token operator">></span>                 <span class="token operator">&lt;</span>table <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table table-striped"</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>thead<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr<span class="token operator">></span>                             <span class="token operator">&lt;</span>th<span class="token operator">></span>                                 编号                             <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span>                             <span class="token operator">&lt;</span>th<span class="token operator">></span>                                 歌曲名                             <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span>                             <span class="token operator">&lt;</span>th<span class="token operator">></span>                                 歌手名                             <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span>                                                      <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>thead<span class="token operator">></span>                      <span class="token operator">&lt;</span>tbody<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id1_0"</span><span class="token operator">></span> <span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id1_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id1_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                      <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id2_0"</span><span class="token operator">></span> <span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id2_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id2_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                      <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"error"</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id3_0"</span><span class="token operator">></span> <span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id3_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id3_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                     <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id4_0"</span><span class="token operator">></span> <span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id4_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id4_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                     <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id5_0"</span><span class="token operator">></span> <span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id5_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                             <span class="token operator">&lt;</span>td<span class="token operator">></span>                                 <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id5_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                      <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                         <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id6_0"</span><span class="token operator">></span> <span class="token number">6</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id6_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id6_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id7_0"</span><span class="token operator">></span> <span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id7_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id7_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"error"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id8_0"</span><span class="token operator">></span> <span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id8_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id8_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                   <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id9_0"</span><span class="token operator">></span> <span class="token number">9</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id9_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id9_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                   <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id10_0"</span><span class="token operator">></span> <span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id10_1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td<span class="token operator">></span>                                <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"id10_2"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                                                    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>tbody<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>                 <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"text-center"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col-md-12 column"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pagination"</span><span class="token operator">></span>                                                                <span class="token operator">&lt;</span>li<span class="token operator">></span>                                     <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span>页面<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                                <span class="token operator">&lt;</span>li<span class="token operator">></span>                                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> onclick<span class="token operator">=</span><span class="token string">"turn_page_down()"</span><span class="token operator">></span>上一页<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                                                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                                <span class="token operator">&lt;</span>li<span class="token operator">></span>                                     <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> id<span class="token operator">=</span><span class="token string">"page_num"</span><span class="token operator">></span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                                                    <span class="token operator">&lt;</span>li<span class="token operator">></span>                                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> onclick<span class="token operator">=</span><span class="token function">turn_page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span>下一页<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                                                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> jQuery <span class="token punctuation">(</span>Bootstrap 的 JavaScript 插件需要引入 jQuery<span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">></span>       <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://code.jquery.com/jquery.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包括所有已编译的插件 <span class="token operator">--</span><span class="token operator">></span>       <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/bootstrap.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span># 一个交互例子里面js的写法<span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表示搜索</span>            type<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            page_num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 获取ktv名字</span>            <span class="token keyword">var</span> ktv_name<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ktvName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将标签赋值到页面上</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"page_num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> page_num<span class="token punctuation">;</span>                       <span class="token keyword">var</span> music_singer_name<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"music_singer_name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// alert(music_singer_name)</span>            data<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token string">"ktv_name"</span><span class="token punctuation">:</span>ktv_name<span class="token punctuation">,</span>                <span class="token string">"page_num"</span><span class="token punctuation">:</span>page_num<span class="token punctuation">,</span>                <span class="token string">"music_name"</span><span class="token punctuation">:</span>music_singer_name<span class="token punctuation">,</span>                <span class="token string">"singer_name"</span><span class="token punctuation">:</span>music_singer_name<span class="token punctuation">,</span>                <span class="token string">"type"</span><span class="token punctuation">:</span>type            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 发送json数据</span>            <span class="token keyword">var</span> url<span class="token operator">=</span>port_url<span class="token operator">+</span><span class="token string">"gttx/ktvMusic"</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> res<span class="token operator">=</span><span class="token function">send_data</span><span class="token punctuation">(</span><span class="token string">"post"</span><span class="token punctuation">,</span>url<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 解析json数据</span>            res<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 接收到的数据处理</span>                <span class="token keyword">var</span> recevice_data<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key1 <span class="token keyword">in</span> recevice_data<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 歌曲名字列表</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>key1<span class="token operator">==</span><span class="token string">"music_list"</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                           <span class="token comment" spellcheck="true">// 歌曲列表</span>                        music_list<span class="token operator">=</span>recevice_data<span class="token punctuation">[</span>key1<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>music_list<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"没有查询到"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                                                      <span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> len1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>len1<span class="token operator">&lt;</span>music_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span>len1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                <span class="token keyword">var</span> length<span class="token operator">=</span>music_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                                <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">==</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                     <span class="token comment" spellcheck="true">// 添加到原文标签</span>                                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token operator">+</span><span class="token punctuation">(</span>len1<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"_1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> music_list<span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">;</span>                                    <span class="token comment" spellcheck="true">// alert(music_list[len1])</span>                                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token operator">+</span><span class="token punctuation">(</span>len1<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"_1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> music_list<span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">;</span>                                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> l<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>l<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">-</span>length<span class="token number">-1</span><span class="token punctuation">;</span>l<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                        <span class="token comment" spellcheck="true">// 放歌曲名字</span>                                        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">-</span>l<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"_1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>                                        <span class="token comment" spellcheck="true">// 放歌手名字</span>                                        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">-</span>l<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"_2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                                                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                                                                           <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                                            <span class="token comment" spellcheck="true">// 歌手名字列表</span>                    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>key1<span class="token operator">==</span><span class="token string">"singer_list"</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 歌手列表</span>                        singer_list<span class="token operator">=</span>recevice_data<span class="token punctuation">[</span>key1<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> len2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>len2<span class="token operator">&lt;</span>singer_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span>len2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 添加到原文标签</span>                            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token operator">+</span><span class="token punctuation">(</span>len2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"_2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> singer_list<span class="token punctuation">[</span>len2<span class="token punctuation">]</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// alert(music_list[len1])</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js基础 </tag>
            
            <tag> js基本学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker使用</title>
      <link href="/2021/121543906.html"/>
      <url>/2021/121543906.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="1-手工构建docker镜像"><a href="#1-手工构建docker镜像" class="headerlink" title="1. 手工构建docker镜像"></a>1. 手工构建docker镜像</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## docker 基础命令 docker run docker commit docker exec </span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 获取镜像</span>docker pull ubuntu <span class="token comment" spellcheck="true"># 获取镜像ubuntu镜像</span><span class="token comment" spellcheck="true">## 创建并自动启动容器</span>docker run -it ubuntu /bin/bash <span class="token comment" spellcheck="true"># 以bash的方式启动容器</span>docker run -it ubuntu  <span class="token comment" spellcheck="true"># 直接以镜像默认命令使用容器</span><span class="token comment" spellcheck="true">## 启动容器</span>docker start <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 关闭容器</span>docker stop <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 重启容器</span>docker restart <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 导出和导入容器</span><span class="token comment" spellcheck="true"># 导出容器</span>docker <span class="token function">export</span> 1e560fca3906 <span class="token operator">></span> ubuntu.tar<span class="token comment" spellcheck="true"># 导入容器</span><span class="token function">cat</span> docker/ubuntu.tar <span class="token operator">|</span> docker <span class="token function">import</span> - test/ubuntu:v1<span class="token comment" spellcheck="true">## 删除容器</span><span class="token function">cat</span> docker/ubuntu.tar <span class="token operator">|</span> docker <span class="token function">import</span> - test/ubuntu:v1<span class="token comment" spellcheck="true">## 退出容器自动删除容器内容</span>docker run --rm <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## docker bash运行多个命令方法</span>docker run -itd  --name test150 apache2:v20 /bin/sh -c <span class="token string">'service apache2 start &amp;&amp; /bin/bash'</span></code></pre><h3 id="2-dockerfile构建dokcer镜像"><a href="#2-dockerfile构建dokcer镜像" class="headerlink" title="2. dockerfile构建dokcer镜像"></a>2. dockerfile构建dokcer镜像</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 注明RUN命令可以有多个,CMD和ENTRYPOINT命令只能有一个</span>FROM nginxRUN <span class="token operator">&lt;</span>命令行命令<span class="token operator">></span> <span class="token comment" spellcheck="true"># &lt;命令行命令> 等同于，在终端操作的 shell 命令。</span>RUN <span class="token punctuation">[</span><span class="token string">"可执行文件"</span>, <span class="token string">"参数1"</span>, <span class="token string">"参数2"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 例如：RUN ["./test.php", "dev", "offline"] 等价于 RUN ./test.php dev offline</span><span class="token comment" spellcheck="true">## CMD和ENTRYPOINT命令融合写法</span>ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"nginx"</span>, <span class="token string">"-c"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 定参</span>CMD <span class="token punctuation">[</span><span class="token string">"/etc/nginx/nginx.conf"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 变参 </span><span class="token comment" spellcheck="true">## VOLUME匿名挂载 https://www.jianshu.com/p/738a6455b804</span>VOLUME <span class="token punctuation">[</span><span class="token string">"&lt;路径1>"</span>, <span class="token string">"&lt;路径2>"</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>VOLUME <span class="token operator">&lt;</span>路径<span class="token operator">></span><span class="token comment" spellcheck="true">## CMD 用法</span>CMD <span class="token punctuation">[</span> <span class="token string">"/bin/bash"</span> ,<span class="token string">"/start.sh"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 在容器里/目录下写上start.sh脚本，脚本的最后一行需要加上/bin/bash 因为# docker只运行在pid为1的状态下 所有需要开启一个bash</span>CMD /etc/init.d/apache2 start <span class="token operator">&amp;&amp;</span> /bin/bash</code></pre><h3 id="3-docker-compose的使用"><a href="#3-docker-compose的使用" class="headerlink" title="3. docker-compose的使用"></a>3. docker-compose的使用</h3><pre><code>待写</code></pre>]]></content>
      
      
      <categories>
          
          <category> dokcer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker基础 </tag>
            
            <tag> docker使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5_detect.py重写</title>
      <link href="/2021/121321986.html"/>
      <url>/2021/121321986.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cdb1f6ca7476f6bdb94b28c3b6671fede8da563cb74f45fcfffe50c29aac650a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5_detect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站域名截图</title>
      <link href="/2021/121340417.html"/>
      <url>/2021/121340417.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ff54e745a3bff0891acba04b7c1a2b486a01da90dff1b21d4b5df23ea2db8543"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站域名截图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go语言入门</title>
      <link href="/2021/12082134.html"/>
      <url>/2021/12082134.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本基础和进阶</title>
      <link href="/2021/120755240.html"/>
      <url>/2021/120755240.html</url>
      
        <content type="html"><![CDATA[<h1 id="shell-脚本范例"><a href="#shell-脚本范例" class="headerlink" title="shell 脚本范例"></a>shell 脚本范例</h1><h3 id="范例1"><a href="#范例1" class="headerlink" title="范例1"></a>范例1</h3><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>datename<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d%H%M%S<span class="token variable">)</span></span>new_id<span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl 'https://www.bbiyin.com/api/default.ashx?area<span class="token operator">=</span>6' <span class="token operator">|</span> jq .list<span class="token punctuation">[</span><span class="token punctuation">]</span>.ri<span class="token variable">)</span></span>"</span> new_name<span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl 'https://www.bbiyin.com/api/default.ashx?area<span class="token operator">=</span>6' <span class="token operator">|</span> jq .list<span class="token punctuation">[</span><span class="token punctuation">]</span>.nn<span class="token variable">)</span></span>"</span> new_id_list<span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$new_id</span><span class="token punctuation">)</span>new_name_list<span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$new_name</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 遍历循环</span><span class="token keyword">echo</span> <span class="token variable">$new_id</span>len<span class="token operator">=</span>$<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;#new_id_list[*]&amp;#125;</span><span class="token keyword">for</span><span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>$len<span class="token number">-1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    id<span class="token operator">=</span>$<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;new_id_list[i]&amp;#125;</span>    <span class="token keyword">echo</span> <span class="token variable">$id</span>    url<span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl https://www.biandie.com/api/getlivestream.ashx?cno<span class="token operator">=</span>$id <span class="token operator">|</span> jq .flvaddr<span class="token variable">)</span></span>"</span>     name<span class="token operator">=</span>$<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;new_name_list[i]&amp;#125;</span>        return_msg<span class="token operator">=</span><span class="token string">"&amp;#123;        'id': <span class="token variable">$id</span>,        'name':<span class="token variable">$name</span>,        'path':<span class="token variable">$url</span>        &amp;#125;,"</span>    <span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$return_msg</span>"</span> <span class="token operator">>></span> /home/sh/jiechang/middle/<span class="token string">"hot<span class="token variable">$datename</span>"</span><span class="token keyword">done</span><span class="token comment" spellcheck="true"># 第一行添加一个[</span><span class="token function">sed</span> -i <span class="token string">'1i\['</span> /home/sh/jiechang/middle/<span class="token string">"hot<span class="token variable">$datename</span>"</span><span class="token comment" spellcheck="true">#sed -i '1i\[' file.txt</span><span class="token comment" spellcheck="true"># 最后一行删除,</span><span class="token function">sed</span> -i <span class="token string">'<span class="token variable">$s</span>/&amp;#125;./&amp;#125;/'</span> /home/sh/jiechang/middle/<span class="token string">"hot<span class="token variable">$datename</span>"</span><span class="token comment" spellcheck="true"># 最后一行添加]</span><span class="token function">sed</span> -i <span class="token string">'<span class="token variable">$a</span>\]'</span>  /home/sh/jiechang/middle/<span class="token string">"hot<span class="token variable">$datename</span>"</span><span class="token comment" spellcheck="true"># 移动到all目录下面</span><span class="token function">mv</span> /home/sh/jiechang/middle/* /home/sh/jiechang/all</code></pre><h3 id="范例2"><a href="#范例2" class="headerlink" title="范例2"></a>范例2</h3><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>datename<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d%H%M%S<span class="token variable">)</span></span>i<span class="token operator">=</span>1<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token keyword">do</span><span class="token comment" spellcheck="true"># 获取code</span>code<span class="token operator">=</span><span class="token string">"$(curl -H "</span>Host: app.fengbolive.com<span class="token string">" -H "</span>Cookie: PHPSESSID<span class="token operator">=</span>uvfck3ntokjvm3obltkifmpj15<span class="token string">" -H "</span>accept-language: zh-CN,zh<span class="token punctuation">;</span>q<span class="token operator">=</span>0.8<span class="token string">" -H "</span>user-agent: Mozilla/5.0 <span class="token punctuation">(</span>Linux<span class="token punctuation">;</span> U<span class="token punctuation">;</span> Android 5.0.2<span class="token punctuation">;</span> zh-cn<span class="token punctuation">;</span> MI 2S Build/LRX22G<span class="token punctuation">)</span> AppleWebKit/534.30 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Version/4.0 Mobile Safari/534.30<span class="token string">" --compressed "</span>https://app.fengbolive.com/hot?page<span class="token operator">=</span><span class="token string">"<span class="token variable">$i</span>"</span><span class="token operator">&amp;</span>qid<span class="token operator">=</span>25005<span class="token operator">&amp;</span>reg_mac<span class="token operator">=</span>80435af3c787563341cbbf6d38ee1267<span class="token operator">&amp;</span>token<span class="token operator">=</span>a5462ea86a33493ad7f6b5421077853e<span class="token operator">&amp;</span>user_id<span class="token operator">=</span>912049015<span class="token operator">&amp;</span>version<span class="token operator">=</span>2.5.0<span class="token operator">&amp;</span>languageCode<span class="token operator">=</span>zh-CN<span class="token operator">&amp;</span>regionCode<span class="token operator">=</span>CN<span class="token operator">&amp;</span>hot_type<span class="token operator">=</span>1<span class="token string">"| jq .code)"</span><span class="token keyword">let</span> i+<span class="token operator">=</span>1<span class="token comment" spellcheck="true"># 写入到文件中</span><span class="token comment" spellcheck="true">#echo "----------"</span><span class="token comment" spellcheck="true">#echo $code</span><span class="token comment" spellcheck="true">#echo $i</span><span class="token comment" spellcheck="true">#echo "----------"</span><span class="token comment" spellcheck="true"># | jq .data.list >> /home/sh/miaobo/hotlive/$datename</span><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span>code<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span><span class="token keyword">then</span>    curl -H <span class="token string">"Host: app.fengbolive.com"</span> -H <span class="token string">"Cookie: PHPSESSID=uvfck3ntokjvm3obltkifmpj15"</span> -H <span class="token string">"accept-language: zh-CN,zh;q=0.8"</span> -H <span class="token string">"user-agent: Mozilla/5.0 (Linux; U; Android 5.0.2; zh-cn; MI 2S Build/LRX22G) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"</span> --compressed <span class="token string">"https://app.fengbolive.com/hot?page="</span><span class="token variable">$i</span><span class="token string">"&amp;qid=25005&amp;reg_mac=80435af3c787563341cbbf6d38ee1267&amp;token=a5462ea86a33493ad7f6b5421077853e&amp;user_id=912049015&amp;version=2.5.0&amp;languageCode=zh-CN&amp;regionCode=CN&amp;hot_type=1"</span><span class="token operator">|</span> jq .info <span class="token operator">>></span> /home/sh/fengbo/hotlive/<span class="token variable">$datename</span><span class="token keyword">elif</span> <span class="token variable"><span class="token punctuation">((</span>code<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span><span class="token keyword">then</span><span class="token function">sed</span> -i <span class="token string">'<span class="token variable">$d</span>'</span> /home/sh/fengbo/hotlive/<span class="token variable">$datename</span><span class="token keyword">break</span><span class="token keyword">fi</span>         <span class="token keyword">done</span></code></pre><h3 id="范例三"><a href="#范例三" class="headerlink" title="范例三"></a>范例三</h3><pre class=" language-BASH"><code class="language-BASH">#!/bin/bash# 获取时间datename=$(date +%Y%m%d%H%M%S)# 获取总页数pages="$(curl -H "Host: external.fengbolive.com" -H "accept-language: zh-CN,zh;q=0.8" -H "user-agent: Mozilla/5.0 (Linux; U; Android 5.0.2; zh-cn; MI 2S Build/LRX22G) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30" --compressed "https://external.fengbolive.com/cgi-bin/get_new_anchor_list.fcgi?&pid=161&qid=25005&reg_mac=80435af3c787563341cbbf6d38ee1267&user_id=912049084&ver=2.5.0&page=1&0.9126499273910719&languageCode=zh-CN&regionCode=CN"| jq .pages)"echo $pagesfor((i=1;i<=$pages;i++));do#echo "=-------------"#echo $i#echo "=-------------"    curl -H "Host: external.fengbolive.com" -H "accept-language: zh-CN,zh;q=0.8" -H "user-agent: Mozilla/5.0 (Linux; U; Android 5.0.2; zh-cn; MI 2S Build/LRX22G) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30" --compressed "https://external.fengbolive.com/cgi-bin/get_new_anchor_list.fcgi?&pid=161&qid=25005&reg_mac=80435af3c787563341cbbf6d38ee1267&user_id=912049084&ver=2.5.0&page="$i"&0.9126499273910719&languageCode=zh-CN&regionCode=CN"| jq .info >> /home/sh/fengbo/newlive/$datenamedone# | jq .data.list >> /home/sh/miaobo/hotlive/$datename</code></pre><h1 id="shell脚本基础语法"><a href="#shell脚本基础语法" class="headerlink" title="shell脚本基础语法"></a>shell脚本基础语法</h1>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> shell基础 </tag>
            
            <tag> shell进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5训练项目</title>
      <link href="/2021/112926093.html"/>
      <url>/2021/112926093.html</url>
      
        <content type="html"><![CDATA[<h4 id="yolov5命令训练命令"><a href="#yolov5命令训练命令" class="headerlink" title="yolov5命令训练命令"></a>yolov5命令训练命令</h4><pre class=" language-python"><code class="language-python"><span class="token operator">-</span>m torch<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>launch 指定并行的方式<span class="token punctuation">;</span> 、<span class="token operator">-</span><span class="token operator">-</span>nproc_per_node <span class="token number">2</span> 指定的GPU是两块；s<span class="token operator">-</span><span class="token operator">-</span>batch <span class="token number">16</span> 批处理大小加快训练速度；<span class="token operator">-</span><span class="token operator">-</span>cfg <span class="token punctuation">.</span><span class="token operator">/</span>models<span class="token operator">/</span>yolov5l<span class="token punctuation">.</span>yaml是指定加载的神经网络模型；<span class="token operator">-</span><span class="token operator">-</span>data <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>maskdata<span class="token operator">/</span>mask<span class="token punctuation">.</span>yaml 是指定训练集位置；<span class="token operator">-</span><span class="token operator">-</span>project <span class="token punctuation">.</span><span class="token operator">/</span>weight<span class="token operator">/</span>mask 是指定生成的训练模型位置；<span class="token operator">-</span><span class="token operator">-</span>device <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span>表示使用了GPU <span class="token number">0</span>和GPU1<span class="token operator">-</span><span class="token operator">-</span> <span class="token operator">-</span><span class="token operator">-</span>weights face<span class="token punctuation">.</span>pt 表示基于的基础模型python3 <span class="token operator">-</span>m torch<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>launch <span class="token operator">-</span><span class="token operator">-</span>nproc_per_node <span class="token number">2</span> train<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>batch <span class="token number">32</span> <span class="token operator">-</span><span class="token operator">-</span>cfg <span class="token punctuation">.</span><span class="token operator">/</span>models<span class="token operator">/</span>yolov5l<span class="token punctuation">.</span>yaml <span class="token operator">-</span><span class="token operator">-</span>data <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>FaceTrain<span class="token operator">/</span>face<span class="token punctuation">.</span>yaml  <span class="token operator">-</span><span class="token operator">-</span>project <span class="token punctuation">.</span><span class="token operator">/</span>weight</code></pre><h1 id="基于yolov5训练项目-基于python脚本"><a href="#基于yolov5训练项目-基于python脚本" class="headerlink" title="基于yolov5训练项目 基于python脚本"></a>基于yolov5训练项目 基于python脚本</h1><h3 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1. 获取项目</span><span class="token function">git</span> clone http://172.16.0.8:6001/shixiuhai/yolov5_train.git<span class="token comment" spellcheck="true"># 2. 运行环境 python3.8.6-3.8.9</span><span class="token comment" spellcheck="true"># 3. 配置虚拟环境（windows）</span>pip <span class="token function">install</span> virtualenvvirtualenv <span class="token function">env</span> <span class="token comment" spellcheck="true"># env是虚拟环境的名字</span><span class="token comment" spellcheck="true"># 4.  进入虚拟环境</span><span class="token function">env</span> /scripts/active<span class="token punctuation">(</span>windows<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 5. 环境依赖位置在yolov5里面 requirements.txt 安装依赖的方法 pip install -r yolov5_deal_data/yolov5/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ # 指定阿里源进行安装</span><span class="token comment" spellcheck="true"># 6. 完成以上步骤后即可运行代码</span></code></pre><h3 id="代码介绍"><a href="#代码介绍" class="headerlink" title="代码介绍"></a>代码介绍</h3><p>项目的根目录如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/yolov5xunliangeng.PNG"></p><h1 id="1-基于voc数据集转换为txt数据集的方案"><a href="#1-基于voc数据集转换为txt数据集的方案" class="headerlink" title="1. 基于voc数据集转换为txt数据集的方案"></a><code>1. 基于voc数据集转换为txt数据集的方案</code></h1><p>1.1 由于网络上可以参考的数据集的格式大部分都是voc数据集格式，这里我们需要一种可以将voc数据集转换为txt数据集的快速方案</p><p>代码位置在：</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/voctoyolov5.png"></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 代码实现如下，是从xml文件中提取关键关键内容到txt</span><span class="token comment" spellcheck="true"># xml_path 是需要转换的xml文件路径</span><span class="token comment" spellcheck="true"># txt_path 是生成的yolov5标注的txt文件存放路径位置</span><span class="token comment" spellcheck="true"># cls_id 是训练多个类别时，自行设定的类的顺序，这个顺序从 0 开始 比如 0代表A类 1代表B类 2代表C类 依次类推</span><span class="token triple-quoted-string string">"""实现voc的xml数据集转换为txt数据集"""</span><span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET<span class="token keyword">import</span> pickle<span class="token keyword">import</span> os<span class="token keyword">from</span> os <span class="token keyword">import</span> listdir<span class="token punctuation">,</span> getcwd<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> join<span class="token comment" spellcheck="true">## 0安全帽 1卡车 2 脚手架</span><span class="token comment" spellcheck="true"># 改变坐标格式 将做标里面的size 转换对应到txt里面的数据</span><span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> box<span class="token punctuation">)</span><span class="token punctuation">:</span>    dw <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">(</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    dh <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">(</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span>     y <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span>     w <span class="token operator">=</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> box<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    h <span class="token operator">=</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> box<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    x <span class="token operator">=</span> x<span class="token operator">*</span>dw    w <span class="token operator">=</span> w<span class="token operator">*</span>dw    y <span class="token operator">=</span> y<span class="token operator">*</span>dh    h <span class="token operator">=</span> h<span class="token operator">*</span>dh    <span class="token keyword">return</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span>xml_path <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/VOC2028/VOC2028/Annotations/"</span>txt_path <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/VOC2028/VOC2028/labels/"</span><span class="token keyword">def</span> <span class="token function">convert_annotation</span><span class="token punctuation">(</span>xml_path<span class="token punctuation">,</span>txt_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>txt_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>txt_path<span class="token punctuation">)</span>    <span class="token keyword">for</span> image_id <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>xml_path<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#         print(xml_path+image_id)</span>        xml_file <span class="token operator">=</span> open<span class="token punctuation">(</span>xml_path<span class="token operator">+</span>image_id<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        txt_file <span class="token operator">=</span> open<span class="token punctuation">(</span>txt_path<span class="token operator">+</span>image_id<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        tree<span class="token operator">=</span>ET<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xml_file<span class="token punctuation">)</span>        root <span class="token operator">=</span> tree<span class="token punctuation">.</span>getroot<span class="token punctuation">(</span><span class="token punctuation">)</span>        size <span class="token operator">=</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'size'</span><span class="token punctuation">)</span>        w <span class="token operator">=</span> int<span class="token punctuation">(</span>size<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        h <span class="token operator">=</span> int<span class="token punctuation">(</span>size<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">for</span> obj <span class="token keyword">in</span> root<span class="token punctuation">.</span>iter<span class="token punctuation">(</span><span class="token string">'object'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># difficult = obj.find('difficult').text</span>            <span class="token comment" spellcheck="true"># difficult=0</span>            <span class="token comment" spellcheck="true"># 目标名字</span>            <span class="token comment" spellcheck="true">#cls = obj.find('name').text</span>            <span class="token comment" spellcheck="true"># cls_id = obj.index(cls)</span>            <span class="token comment" spellcheck="true"># print(cls_id)</span>            <span class="token comment" spellcheck="true"># if cls=='mask':</span>            <span class="token comment" spellcheck="true">#     cls_id=0</span>            <span class="token comment" spellcheck="true"># elif cls=='nomask':</span>            <span class="token comment" spellcheck="true">#     cls_id=1</span>            <span class="token comment" spellcheck="true"># 获取做标相关数值</span>            <span class="token comment" spellcheck="true"># cls_id 目标的位置 0 1 2</span>            cls_id<span class="token operator">=</span><span class="token number">0</span>            xmlbox <span class="token operator">=</span> obj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span>                    b <span class="token operator">=</span> <span class="token punctuation">(</span>float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>xmlbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>            bb <span class="token operator">=</span> convert<span class="token punctuation">(</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>            txt_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>cls_id<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> bb<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>convert_annotation<span class="token punctuation">(</span>xml_path<span class="token punctuation">,</span>txt_path<span class="token punctuation">)</span></code></pre><h1 id="2-基于已有模型的再次训练"><a href="#2-基于已有模型的再次训练" class="headerlink" title="2. 基于已有模型的再次训练"></a><code>2. 基于已有模型的再次训练</code></h1><p>2.1 代码位置如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/yolov5banzidong%E8%AE%AD%E7%BB%83.png"></p><p>2.2 运行方法</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1. 删除sourceimages targetimages targetlabels里面所有的内容</span><span class="token comment" spellcheck="true"># 2. 将所需要的进行自动标注的图片放到sourceimages文件夹中</span><span class="token comment" spellcheck="true"># 3. 已经训练好的模型放置位置在yolov5/mydata/models/ago_models (这个路径是相对与根目录的相对路径)</span><span class="token comment" spellcheck="true"># 4. 运行make_images_to_labels_1.py 会进行自动标注</span><span class="token comment" spellcheck="true"># 5. 进入到targetimages这个文件夹中将感觉有问题的图片进行删除</span><span class="token comment" spellcheck="true"># 6. 运行del_unconfidence_labels_2.py 会删除不信任的图片</span><span class="token comment" spellcheck="true"># 7. maketrain_3.py 跳过，目前已经不使用了</span></code></pre><h1 id="3-下载部分网站上的训练图片"><a href="#3-下载部分网站上的训练图片" class="headerlink" title="3. 下载部分网站上的训练图片"></a><code>3. 下载部分网站上的训练图片</code></h1><blockquote><p>代码的位置在项目如下图所示：其中代码适用的网站只有</p><p># 素材1 <a href="https://sc.orsoon.com/search/0-%E5%90%B8%E7%83%9F-0-0-0-0-0-0-0-9-0-0-0-0-3.html">https://sc.orsoon.com/search/0-%E5%90%B8%E7%83%9F-0-0-0-0-0-0-0-9-0-0-0-0-3.html</a></p><p># 素材2 <a href="https://www.pexels.com/zh-cn/searc">https://www.pexels.com/zh-cn/searc</a></p><p>因为是简单的爬取方案后续考虑采用Scrapy框架优化</p><p>代码图片保存路径fileurl=”C:/Users/Administrator/Desktop/“+str(a)+’.jpg’</p><p>其中C:/Users/Administrator/Desktop/是保存在计算机中的路径</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/asdfasdfasf.png"></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> urlopen<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> requests<span class="token comment" spellcheck="true"># 发送请求返回页面标签</span>response <span class="token operator">=</span> urlopen<span class="token punctuation">(</span><span class="token string">"https://sc.orsoon.com/search/0-%E5%90%B8%E7%83%9F-0-0-0-0-0-0-0-9-0-0-0-0-1.html"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 以utf-8编码格式读取response数据</span>response <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(response)</span><span class="token comment" spellcheck="true"># # 使用BeautifulSoup截取</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(soup)</span><span class="token comment" spellcheck="true"># print(soup)</span><span class="token comment" spellcheck="true"># # 截取所有img标签</span><span class="token comment" spellcheck="true"># 定义一个存放链接地址的列表</span>images_url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># print(soup.find_all("img"))</span><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        images_url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        images_url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token operator">=</span><span class="token number">1000</span><span class="token keyword">for</span> i <span class="token keyword">in</span> images_url_list<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 进行下载存储</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 进行下载链接get</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    fileurl<span class="token operator">=</span><span class="token string">"C:/Users/Administrator/Desktop/"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'.jpg'</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>fileurl<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(item.get("data-original"))</span>    <span class="token comment" spellcheck="true"># print(item.attrs.get("data-original"))</span><span class="token comment" spellcheck="true"># # 文件名称</span><span class="token comment" spellcheck="true"># a = 0</span><span class="token comment" spellcheck="true"># # 遍历img标签集和</span><span class="token comment" spellcheck="true"># for item in soup.find_all("img"):</span><span class="token comment" spellcheck="true">#     print(item.attrs.get("src"))</span><span class="token comment" spellcheck="true">#     # 下载图片</span><span class="token comment" spellcheck="true">#     # 下载图片保存的位置及名称</span><span class="token comment" spellcheck="true">#     a += 1;</span><span class="token comment" spellcheck="true">#     fileurl = "C:/Users/Administrator/Desktop/" + str(a) + ".jpg"</span><span class="token comment" spellcheck="true">#     # 写入保存</span><span class="token comment" spellcheck="true">#     r = requests.get(item.attrs.get("src"))</span><span class="token comment" spellcheck="true">#     with open(fileurl, 'wb') as f:</span><span class="token comment" spellcheck="true">#         f.write(r.content)</span><span class="token comment" spellcheck="true"># https://photoos.macsc.com/180504/180504_99/wiqgkfDV0r_small.jpg</span><span class="token comment" spellcheck="true"># https://photoos.macsc.com/180504/180504_99/wiqgkfDV0r_small.jpg</span><span class="token comment" spellcheck="true"># 素材1 https://sc.orsoon.com/search/0-%E5%90%B8%E7%83%9F-0-0-0-0-0-0-0-9-0-0-0-0-3.html</span><span class="token comment" spellcheck="true"># 素材2 https://www.pexels.com/zh-cn/searc</span></code></pre><h1 id="4-基于命令的方式对数据集进行训练"><a href="#4-基于命令的方式对数据集进行训练" class="headerlink" title="4. 基于命令的方式对数据集进行训练"></a><code>4. 基于命令的方式对数据集进行训练</code></h1><h3 id="命令训练"><a href="#命令训练" class="headerlink" title="命令训练"></a>命令训练</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1. 这是一种基于双GPU可加速的训练方案</span><span class="token comment" spellcheck="true"># 2.参数介绍</span>-m torch.distributed.launch 指定并行的方式<span class="token punctuation">;</span> 、--nproc_per_node 2 指定的GPU是两块；--batch 16 批处理大小；--cfg ./models/yolov5l.yaml是指定加载的神经网络模型；--data <span class="token punctuation">..</span>/maskdata/mask.yaml 是指定训练集位置；--project ./weight/mask 是指定生成的训练模型位置；--device 0,1表示使用了GPU 0和GPU1python3 -m torch.distributed.launch --nproc_per_node 2 train.py --batch 16 --cfg ./models/yolov5l.yaml --data <span class="token punctuation">..</span>/maskdata/mask.yaml  --project ./weight/mask  --device 0,1</code></pre><blockquote><p>yolov5l.yaml内容参考如下图所示 其中最重要需要修改的就是nc，nc的选择根据实际我们训练的总类数进行选择</p><p>关于神经网络对模型准确性(在640尺寸上)的排序由小到大为 5n&lt;5s&lt;5m&lt;5l&lt;5x</p><p>关于神经网络对模型准确性(在1280尺寸上)的排序由小到大为 5n6&lt;5s6&lt;5m6&lt;5l6&lt;5x6</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/yolov5xunlianxuanzengshengjianwangl.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/yolov.PNG"></p><h3 id="训练中简单的可视化"><a href="#训练中简单的可视化" class="headerlink" title="训练中简单的可视化"></a>训练中简单的可视化</h3><blockquote><p>因为yolov5里面自带tensorboard，所有tensorboard的可视化</p></blockquote><pre class=" language-bash"><code class="language-bash">tensorboard --logdir<span class="token operator">=</span>runs --host 0.0.0.0 <span class="token comment" spellcheck="true"># runs 在实际中是模型生成的路径即为上述训练过程中--project指定的 ./weight/mask</span>在实际路径的选择上可以选择相对路径也可以为绝对路径</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5 </tag>
            
            <tag> yolov5训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于yolov5的视频识别推流截图接口</title>
      <link href="/2021/112911863.html"/>
      <url>/2021/112911863.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/video_interface.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载本文项目</a></p><p>[TOC]</p><h3 id="1-flask-app-1-py分析"><a href="#1-flask-app-1-py分析" class="headerlink" title="1. flask_app_1.py分析"></a>1. flask_app_1.py分析</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""通过此flask 接口调用多个函数实现功能"""</span><span class="token keyword">from</span> class_app_3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">import</span> torch<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token comment" spellcheck="true"># from torch._C import device</span><span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> function_app_2 <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token comment" spellcheck="true"># 导入function_app_2.py里面所有的函数</span><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducerserver <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token string">"&amp;#123;'message': 'None'&amp;#125;"</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        type <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span>        <span class="token triple-quoted-string string">"""        将传入的字符 type 传做为函数去调用function_app_2.py 下面代码的意思就是函数调用函数 smoke(information)        """</span>        eval<span class="token punctuation">(</span>type <span class="token operator">+</span> <span class="token string">"(%s)"</span><span class="token operator">%</span>information<span class="token punctuation">)</span>         <span class="token keyword">except</span>  TypeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'no this function or function error'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'result':'1'&amp;#125;)</span>    <span class="token comment" spellcheck="true"># return json.dumps(information,ensure_ascii=False)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    启动flask服务    """</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span>    </code></pre><h3 id="2-function-app-2-py分析"><a href="#2-function-app-2-py分析" class="headerlink" title="2. function_app_2.py分析"></a>2. function_app_2.py分析</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""flask接口传入的数据会在这里进行处理"""</span><span class="token keyword">from</span> class_app_3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> json<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token triple-quoted-string string">"""kafka 服务器地址等相关信息"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span><span class="token triple-quoted-string string">"""调用接口的信息"""</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://localhost:5000/gttx/objectrecognition"</span><span class="token keyword">def</span> <span class="token function">smoke</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    data 是一个json字典数据流    这里的传入的数据格式是    'path' : 'path',      'id' :'4',    'type':'smoke',    'status':'0',    'confidence': '0.3'    """</span>    <span class="token triple-quoted-string string">"""判断kafka消息"""</span>    <span class="token comment" spellcheck="true"># 对象字符串的名字 比如 obj_smoke_4</span>    obj_name_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'obj'</span><span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 判断当前状态</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 发送关闭状态到kafka</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(data['type']+data['id']))</span>        <span class="token comment" spellcheck="true"># 结束这个flask进程</span>        <span class="token keyword">return</span> None        <span class="token comment" spellcheck="true"># status_value 表示status状态，当status状态等于1的时候创建对象</span>    <span class="token keyword">elif</span> data<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""将关闭状态发送给kafka服务器 为了避免同一个对象创建两次"""</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(data['type']+data['id']))</span>        <span class="token triple-quoted-string string">""" 将开启状态发送给kafka服务器 为了避免同一个对象创建两次"""</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'1'&amp;#125;,server_ip,(data['type']+data['id']))</span>                <span class="token triple-quoted-string string">"""创建对象"""</span>        <span class="token comment" spellcheck="true"># path,id,type,confidence,obj_name_string)</span>        <span class="token comment" spellcheck="true"># path(视频路径), id(摄像头编号), type(选择的模型类型),confidence（模型识别信任度）,obj_name_string（对象名的字符串形式）</span>        obj_name <span class="token operator">=</span> vars<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>obj_name_string<span class="token punctuation">]</span> <span class="token operator">=</span> Process_video<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'confidence'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>obj_name_string<span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""调用一下 是否开关的心跳接口 方法"""</span>        <span class="token comment" spellcheck="true"># 对象调用一下是否开关的心跳接口</span>        <span class="token comment" spellcheck="true"># obj_status(无需传入参数)</span>        MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>obj_status<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""调用一下 错误自动重启 方法"""</span>        <span class="token comment" spellcheck="true"># obj_restart(interface_url,data)</span>        <span class="token comment" spellcheck="true"># MyThread(obj_name.obj_restart,args=(interfaceurl,data,)).start()</span>        <span class="token triple-quoted-string string">"""调用一下 视频拼接_标出对象_rtmp推流 方法"""</span>         <span class="token comment" spellcheck="true"># 传入的参数是(video_fps,rtmp_fps) video_frp是解析视频的帧率,rtmp_fps是推流帧率</span>        MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>video_mark_savepicture_push<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token keyword">def</span> <span class="token function">person</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    obj_name <span class="token operator">=</span> vars<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'obj'</span><span class="token operator">+</span><span class="token string">'%s'</span><span class="token operator">%</span>data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> Process_video<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>test1<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mask</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">other</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><h3 id="3-class-app-3-py分析"><a href="#3-class-app-3-py分析" class="headerlink" title="3. class_app_3.py分析"></a>3. class_app_3.py分析</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""导入相关的库和函数"""</span><span class="token keyword">from</span> logging <span class="token keyword">import</span> error<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Lock<span class="token punctuation">,</span> Thread<span class="token keyword">import</span> os<span class="token keyword">import</span> cv2 <span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">from</span> torch<span class="token punctuation">.</span>_C <span class="token keyword">import</span>  device<span class="token keyword">import</span> torch<span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageDraw<span class="token punctuation">,</span>Image<span class="token punctuation">,</span>ImageFont<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> subprocess<span class="token triple-quoted-string string">"""kafka 服务器地址等相关信息"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span><span class="token triple-quoted-string string">"""这是一个对视频进行处理的类算法基于yolov5 训练框架基于pytorch"""</span><span class="token comment" spellcheck="true"># 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true"># 'id' :'3',</span><span class="token comment" spellcheck="true"># 'type':'smoke',</span><span class="token comment" spellcheck="true"># 'status':'1',</span><span class="token comment" spellcheck="true"># 'confidence': '0.5'</span><span class="token keyword">class</span> <span class="token class-name">Process_video</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""类初始化的变量"""</span>    <span class="token comment" spellcheck="true"># path 视频路径, id 摄像头的编号,confidence 置信度, obj_name_string 对象的字符串名字</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>path<span class="token punctuation">,</span>id<span class="token punctuation">,</span>type<span class="token punctuation">,</span>confidence<span class="token punctuation">,</span>obj_name_string<span class="token punctuation">)</span> <span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 视频路径</span>        self<span class="token punctuation">.</span>path <span class="token operator">=</span> path        <span class="token comment" spellcheck="true"># 视频id</span>        self<span class="token punctuation">.</span>id <span class="token operator">=</span> id                <span class="token comment" spellcheck="true"># 模型类型</span>        self<span class="token punctuation">.</span>type <span class="token operator">=</span> type        <span class="token comment" spellcheck="true"># 对象字符串名字</span>        self<span class="token punctuation">.</span>obj_name_string <span class="token operator">=</span> obj_name_string        <span class="token comment" spellcheck="true"># 置信度参数</span>        self<span class="token punctuation">.</span>confidence <span class="token operator">=</span> confidence        <span class="token comment" spellcheck="true"># 加载模型</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>hub<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'yolov5'</span><span class="token punctuation">,</span> <span class="token string">'custom'</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">'models/%s.pt'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> source<span class="token operator">=</span><span class="token string">'local'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 定义一个图片的全局变量 self.picture是opencv格式的图片是一个三维数组</span>        self<span class="token punctuation">.</span>picture<span class="token operator">=</span><span class="token string">''</span>                <span class="token comment" spellcheck="true"># 定义一个开关状态相关的全局变量</span>        self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'1'</span>                <span class="token comment" spellcheck="true"># 打印创建对象成功的消息</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'创建对象%s成功'</span><span class="token operator">%</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 定义一个销毁对象的方法，释放内存空间</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"调用__del__()方法销毁 "</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">" 对象，释放其空间"</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">video_mark_savepicture_push</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>video_fps<span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 创建对象</span>        cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 显示图片的宽设置</span>        width <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 显示图像的高设置</span>        height <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'video_mark_savepicture_push已经进入++++++++++++++++++++++++'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 调用 单帧识别画框 方法</span>        <span class="token comment" spellcheck="true"># identification_frequency 就是延迟时间</span>        MyThread<span class="token punctuation">(</span>self<span class="token punctuation">.</span>draw_picture<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 调用 推流方法</span>        <span class="token comment" spellcheck="true"># push_stream(self,rtmp_url,rtmp_fps,width,height)</span>        MyThread<span class="token punctuation">(</span>self<span class="token punctuation">.</span>push_stream<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"rtmp://104.225.236.140:1935/stream/%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># cv2.imwrite('./1.jpg',frame)</span>            <span class="token comment" spellcheck="true"># status 状态判断</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 释放cap对象</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token keyword">break</span>            <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>video_fps<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token operator">not</span> ret<span class="token punctuation">:</span>                    <span class="token comment" spellcheck="true"># 调用kafka发送错误信息</span>                    kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">"打开视频源失败"</span><span class="token punctuation">)</span>                    <span class="token keyword">break</span>                self<span class="token punctuation">.</span>picture <span class="token operator">=</span> frame                <span class="token comment" spellcheck="true"># self.draw_picture(0.1)</span>                <span class="token comment" spellcheck="true"># cv2.imshow('img'+path,self.picture)</span>                cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                     <span class="token triple-quoted-string string">"""单帧识别画框_保存图片 方法"""</span>    <span class="token comment" spellcheck="true"># picture 是opencv读取到的图片 ，model是模型，identification_frequency是识别频率,比如identification_frequency代表1s钟识别一次</span>    <span class="token keyword">def</span> <span class="token function">draw_picture</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>identification_frequency<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># time.sleep(2) 等待 self.picture获取图片内容</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>identification_frequency<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token string">'0'</span><span class="token punctuation">:</span>                    <span class="token keyword">break</span>                <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>identification_frequency<span class="token punctuation">)</span>                    img <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>                      <span class="token comment" spellcheck="true"># print(img)</span>                    <span class="token comment" spellcheck="true"># 调用模型</span>                    results <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>img<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">640</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true"># 获取到图片画框json数据</span>                    results_objectrecognition <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>results<span class="token punctuation">.</span>pandas<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>xyxy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_json<span class="token punctuation">(</span>orient<span class="token operator">=</span><span class="token string">"records"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>results_objectrecognition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token comment" spellcheck="true"># 这里面有多个</span>                        <span class="token comment" spellcheck="true"># 取出每个对象返回的 json 结果</span>                        name <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>                        <span class="token comment" spellcheck="true"># confidence_result是浮点型数据</span>                        confidence_result <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'confidence'</span><span class="token punctuation">]</span>                        xmin <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmin'</span><span class="token punctuation">]</span>                        ymin <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymin'</span><span class="token punctuation">]</span>                        xmax <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmax'</span><span class="token punctuation">]</span>                        ymax <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymax'</span><span class="token punctuation">]</span>                        <span class="token comment" spellcheck="true"># 把这四个做标转换为x,y,width,height</span>                        x <span class="token operator">=</span> int<span class="token punctuation">(</span>xmin<span class="token punctuation">)</span>                        y <span class="token operator">=</span>  int<span class="token punctuation">(</span>ymin<span class="token punctuation">)</span>                        w <span class="token operator">=</span>  int<span class="token punctuation">(</span>xmax<span class="token operator">-</span>xmin<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                        h <span class="token operator">=</span>  int<span class="token punctuation">(</span>ymax<span class="token operator">-</span>ymin<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'置信度是%s'</span><span class="token operator">%</span>confidence_result<span class="token punctuation">)</span>                        <span class="token keyword">if</span> confidence_result <span class="token operator">>=</span> float<span class="token punctuation">(</span>self<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span><span class="token punctuation">:</span>                            <span class="token triple-quoted-string string">"""                            将目标图片写入到存放违规图片的文件夹                            """</span>                            <span class="token comment" spellcheck="true"># 画框</span>                            pic<span class="token operator">=</span> cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> w<span class="token punctuation">,</span> y <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true"># cv2.putText(picture)</span>                            <span class="token comment" spellcheck="true"># 添加中文显示</span>                            <span class="token comment" spellcheck="true"># image,strs,local(图片的坐标),sizes,color </span>                            pic <span class="token operator">=</span> self<span class="token punctuation">.</span>change_cv2_draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span><span class="token string">"%s %.2s%%"</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token punctuation">,</span>confidence_result<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">,</span>y<span class="token number">-5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true"># 将画好的图片赋值给self.picture 这个全局变量</span>                            <span class="token comment" spellcheck="true"># for i in range(100):</span>                            self<span class="token punctuation">.</span>picture <span class="token operator">=</span> pic                            <span class="token comment" spellcheck="true"># cv2.imwrite('target_images/2.jpg',self.picture)</span>                            <span class="token comment" spellcheck="true"># cv2.imwrite("%s/'%s'.jpg"%('target_images',time.strftime('%Y-%m-%d-%H:%M:%S',time.localtime(time.time()))),self.picture)</span>                            self<span class="token punctuation">.</span>save_images<span class="token punctuation">(</span><span class="token string">'target_images'</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 调用kafka发送错误消息</span>            kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">'视频取帧识别保存出错'</span><span class="token punctuation">)</span>                              <span class="token triple-quoted-string string">"""推流"""</span>    <span class="token comment" spellcheck="true"># rtmp_url是推流的地址,rtmp_fps是推流的fps,widht和height是推流图像的分辨率（宽和高）</span>    <span class="token keyword">def</span> <span class="token function">push_stream</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>rtmp_url<span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># time.sleep(2) 等待 self.picture获取图片内容</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># command定义</span>        command <span class="token operator">=</span> <span class="token punctuation">[</span>r<span class="token string">'C:\Users\15256\Downloads\2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared\ffmpeg-4.4.1-full_build-shared\bin\ffmpeg.exe'</span><span class="token punctuation">,</span>        <span class="token string">'-y'</span><span class="token punctuation">,</span>        <span class="token string">'-f'</span><span class="token punctuation">,</span> <span class="token string">'rawvideo'</span><span class="token punctuation">,</span>        <span class="token string">'-vcodec'</span><span class="token punctuation">,</span> <span class="token string">'rawvideo'</span><span class="token punctuation">,</span>        <span class="token string">'-pix_fmt'</span><span class="token punctuation">,</span> <span class="token string">'bgr24'</span><span class="token punctuation">,</span>        <span class="token string">'-s'</span><span class="token punctuation">,</span> <span class="token string">"&amp;#123;&amp;#125;x&amp;#123;&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'-r'</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>rtmp_fps<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'-i'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span>        <span class="token string">'-c:v'</span><span class="token punctuation">,</span> <span class="token string">'libx264'</span><span class="token punctuation">,</span>        <span class="token string">'-pix_fmt'</span><span class="token punctuation">,</span> <span class="token string">'yuv420p'</span><span class="token punctuation">,</span>        <span class="token string">'-preset'</span><span class="token punctuation">,</span> <span class="token string">'ultrafast'</span><span class="token punctuation">,</span>        <span class="token string">'-f'</span><span class="token punctuation">,</span> <span class="token string">'flv'</span><span class="token punctuation">,</span>        rtmp_url<span class="token punctuation">]</span>        pipe <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>command<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>  stdin<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>rtmp_fps<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s在推流中'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># status 状态判断</span>                <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'0'</span> <span class="token punctuation">:</span>                    pipe<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 关闭输入管道</span>                    <span class="token comment" spellcheck="true"># pipe.communicate()  # 等待子进程关闭</span>                    <span class="token keyword">break</span>                                    <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                    pipe<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 调用kafka发送错误消息</span>            kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s推流出错了'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">)</span>                          <span class="token triple-quoted-string string">"""保存图片 方法"""</span>    <span class="token comment" spellcheck="true"># save_path就是需要将 BGR 通道流的图片保存位置</span>    <span class="token keyword">def</span> <span class="token function">save_images</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 获取当前时间的字符串</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"%s/%s_(%s).jpg"</span><span class="token operator">%</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span>now<span class="token punctuation">,</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">)</span>                    <span class="token triple-quoted-string string">"""通过kafka 做一个对象开关的方法"""</span>    <span class="token keyword">def</span> <span class="token function">obj_status</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># kafka_consumer(group_id,server_ip,topic,value_key</span>            <span class="token keyword">if</span>  kafka_consumer<span class="token punctuation">(</span>server_ip<span class="token punctuation">,</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token operator">+</span>self<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'status'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'0'</span>                <span class="token comment" spellcheck="true"># # 关闭重启方法</span>                <span class="token comment" spellcheck="true"># kafka_producer(&amp;#123;'error_status':'1'&amp;#125;,server_ip,(self.type+self.id))</span>                self<span class="token punctuation">.</span>__del__                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'对象'</span><span class="token operator">+</span> self<span class="token punctuation">.</span>obj_name_string<span class="token operator">+</span><span class="token string">'已经删除'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token triple-quoted-string string">"""通过kafka 做一个对象自动重新启动 的方法"""</span>    <span class="token comment" spellcheck="true"># # interface_url是接口地址,data 是传入的json数据</span>    <span class="token comment" spellcheck="true"># def obj_restart(self,interface_url,data):</span>    <span class="token comment" spellcheck="true">#     while True:</span>    <span class="token comment" spellcheck="true">#         if kafka_consumer((self.type+self.id),server_ip,(self.type+self.id),'error_status') == '1':</span>    <span class="token comment" spellcheck="true">#             if self.status == '1':</span>    <span class="token comment" spellcheck="true">#                 # print(self.obj_name_string + '准备重启')</span>    <span class="token comment" spellcheck="true">#                 # 发送关闭消息给kafka</span>    <span class="token comment" spellcheck="true">#                 kafka_producer(&amp;#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>    <span class="token comment" spellcheck="true">#                 # time.sleep(10)</span>    <span class="token comment" spellcheck="true">#                 # if (requests.post(url=interface_url, data= json.dumps(data))).json()['result'] == '1':</span>    <span class="token comment" spellcheck="true">#                 #     print(self.obj_name_string + '重启成功')</span>    <span class="token comment" spellcheck="true">#                 # else:</span>    <span class="token comment" spellcheck="true">#                 #     print('接口错误')</span>    <span class="token comment" spellcheck="true">#             elif self.status == '0':</span>    <span class="token comment" spellcheck="true">#                 break</span>    <span class="token comment" spellcheck="true"># 'path' : 'path',  </span>    <span class="token comment" spellcheck="true"># 'id' :'4',</span>    <span class="token comment" spellcheck="true"># 'type':'smoke',</span>    <span class="token comment" spellcheck="true"># 'status':'0',</span>    <span class="token comment" spellcheck="true"># 'confidence': '0.3'</span>    <span class="token comment" spellcheck="true"># interface_url是传入的url, data是传入的json数据, monitor_time是监听时间,server_ip是kafka服务器ip，topic是</span>    <span class="token comment" spellcheck="true"># def obj_restart(self,interface_url,data,monitor_time):</span>    <span class="token comment" spellcheck="true">#     while True:</span>    <span class="token comment" spellcheck="true">#         # 监听对象状态异常的延迟时间</span>    <span class="token comment" spellcheck="true">#         time.sleep(monitor_time)</span>    <span class="token comment" spellcheck="true">#         print('%s错误状态监听中'%(self.obj_name_string))</span>    <span class="token comment" spellcheck="true">#         # 监听时间判断status状态</span>    <span class="token comment" spellcheck="true">#         if self.status == '0':</span>    <span class="token comment" spellcheck="true">#             print(self.obj_name_string + '已经关闭')</span>    <span class="token comment" spellcheck="true">#             break</span>    <span class="token comment" spellcheck="true">#         elif self.status == '1':</span>    <span class="token comment" spellcheck="true">#             # 监听完成后判断 status状态</span>    <span class="token comment" spellcheck="true">#             if self.error_value == '1':</span>    <span class="token comment" spellcheck="true">#                 # 发送一条信息给kafka心跳接口，实现心跳接口线程关闭</span>    <span class="token comment" spellcheck="true">#                 kafka_producer(&amp;#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>    <span class="token comment" spellcheck="true">#                 # print(self.obj_name_string+ '准备重启')</span>    <span class="token comment" spellcheck="true">#                 # if (requests.post(url=interface_url, data= json.dumps(data))).json()['result'] == '1':</span>    <span class="token comment" spellcheck="true">#                 #     print(self.obj_name_string + '重启成功')</span>    <span class="token comment" spellcheck="true">#                 #     # 等待别的进程全部关闭</span>    <span class="token comment" spellcheck="true">#                 #     time.sleep(15)</span>    <span class="token comment" spellcheck="true">#                 # else:</span>    <span class="token comment" spellcheck="true">#                 #     print('请求接口失败，服务关闭')</span>                                <span class="token triple-quoted-string string">"""定义一个可以在图片上添加中文的方法"""</span>    <span class="token comment" spellcheck="true"># 吸烟 %.2s%%"%(confidence_result*100),(x+w+5,y-5),30,(255,0,0))</span>    <span class="token comment" spellcheck="true"># image是图片 strs是中文汉字 local是做标 size 是字体尺寸 colour是颜色的RGB码</span>    <span class="token keyword">def</span> <span class="token function">change_cv2_draw</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image<span class="token punctuation">,</span>strs<span class="token punctuation">,</span>local<span class="token punctuation">,</span>sizes<span class="token punctuation">,</span>colour<span class="token punctuation">)</span><span class="token punctuation">:</span>        cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>        pilimg <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2img<span class="token punctuation">)</span>        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>pilimg<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 图片上打印</span>        font <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">"SIMYOU.TTF"</span><span class="token punctuation">,</span>sizes<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span>local<span class="token punctuation">,</span> strs<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> font<span class="token operator">=</span>font<span class="token punctuation">)</span>        image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pilimg<span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>        <span class="token keyword">return</span> image    <span class="token triple-quoted-string string">"""这是一个使用多线程的类"""</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true"># class Test():</span><span class="token comment" spellcheck="true">#     def __init__(self) -> None:</span><span class="token comment" spellcheck="true">#         self.ab = 5</span><span class="token comment" spellcheck="true">#     def __del__(self):</span><span class="token comment" spellcheck="true">#         print('线程删除成功')</span><span class="token comment" spellcheck="true">#     def test1(self,a,b,c):</span><span class="token comment" spellcheck="true">#         while True:</span><span class="token comment" spellcheck="true">#             time.sleep(2)</span><span class="token comment" spellcheck="true">#             self.ab = self.ab +1</span><span class="token comment" spellcheck="true">#             print('test1')</span><span class="token comment" spellcheck="true">#             print(self.ab)</span>            <span class="token comment" spellcheck="true">#     def test2(self,a,b,c):</span><span class="token comment" spellcheck="true">#         while True:</span><span class="token comment" spellcheck="true">#             time.sleep(1)</span><span class="token comment" spellcheck="true">#             self.ab =self.ab-1</span><span class="token comment" spellcheck="true">#             print(self.ab)</span><span class="token comment" spellcheck="true">#             print('test2')</span><span class="token comment" spellcheck="true">#     def test3(self):</span><span class="token comment" spellcheck="true">#         time.sleep(3)</span><span class="token comment" spellcheck="true">#         self.__del__()</span><span class="token comment" spellcheck="true">#         print('对象删除完成')</span><span class="token comment" spellcheck="true"># at = Test()</span><span class="token comment" spellcheck="true"># def t(a,b,c):</span><span class="token comment" spellcheck="true">#     print('hello word')</span><span class="token comment" spellcheck="true"># # a.test2(1,2,3)</span><span class="token comment" spellcheck="true"># MyThread(at.test1,args=(1, 2,5,)).start()</span><span class="token comment" spellcheck="true"># MyThread(at.test2,args=(1, 2,5,)).start()</span><span class="token comment" spellcheck="true"># MyThread(at.test3,args=()).start()</span><span class="token comment" spellcheck="true"># t1.start()</span><span class="token comment" spellcheck="true"># t2.start()</span><span class="token comment" spellcheck="true"># time.sleep(2)</span><span class="token comment" spellcheck="true"># t1.join()</span><span class="token comment" spellcheck="true"># t2.join()</span><span class="token comment" spellcheck="true"># a = 2</span><span class="token comment" spellcheck="true"># def add():</span><span class="token comment" spellcheck="true">#     global a</span><span class="token comment" spellcheck="true">#     while True:</span><span class="token comment" spellcheck="true">#         time.sleep(5)</span><span class="token comment" spellcheck="true">#         a = a+1</span>    <span class="token comment" spellcheck="true">#         print(a)</span><span class="token comment" spellcheck="true"># def sum():</span><span class="token comment" spellcheck="true">#     global a</span><span class="token comment" spellcheck="true">#     while True:</span><span class="token comment" spellcheck="true">#         time.sleep(10)</span>        <span class="token comment" spellcheck="true">#         a = a-1</span><span class="token comment" spellcheck="true">#         print(a)</span><span class="token comment" spellcheck="true"># MyThread(add,args=()).start()</span><span class="token comment" spellcheck="true"># MyThread(sum,args=()).start()</span></code></pre><h3 id="4-kafka-listen-4-py分析"><a href="#4-kafka-listen-4-py分析" class="headerlink" title="4. kafka_listen_4.py分析"></a>4. kafka_listen_4.py分析</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducer<span class="token keyword">import</span> json<span class="token triple-quoted-string string">"""data = &amp;#123;'value_1' : 'value_2'&amp;#125;producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'], value_serializer=lambda m: json.dumps(m).encode())future = producer.send('my' ,  value=data , partition= 0)future.get(timeout= 3)"""</span><span class="token triple-quoted-string string">"""server_ip 是服务器ip+端口的形式 ip:port 这里为了保证唯一将topic 和 group_id设置成一样的"""</span><span class="token keyword">def</span> <span class="token function">kafka_producer</span><span class="token punctuation">(</span>producer_data<span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">)</span><span class="token punctuation">:</span>    producer <span class="token operator">=</span> KafkaProducer<span class="token punctuation">(</span>bootstrap_servers<span class="token operator">=</span><span class="token punctuation">[</span>server_ip<span class="token punctuation">]</span><span class="token punctuation">,</span> value_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> m<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    future <span class="token operator">=</span> producer<span class="token punctuation">.</span>send<span class="token punctuation">(</span>topic<span class="token punctuation">,</span>  value<span class="token operator">=</span>producer_data <span class="token punctuation">,</span> partition<span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    future<span class="token punctuation">.</span>get<span class="token punctuation">(</span>timeout<span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">kafka_consumer</span><span class="token punctuation">(</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">,</span>value_key<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># consumer_timeout_ms=1000</span>    <span class="token comment" spellcheck="true"># consumer = KafkaConsumer(topic,group_id = group_id, bootstrap_servers= [server_ip], auto_offset_reset='latest',enable_auto_commit = True,</span>    <span class="token comment" spellcheck="true"># auto_commit_interval_ms = 1,value_deserializer=lambda m: json.loads(m.decode('ascii')))</span>    consumer <span class="token operator">=</span> KafkaConsumer<span class="token punctuation">(</span>topic<span class="token punctuation">,</span>    bootstrap_servers<span class="token operator">=</span> <span class="token punctuation">[</span>server_ip<span class="token punctuation">]</span><span class="token punctuation">,</span>    value_deserializer<span class="token operator">=</span><span class="token keyword">lambda</span> m<span class="token punctuation">:</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>m<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> msg <span class="token keyword">in</span> consumer<span class="token punctuation">:</span>        dic <span class="token operator">=</span> eval<span class="token punctuation">(</span>str<span class="token punctuation">(</span>msg<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> dic<span class="token punctuation">[</span>value_key<span class="token punctuation">]</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>    </code></pre><h3 id="5-post-request-text-py分析"><a href="#5-post-request-text-py分析" class="headerlink" title="5. post_request_text.py分析"></a>5. post_request_text.py分析</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://localhost:5000/gttx/objectrecognition"</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span>information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span>                <span class="token string">'id'</span> <span class="token punctuation">:</span><span class="token string">'3'</span><span class="token punctuation">,</span>                <span class="token string">'type'</span><span class="token punctuation">:</span><span class="token string">'smoke'</span><span class="token punctuation">,</span>                <span class="token string">'status'</span><span class="token punctuation">:</span><span class="token string">'1'</span><span class="token punctuation">,</span>                <span class="token string">'confidence'</span><span class="token punctuation">:</span> <span class="token string">'0.5'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 数据打包传输</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span> data<span class="token operator">=</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(response)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'result'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><h3 id="6-requirements-txt分析"><a href="#6-requirements-txt分析" class="headerlink" title="6. requirements.txt分析"></a>6. requirements.txt分析</h3><pre class=" language-python"><code class="language-python">absl<span class="token operator">-</span>py<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">0</span>cachetools<span class="token operator">==</span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">4</span>certifi<span class="token operator">==</span><span class="token number">2021.10</span><span class="token punctuation">.</span><span class="token number">8</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>cycler<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">0</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>fonttools<span class="token operator">==</span><span class="token number">4.28</span><span class="token punctuation">.</span><span class="token number">1</span>google<span class="token operator">-</span>auth<span class="token operator">==</span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">3</span>google<span class="token operator">-</span>auth<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">6</span>grpcio<span class="token operator">==</span><span class="token number">1.42</span><span class="token punctuation">.</span><span class="token number">0</span>idna<span class="token operator">==</span><span class="token number">3.3</span>importlib<span class="token operator">-</span>metadata<span class="token operator">==</span><span class="token number">4.8</span><span class="token punctuation">.</span><span class="token number">2</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>kafka<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>kiwisolver<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">2</span>Markdown<span class="token operator">==</span><span class="token number">3.3</span><span class="token punctuation">.</span><span class="token number">6</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>matplotlib<span class="token operator">==</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">0</span>numpy<span class="token operator">==</span><span class="token number">1.21</span><span class="token punctuation">.</span><span class="token number">4</span>oauthlib<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>opencv<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.58</span>packaging<span class="token operator">==</span><span class="token number">21.2</span>pandas<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">4</span>Pillow<span class="token operator">==</span><span class="token number">8.4</span><span class="token punctuation">.</span><span class="token number">0</span>protobuf<span class="token operator">==</span><span class="token number">3.19</span><span class="token punctuation">.</span><span class="token number">1</span>pyasn1<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">8</span>pyasn1<span class="token operator">-</span>modules<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">8</span>pyparsing<span class="token operator">==</span><span class="token number">2.4</span><span class="token punctuation">.</span><span class="token number">7</span>python<span class="token operator">-</span>dateutil<span class="token operator">==</span><span class="token number">2.8</span><span class="token punctuation">.</span><span class="token number">2</span>pytz<span class="token operator">==</span><span class="token number">2021.3</span>PyYAML<span class="token operator">==</span><span class="token number">6.0</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span>rsa<span class="token operator">==</span><span class="token number">4.7</span><span class="token punctuation">.</span><span class="token number">2</span>scipy<span class="token operator">==</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">2</span>seaborn<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">2</span>setuptools<span class="token operator">-</span>scm<span class="token operator">==</span><span class="token number">6.3</span><span class="token punctuation">.</span><span class="token number">2</span>six<span class="token operator">==</span><span class="token number">1.16</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">==</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">-</span>data<span class="token operator">-</span>server<span class="token operator">==</span><span class="token number">0.6</span><span class="token punctuation">.</span><span class="token number">1</span>tensorboard<span class="token operator">-</span>plugin<span class="token operator">-</span>wit<span class="token operator">==</span><span class="token number">1.8</span><span class="token punctuation">.</span><span class="token number">0</span>thop<span class="token operator">==</span><span class="token number">0.0</span><span class="token punctuation">.</span><span class="token number">31.</span>post2005241907tomli<span class="token operator">==</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">2</span>torch<span class="token operator">==</span><span class="token number">1.10</span><span class="token punctuation">.</span><span class="token number">0</span>torchvision<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">1</span>tqdm<span class="token operator">==</span><span class="token number">4.62</span><span class="token punctuation">.</span><span class="token number">3</span>typing_extensions<span class="token operator">==</span><span class="token number">4.0</span><span class="token punctuation">.</span><span class="token number">0</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>zipp<span class="token operator">==</span><span class="token number">3.6</span><span class="token punctuation">.</span><span class="token number">0</span></code></pre><h3 id="7-kafka-consumer-py分析（测试）"><a href="#7-kafka-consumer-py分析（测试）" class="headerlink" title="7. kafka_consumer.py分析（测试）"></a>7. kafka_consumer.py分析（测试）</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment" spellcheck="true"># 调用测试</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span>topic <span class="token operator">=</span> <span class="token string">'smoke3'</span>value_key <span class="token operator">=</span> <span class="token string">'status0'</span><span class="token comment" spellcheck="true"># 消息消费</span><span class="token comment" spellcheck="true"># while True:</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>kafka_consumer<span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">,</span>value_key<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">break</span>      </code></pre><h3 id="8-kafka-producer-py分析（测试）"><a href="#8-kafka-producer-py分析（测试）" class="headerlink" title="8. kafka_producer.py分析（测试）"></a>8. kafka_producer.py分析（测试）</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token triple-quoted-string string">"""调用测试"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span>producer_data <span class="token operator">=</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status0':'2434'&amp;#125;</span>topic <span class="token operator">=</span> <span class="token string">'smoke3'</span><span class="token comment" spellcheck="true"># key_value = 'status1'</span><span class="token comment" spellcheck="true"># 消息生产</span>kafka_producer<span class="token punctuation">(</span>producer_data<span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">)</span></code></pre><h3 id="9-test（用于测试一些写法）-py分析（测试）"><a href="#9-test（用于测试一些写法）-py分析（测试）" class="headerlink" title="9. test（用于测试一些写法）.py分析（测试）"></a>9. test（用于测试一些写法）.py分析（测试）</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducer<span class="token keyword">import</span> json<span class="token keyword">import</span> cv2<span class="token keyword">import</span> time<span class="token comment" spellcheck="true"># consumer = KafkaConsumer('my_topic', group_id= 'group2', bootstrap_servers= ['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># for msg in consumer:</span><span class="token comment" spellcheck="true">#     print(msg)</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># future = producer.send('my_topic' , key= b'my_key', value= b'my_value', partition= 0)</span><span class="token comment" spellcheck="true"># result = future.get(timeout= 10)</span><span class="token comment" spellcheck="true"># print(result)</span><span class="token comment" spellcheck="true"># consumer = KafkaConsumer('my_topic', group_id= 'group2', bootstrap_servers= ['localhost:9092'])</span><span class="token triple-quoted-string string">"""生成端"""</span><span class="token comment" spellcheck="true"># data = json.dumps(&amp;#123;'id':'id','status':'status'&amp;#125;).encode()</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># future = producer.send('test' , data, partition= 0)</span><span class="token comment" spellcheck="true"># result = future.get(timeout= 10)</span><span class="token comment" spellcheck="true"># print(result)</span><span class="token comment" spellcheck="true"># data = &amp;#123;'value_1' : 'value_2'&amp;#125;</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'], value_serializer=lambda m: json.dumps(m).encode())</span><span class="token comment" spellcheck="true"># future = producer.send('my' ,  value=data , partition= 0)</span><span class="token comment" spellcheck="true"># future.get(timeout= 3)</span><span class="token triple-quoted-string string">"""消费者"""</span><span class="token comment" spellcheck="true"># consumer = KafkaConsumer('test', bootstrap_servers= ['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># for msg in consumer:</span><span class="token comment" spellcheck="true">#     # print(msg)</span><span class="token comment" spellcheck="true">#     print('---------')</span><span class="token comment" spellcheck="true">#     print(msg)</span><span class="token comment" spellcheck="true">#     print('------------')</span><span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">import</span> torch<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">from</span> torch<span class="token punctuation">.</span>_C <span class="token keyword">import</span> device<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token comment" spellcheck="true"># 相对路径的方式导入mymodes下的yolov5s1.pt这个模型</span><span class="token comment" spellcheck="true"># model = torch.hub.load('./yolov5', 'custom', path='models/smoke.pt', source='local') </span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'http://nvr.secserv.top:10800/flv/hls/stream_3.flv'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图片的宽设置</span>width <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图像的高设置</span>height <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>video_fps <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello word'</span><span class="token punctuation">)</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># time.sleep(1/video_fps)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> ret<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"打开视频源失败"</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">,</span>frame<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># picture = Image.fromarray(cv2.cvtColor(frame,cv2.COLOR_BGR2RGB)) </span>    <span class="token comment" spellcheck="true"># results = model(picture, size=640)</span>    <span class="token comment" spellcheck="true"># print(results)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><h3 id="10-flask接口创建"><a href="#10-flask接口创建" class="headerlink" title="10 .flask接口创建"></a>10 .flask接口创建</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">### post接口</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> requestserver <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token string">"&amp;#123;'message': 'None'&amp;#125;"</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        type <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span>        <span class="token triple-quoted-string string">"""        将传入的字符 type 传做为函数去调用function_app_2.py 下面代码的意思就是函数调用函数 smoke(information)        """</span>        eval<span class="token punctuation">(</span>type <span class="token operator">+</span> <span class="token string">"(%s)"</span><span class="token operator">%</span>information<span class="token punctuation">)</span>         <span class="token keyword">except</span>  TypeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'no this function or function error'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'result':'1'&amp;#125;)</span>    <span class="token comment" spellcheck="true"># return json.dumps(information,ensure_ascii=False)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    启动flask服务    """</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">### get接口</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> jsonserver <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/updata'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">updata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 接口传入的key的数值</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>values<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8899</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">### 写多个函数</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> jsonserver <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/updata'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">updata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 接口传入的key的数值</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>values<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8899</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5 </tag>
            
            <tag> 视频推流 </tag>
            
            <tag> 视频目标物截图 </tag>
            
            <tag> flask接口使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站备案信息查询脚本</title>
      <link href="/2021/112912177.html"/>
      <url>/2021/112912177.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/web_scan_screenshot.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载网站备案查询和网页截图</a></p><h3 id="v1-0版本"><a href="#v1-0版本" class="headerlink" title="v1.0版本"></a>v1.0版本</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> ssl <span class="token keyword">import</span> cert_time_to_seconds<span class="token keyword">import</span> requests<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> time<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">import</span> threading<span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_url_informatin</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        url_all<span class="token operator">=</span><span class="token string">'https://icp.chinaz.com/home/info?host='</span> <span class="token operator">+</span> url        heards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.4; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2224.3 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 4.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2117.157 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1866.237 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/4E423F"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1623.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.17 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.62 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 4319.74.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.57 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.2 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1468.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1464.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1500.55 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.90 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; NetBSD) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.60 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.15 (KHTML, like Gecko) Chrome/24.0.1295.0 Safari/537.15"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.14 (KHTML, like Gecko) Chrome/24.0.1292.0 Safari/537.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.0; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.02"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-sg) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.2;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.1;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) Gecko/20100101 Firefox/14.0 Opera/12.0"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; WOW64; U; pt) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; de) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.9.168 Version/11.51"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; de) Opera 11.51"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; fr) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; es-ES) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/5.0 Opera 11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; bg) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.99 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-tw) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; Opera Tablet/15165; U; en) Presto/2.8.149 Version/11.1"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; Ubuntu/10.10 (maverick); pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ja) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; fr) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; sv) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-US) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101213 Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; nl; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; it) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.6.37 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; ko) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; fi) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-GB) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1 x64; U; en) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span>             <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.7.39 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20130401 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/29.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; OpenBSD amd64; rv:28.0) Gecko/20100101 Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:27.3) Gecko/20130101 Firefox/27.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:27.0) Gecko/20121011 Firefox/27.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:23.0) Gecko/20131011 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:22.0) Gecko/20130328 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Microsoft Windows NT 6.2.9200.0); rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:21.0.0) Gecko/20121011 Firefox/21.0.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux i686; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20130514 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:21.0) Gecko/20130326 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130330 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130328 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.0; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64;) Gecko/20100101 Firefox/20.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows x86; rv:19.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/18.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0)  Gecko/20100101 Firefox/18.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100101 Firefox/17.0.6"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko ) Version/5.1 Mobile/9B176 Safari/7534.48.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; da-dk) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; tr-TR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ko-KR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; fr-FR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs-CZ) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; sv-se) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ko-kr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-fr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; es-es) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-gb) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; de-de) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu-HU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; it-IT) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-ch) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; de-de) AppleWebKit/534.15+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; ar) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; tr-TR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; nb-NO) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; fr-FR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; zh-cn) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 7.0; InfoPath.3; .NET CLR 3.1.40767; Trident/6.0; en-IN)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/4.0; InfoPath.2; SV1; .NET CLR 2.0.50727; WOW64)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/1.22 (compatible; MSIE 10.0; Windows 3.1)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; WIndows NT 9.0; en-US))"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; InfoPath.3; MS-RTC LM 8; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; chromeframe/12.0.742.112)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                    <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; yie8)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET CLR 1.1.4322; .NET4.0C; Tablet PC 2.0)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/13.0.782.215)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0) chromeframe/10.0.648.205"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.1; SV1; .NET CLR 2.8.52393; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.1.76908; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.8.36217; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; .NET CLR 2.7.58687; SLCC2; Media Center PC 5.0; Zune 3.4; Tablet PC 3.6; InfoPath.3)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; Media Center PC 4.0; SLCC1; .NET CLR 3.0.04320)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; SLCC1; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 3.0.04506.30)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.0; Trident/4.0; FBSMTWB; .NET CLR 2.0.34861; .NET CLR 3.0.3746.3218; .NET CLR 3.5.33652; msn OptimizedIE8;ENUS)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; Media Center PC 6.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.3; .NET4.0C; .NET4.0E; .NET CLR 3.5.30729; .NET CLR 3.0.30729; MS-RTC LM 8)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 3.0)"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/536.26.17 (KHTML like Gecko) Version/6.0.2 Safari/536.26.17"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.4 (KHTML, like Gecko) Chrome/4.0.237.0 Safari/532.4 Debian"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Android; Linux armv7l; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1"</span><span class="token punctuation">,</span>            <span class="token string">"SEC-SGHX210/1.0 UP.Link/6.3.1.13.0"</span><span class="token punctuation">,</span>            <span class="token string">"Opera/9.80 (X11; FreeBSD 8.1-RELEASE i386; Edition Next) Presto/2.12.388 Version/12.10"</span><span class="token punctuation">]</span>        header <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'user-Agent'</span><span class="token punctuation">:</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>heards_list<span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span> url_all<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#requests模块会自动解码来自服务器的内容，可以使用res.encoding来查看编码</span>        html<span class="token operator">=</span>res<span class="token punctuation">.</span>text        html <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取公司名字</span>        company_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"ztInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        certificate_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        website_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> website_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> certificate_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> website_name  <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该'</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">'网站的信息'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'0'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>certificate_name<span class="token punctuation">,</span>website_name<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">'company_name'</span><span class="token punctuation">:</span> company_name<span class="token punctuation">,</span>                <span class="token string">'certificate_name'</span><span class="token punctuation">:</span>certificate_name<span class="token punctuation">,</span>                <span class="token string">'website_name'</span><span class="token punctuation">:</span>website_name            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'连接中断，重新发送请求中'</span><span class="token punctuation">)</span>        get_url_informatin<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 查询check_certificate</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    domains_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    sql <span class="token operator">=</span> <span class="token string">"SELECT domain FROM check_certificate"</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> results<span class="token punctuation">:</span>            domains_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'domains_list'</span><span class="token punctuation">:</span>domains_list        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token comment" spellcheck="true"># name 是网站名字</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 表单是 check_certificate company_name 后面没有逗号！！！！</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE check_certificate SET certificate = '%s', name = '%s',company_name = '%s' WHERE domain = '%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>domain <span class="token operator">+</span> <span class="token string">'更新成功'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#   return &amp;#123;</span><span class="token comment" spellcheck="true">#                 'company_name': company_name,</span><span class="token comment" spellcheck="true">#                 'certificate_name':certificate_name,</span><span class="token comment" spellcheck="true">#                 'website_name':website_name</span><span class="token comment" spellcheck="true">#             &amp;#125;</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 获取网站列表</span>    domains_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'domains_list'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> domain <span class="token keyword">in</span> domains_list<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 做一个随机延迟</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>create_random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取从网站爬取到的信息</span>        get_url_result <span class="token operator">=</span> get_url_informatin<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 当返回值是0的时候不插入跳过</span>        <span class="token keyword">if</span> get_url_result <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            certificate <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'certificate_name'</span><span class="token punctuation">]</span>            name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'website_name'</span><span class="token punctuation">]</span>            company_name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'company_name'</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># print(type(domain))</span>            <span class="token comment" spellcheck="true"># 调用更新函数</span>            sql_update<span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'push'</span><span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># MyThread(main,args=()).start()</span></code></pre><h3 id="v2-0版本"><a href="#v2-0版本" class="headerlink" title="v2.0版本"></a>v2.0版本</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""网站备案信息查询"""</span><span class="token keyword">from</span> ssl <span class="token keyword">import</span> cert_time_to_seconds<span class="token keyword">import</span> requests<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> time<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">import</span> threading<span class="token keyword">import</span> datetime<span class="token triple-quoted-string string">"""执行告警信息添加参数"""</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token comment" spellcheck="true"># company_name 公司名字,ip ip地址，domain域名,warn_content告警信息</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span>    <span class="token comment" spellcheck="true"># 数据创建时间</span>    created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 当company_name 为None时填入null到数据库</span>    <span class="token keyword">if</span> company_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> company_name <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        company_name <span class="token operator">=</span> <span class="token string">'Null'</span>        sql <span class="token operator">=</span> "INSERT INTO check_certificate_warning<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span> \        ip<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>send_type<span class="token punctuation">,</span>type<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>        sql <span class="token operator">=</span> "INSERT INTO check_certificate_warning<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span> \        ip<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>send_type<span class="token punctuation">,</span>type<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""执行check_cerficate_deatil添加函数"""</span><span class="token comment" spellcheck="true"># 存储合规和不合规，网站没有备案</span><span class="token keyword">def</span> <span class="token function">sql_execute_detail</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "INSERT INTO check_certificate_detail<span class="token punctuation">(</span>check_certificate_id<span class="token punctuation">,</span> \        scan_base<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_url_informatin</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        url_all<span class="token operator">=</span><span class="token string">'https://icp.chinaz.com/home/info?host='</span> <span class="token operator">+</span> url        heards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.4; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2224.3 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 4.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2117.157 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1866.237 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/4E423F"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1623.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.17 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.62 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 4319.74.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.57 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.2 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1468.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1464.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1500.55 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.90 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; NetBSD) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.60 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.15 (KHTML, like Gecko) Chrome/24.0.1295.0 Safari/537.15"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.14 (KHTML, like Gecko) Chrome/24.0.1292.0 Safari/537.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.0; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.02"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-sg) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.2;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.1;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) Gecko/20100101 Firefox/14.0 Opera/12.0"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; WOW64; U; pt) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; de) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.9.168 Version/11.51"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; de) Opera 11.51"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; fr) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; es-ES) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/5.0 Opera 11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; bg) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.99 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-tw) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; Opera Tablet/15165; U; en) Presto/2.8.149 Version/11.1"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; Ubuntu/10.10 (maverick); pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ja) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; fr) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; sv) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-US) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101213 Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; nl; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; it) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.6.37 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; ko) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; fi) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-GB) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1 x64; U; en) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span>             <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.7.39 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20130401 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/29.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; OpenBSD amd64; rv:28.0) Gecko/20100101 Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:27.3) Gecko/20130101 Firefox/27.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:27.0) Gecko/20121011 Firefox/27.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:23.0) Gecko/20131011 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:22.0) Gecko/20130328 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Microsoft Windows NT 6.2.9200.0); rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:21.0.0) Gecko/20121011 Firefox/21.0.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux i686; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20130514 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:21.0) Gecko/20130326 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130330 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130328 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.0; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64;) Gecko/20100101 Firefox/20.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows x86; rv:19.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/18.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0)  Gecko/20100101 Firefox/18.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100101 Firefox/17.0.6"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko ) Version/5.1 Mobile/9B176 Safari/7534.48.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; da-dk) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; tr-TR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ko-KR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; fr-FR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs-CZ) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; sv-se) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ko-kr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-fr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; es-es) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-gb) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; de-de) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu-HU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; it-IT) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-ch) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; de-de) AppleWebKit/534.15+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; ar) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; tr-TR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; nb-NO) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; fr-FR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; zh-cn) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 7.0; InfoPath.3; .NET CLR 3.1.40767; Trident/6.0; en-IN)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/4.0; InfoPath.2; SV1; .NET CLR 2.0.50727; WOW64)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/1.22 (compatible; MSIE 10.0; Windows 3.1)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; WIndows NT 9.0; en-US))"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; InfoPath.3; MS-RTC LM 8; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; chromeframe/12.0.742.112)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                    <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; yie8)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET CLR 1.1.4322; .NET4.0C; Tablet PC 2.0)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/13.0.782.215)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0) chromeframe/10.0.648.205"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.1; SV1; .NET CLR 2.8.52393; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.1.76908; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.8.36217; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; .NET CLR 2.7.58687; SLCC2; Media Center PC 5.0; Zune 3.4; Tablet PC 3.6; InfoPath.3)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; Media Center PC 4.0; SLCC1; .NET CLR 3.0.04320)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; SLCC1; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 3.0.04506.30)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.0; Trident/4.0; FBSMTWB; .NET CLR 2.0.34861; .NET CLR 3.0.3746.3218; .NET CLR 3.5.33652; msn OptimizedIE8;ENUS)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; Media Center PC 6.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.3; .NET4.0C; .NET4.0E; .NET CLR 3.5.30729; .NET CLR 3.0.30729; MS-RTC LM 8)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 3.0)"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/536.26.17 (KHTML like Gecko) Version/6.0.2 Safari/536.26.17"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.4 (KHTML, like Gecko) Chrome/4.0.237.0 Safari/532.4 Debian"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Android; Linux armv7l; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1"</span><span class="token punctuation">,</span>            <span class="token string">"SEC-SGHX210/1.0 UP.Link/6.3.1.13.0"</span><span class="token punctuation">,</span>            <span class="token string">"Opera/9.80 (X11; FreeBSD 8.1-RELEASE i386; Edition Next) Presto/2.12.388 Version/12.10"</span><span class="token punctuation">]</span>        header <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'user-Agent'</span><span class="token punctuation">:</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>heards_list<span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span> url_all<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#requests模块会自动解码来自服务器的内容，可以使用res.encoding来查看编码</span>        html<span class="token operator">=</span>res<span class="token punctuation">.</span>text        html <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取公司名字</span>        company_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"ztInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        certificate_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        website_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># if website_name == '--' or certificate_name == '--' or website_name  == '':</span>        <span class="token comment" spellcheck="true">#     print('没有该' + url + '网站的信息')</span>        <span class="token comment" spellcheck="true">#     return '0'</span>        <span class="token comment" spellcheck="true"># else:</span>        <span class="token comment" spellcheck="true">#     print(company_name,certificate_name,website_name)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'company_name'</span><span class="token punctuation">:</span> company_name<span class="token punctuation">,</span>            <span class="token string">'certificate_name'</span><span class="token punctuation">:</span>certificate_name<span class="token punctuation">,</span>            <span class="token string">'website_name'</span><span class="token punctuation">:</span>website_name        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'连接中断，重新发送请求中'</span><span class="token punctuation">)</span>        get_url_informatin<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 查询check_certificate</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    domains_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    ips_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    company_names_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM check_certificate"</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> results<span class="token punctuation">:</span>            domains_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            ips_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            company_names_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'domains_list'</span><span class="token punctuation">:</span>domains_list<span class="token punctuation">,</span>            <span class="token string">'ips_list'</span><span class="token punctuation">:</span>ips_list<span class="token punctuation">,</span>            <span class="token string">'company_names_list'</span><span class="token punctuation">:</span>company_names_list        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token comment" spellcheck="true"># name 是网站名字</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 表单是 check_certificate company_name 后面没有逗号！！！！</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE check_certificate SET certificate = '%s', name = '%s',company_name = '%s' WHERE domain = '%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>domain <span class="token operator">+</span> <span class="token string">'更新成功'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#   return &amp;#123;</span><span class="token comment" spellcheck="true">#                 'company_name': company_name,</span><span class="token comment" spellcheck="true">#                 'certificate_name':certificate_name,</span><span class="token comment" spellcheck="true">#                 'website_name':website_name</span><span class="token comment" spellcheck="true">#             &amp;#125;</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 获取网站列表</span>    domains_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'domains_list'</span><span class="token punctuation">]</span>    ips_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'ips_list'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 获取列表长度</span>    length <span class="token operator">=</span> len<span class="token punctuation">(</span>domains_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 做一个随机延迟</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>create_random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取从网站爬取到的信息</span>        <span class="token comment" spellcheck="true"># 域名</span>        domain <span class="token operator">=</span> domains_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># print('-----------'+domain)</span>        <span class="token comment" spellcheck="true"># ip</span>        ip <span class="token operator">=</span> ips_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        get_url_result <span class="token operator">=</span> get_url_informatin<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 返回结果</span>        certificate <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'certificate_name'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'website_name'</span><span class="token punctuation">]</span>        company_name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'company_name'</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>        <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> certificate <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> name  <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 添加告警信息</span>            sql_execute<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span><span class="token string">'没有该域名备案信息'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 存储合规和不合规，网站没有备案</span>            sql_execute_detail<span class="token punctuation">(</span>ip<span class="token punctuation">,</span><span class="token string">'没有该域名备案信息'</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print(type(domain))</span>            <span class="token triple-quoted-string string">"""更新存储表"""</span>            sql_update<span class="token punctuation">(</span>domains_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># MyThread(main,args=()).start()</span>   </code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站备案信息查询脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python调用asrtv1.0的语音识别脏话接口</title>
      <link href="/2021/112915113.html"/>
      <url>/2021/112915113.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/python_asrt_Recognition.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载调用asrt识别脏话</a></p><p><code># 1. 项目代码相对位置</code></p><p>需要下载源码分析</p><p><code>2. asrserver.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用flask实现多进程调用</span><span class="token keyword">import</span> http<span class="token punctuation">.</span>server<span class="token keyword">import</span> urllib<span class="token keyword">import</span> socket<span class="token keyword">from</span> numpy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>numeric <span class="token keyword">import</span> Inf<span class="token keyword">from</span> numpy<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>npyio <span class="token keyword">import</span> save<span class="token keyword">from</span> speech_model <span class="token keyword">import</span> ModelSpeech<span class="token keyword">from</span> speech_model_zoo <span class="token keyword">import</span> SpeechModel251<span class="token keyword">from</span> speech_features <span class="token keyword">import</span> Spectrogram<span class="token keyword">from</span> LanguageModel2 <span class="token keyword">import</span> ModelLanguage<span class="token keyword">import</span> json<span class="token keyword">import</span> librosa<span class="token keyword">from</span> utils<span class="token punctuation">.</span>ops <span class="token keyword">import</span> read_wav_data<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">import</span> requests<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true"># 定义一个拿出敏感词库的函数</span><span class="token keyword">def</span> <span class="token function">read_txt</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>file <span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        list_data <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 关闭文件很重要</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> list_data<span class="token comment" spellcheck="true"># 定义一个语音识别函数</span><span class="token keyword">def</span> <span class="token function">video_to_word</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>company_id<span class="token punctuation">,</span>task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        file_path <span class="token operator">=</span> save_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now<span class="token operator">+</span> <span class="token string">'.wav'</span>        <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print('已经创建路径'+ save_path)</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行save命令</span>        save_cmd <span class="token operator">=</span> <span class="token string">"ffmpeg -loglevel quiet -i %s -t 5 -f wav -ar 16000 %s"</span><span class="token operator">%</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取音频数组形式(wavsignal)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>        wavsignal<span class="token punctuation">,</span> fs<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _ <span class="token operator">=</span> read_wav_data<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 转换为拼音</span>        r_speech <span class="token operator">=</span> ms<span class="token punctuation">.</span>recognize_speech<span class="token punctuation">(</span>wavsignal<span class="token punctuation">,</span> fs<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 转换为文本</span>        r_text <span class="token operator">=</span> ml<span class="token punctuation">.</span>SpeechToText<span class="token punctuation">(</span>r_speech<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'+++++++'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r_text<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'+++++++'</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""进行敏感词判断"""</span>        content <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> word <span class="token keyword">in</span> read_txt<span class="token punctuation">(</span><span class="token string">'./targetword/target.txt'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> word <span class="token keyword">in</span> r_text<span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print('-------')</span>                content <span class="token operator">=</span> content <span class="token operator">+</span> word <span class="token operator">+</span> <span class="token string">','</span>                <span class="token comment" spellcheck="true"># print(word)</span>                <span class="token comment" spellcheck="true"># print('-------')</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'java接口已经调用了'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用java接口"""</span>            send_data <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">'taskId'</span><span class="token punctuation">:</span>task_id<span class="token punctuation">,</span>                <span class="token string">'companyId'</span><span class="token punctuation">:</span>company_id<span class="token punctuation">,</span>                <span class="token string">'imgUrl'</span><span class="token punctuation">:</span>file_path<span class="token punctuation">,</span>                <span class="token string">'content'</span><span class="token punctuation">:</span>content<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>                            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>            <span class="token comment" spellcheck="true"># print(send_data)</span>            <span class="token comment" spellcheck="true"># 字典数据转为json数据</span>            send_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>send_data<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 发送相关参数</span>            <span class="token comment" spellcheck="true"># 亦Content-Type':'application/json的方式提交json请求</span>            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://10.8.0.42:8088/wx/photo/saveVoidWarning'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'Content-Type':'application/json'&amp;#125;, data=send_data)</span>            <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> len<span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 删除非敏感语音</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>            <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                    <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                  <span class="token triple-quoted-string string">"""flask接口"""</span>server <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># return json.dumps("&amp;#123;'message': 'None'&amp;#125;",ensure_ascii=False)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print('------------')</span>    <span class="token comment" spellcheck="true"># print(information)</span>    <span class="token comment" spellcheck="true"># print('------------')</span>    <span class="token comment" spellcheck="true"># return json.dumps(200,ensure_ascii=False)</span>        <span class="token comment" spellcheck="true"># # 获取变量</span>    path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span>    save_path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'savePath'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># save_path = 'target'</span>    company_id <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'companyId'</span><span class="token punctuation">]</span>    task_id <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'taskId'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 调用函数传入视频路径</span>    <span class="token comment" spellcheck="true"># 调用多线程实现异步处理</span>    MyThread<span class="token punctuation">(</span>video_to_word<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>company_id<span class="token punctuation">,</span>task_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># result = video_to_word(path,save_path,company_id,task_id)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""基础模型导入"""</span>    <span class="token comment" spellcheck="true"># resample_rate('test.wav')</span>    audio_length <span class="token operator">=</span> <span class="token number">1600</span>    audio_feature_length <span class="token operator">=</span> <span class="token number">200</span>    channels <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment" spellcheck="true"># 默认输出的拼音的表示大小是1428，即1427个拼音+1个空白块</span>    output_size <span class="token operator">=</span> <span class="token number">1428</span>    sm251 <span class="token operator">=</span> SpeechModel251<span class="token punctuation">(</span>        input_shape<span class="token operator">=</span><span class="token punctuation">(</span>audio_length<span class="token punctuation">,</span> audio_feature_length<span class="token punctuation">,</span> channels<span class="token punctuation">)</span><span class="token punctuation">,</span>        output_size<span class="token operator">=</span>output_size        <span class="token punctuation">)</span>    feat <span class="token operator">=</span> Spectrogram<span class="token punctuation">(</span><span class="token punctuation">)</span>    ms <span class="token operator">=</span> ModelSpeech<span class="token punctuation">(</span>sm251<span class="token punctuation">,</span> feat<span class="token punctuation">,</span> max_label_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>    ms<span class="token punctuation">.</span>load_model<span class="token punctuation">(</span><span class="token string">'save_models/'</span> <span class="token operator">+</span> sm251<span class="token punctuation">.</span>get_model_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.model.h5'</span><span class="token punctuation">)</span>    ml <span class="token operator">=</span> ModelLanguage<span class="token punctuation">(</span><span class="token string">'model_language'</span><span class="token punctuation">)</span>    ml<span class="token punctuation">.</span>LoadModel<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""启动flask服务"""</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5100</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre><p><code>2. post_test.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://10.8.0.37:5100/gttx/objectrecognition"</span><span class="token comment" spellcheck="true"># C:/Users/15256/Desktop/nowtime/yolov_smoke_v1.0/yolov5/smokingdata/images/train/000001.jpg</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span><span class="token comment" spellcheck="true"># http://pili-live-hdl.miaobolive.com/live/dfbe2bcc0acd956bda5c9a3d133e5c18.flv</span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'targetimages'&amp;#125; </span>information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/e160addb5b2e5f8123de6cb0c6e1956b.flv', </span>                <span class="token string">'savePath'</span><span class="token punctuation">:</span> <span class="token string">'target'</span><span class="token punctuation">,</span>                <span class="token string">'companyId'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>                <span class="token string">'taskId'</span><span class="token punctuation">:</span><span class="token number">3</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 10.0.0.59</span><span class="token comment" spellcheck="true">## 数据打包传输</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span> data<span class="token operator">=</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(response)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><p><code># 3. requirements.txt分析</code></p><pre class=" language-python"><code class="language-python">absl<span class="token operator">-</span>py<span class="token operator">==</span><span class="token number">0.15</span><span class="token punctuation">.</span><span class="token number">0</span>appdirs<span class="token operator">==</span><span class="token number">1.4</span><span class="token punctuation">.</span><span class="token number">4</span>astor<span class="token operator">==</span><span class="token number">0.8</span><span class="token punctuation">.</span><span class="token number">0</span>astunparse<span class="token operator">==</span><span class="token number">1.6</span><span class="token punctuation">.</span><span class="token number">3</span>audioread<span class="token operator">==</span><span class="token number">2.1</span><span class="token punctuation">.</span><span class="token number">9</span>cached<span class="token operator">-</span>property<span class="token operator">==</span><span class="token number">1.5</span><span class="token punctuation">.</span><span class="token number">2</span>cachetools<span class="token operator">==</span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">4</span>certifi<span class="token operator">==</span><span class="token number">2019.9</span><span class="token punctuation">.</span><span class="token number">11</span>cffi<span class="token operator">==</span><span class="token number">1.15</span><span class="token punctuation">.</span><span class="token number">0</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>cycler<span class="token operator">==</span><span class="token number">0.10</span><span class="token punctuation">.</span><span class="token number">0</span>decorator<span class="token operator">==</span><span class="token number">4.4</span><span class="token punctuation">.</span><span class="token number">2</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>flatbuffers<span class="token operator">==</span><span class="token number">1.12</span>gast<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span>google<span class="token operator">-</span>auth<span class="token operator">==</span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">3</span>google<span class="token operator">-</span>auth<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">6</span>google<span class="token operator">-</span>pasta<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">0</span>grpcio<span class="token operator">==</span><span class="token number">1.34</span><span class="token punctuation">.</span><span class="token number">1</span>h5py<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">0</span>idna<span class="token operator">==</span><span class="token number">3.3</span>imageio<span class="token operator">==</span><span class="token number">2.12</span><span class="token punctuation">.</span><span class="token number">0</span>imageio<span class="token operator">-</span>ffmpeg<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">5</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>joblib<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span>Keras<span class="token operator">-</span>Applications<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">8</span>keras<span class="token operator">-</span>nightly<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">0.</span>dev2021032900Keras<span class="token operator">-</span>Preprocessing<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">2</span>kiwisolver<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">1</span>librosa<span class="token operator">==</span><span class="token number">0.7</span><span class="token punctuation">.</span><span class="token number">2</span>llvmlite<span class="token operator">==</span><span class="token number">0.31</span><span class="token punctuation">.</span><span class="token number">0</span>Markdown<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>matplotlib<span class="token operator">==</span><span class="token number">3.4</span><span class="token punctuation">.</span><span class="token number">2</span>moviepy<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">3</span>numba<span class="token operator">==</span><span class="token number">0.48</span><span class="token punctuation">.</span><span class="token number">0</span>numpy<span class="token operator">==</span><span class="token number">1.19</span><span class="token punctuation">.</span><span class="token number">5</span>oauthlib<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>opt<span class="token operator">-</span>einsum<span class="token operator">==</span><span class="token number">3.3</span><span class="token punctuation">.</span><span class="token number">0</span>packaging<span class="token operator">==</span><span class="token number">21.3</span>Pillow<span class="token operator">==</span><span class="token number">8.3</span><span class="token punctuation">.</span><span class="token number">2</span>pooch<span class="token operator">==</span><span class="token number">1.5</span><span class="token punctuation">.</span><span class="token number">2</span>proglog<span class="token operator">==</span><span class="token number">0.1</span><span class="token punctuation">.</span><span class="token number">9</span>protobuf<span class="token operator">==</span><span class="token number">3.10</span><span class="token punctuation">.</span><span class="token number">0</span>pyasn1<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">8</span>pyasn1<span class="token operator">-</span>modules<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">8</span>pycparser<span class="token operator">==</span><span class="token number">2.21</span>pyparsing<span class="token operator">==</span><span class="token number">2.4</span><span class="token punctuation">.</span><span class="token number">7</span>python<span class="token operator">-</span>dateutil<span class="token operator">==</span><span class="token number">2.8</span><span class="token punctuation">.</span><span class="token number">1</span>python<span class="token operator">-</span>speech<span class="token operator">-</span>features<span class="token operator">==</span><span class="token number">0.6</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span>resampy<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">2</span>rsa<span class="token operator">==</span><span class="token number">4.7</span><span class="token punctuation">.</span><span class="token number">2</span>scikit<span class="token operator">-</span>learn<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">1</span>scipy<span class="token operator">==</span><span class="token number">1.6</span><span class="token punctuation">.</span><span class="token number">3</span>six<span class="token operator">==</span><span class="token number">1.15</span><span class="token punctuation">.</span><span class="token number">0</span>SoundFile<span class="token operator">==</span><span class="token number">0.10</span><span class="token punctuation">.</span><span class="token number">3.</span>post1tensorboard<span class="token operator">==</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">-</span>data<span class="token operator">-</span>server<span class="token operator">==</span><span class="token number">0.6</span><span class="token punctuation">.</span><span class="token number">1</span>tensorboard<span class="token operator">-</span>plugin<span class="token operator">-</span>wit<span class="token operator">==</span><span class="token number">1.8</span><span class="token punctuation">.</span><span class="token number">0</span>tensorflow<span class="token operator">-</span>estimator<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">0</span>tensorflow<span class="token operator">-</span>gpu<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span>termcolor<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span>threadpoolctl<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">0</span>tqdm<span class="token operator">==</span><span class="token number">4.62</span><span class="token punctuation">.</span><span class="token number">3</span>typing<span class="token operator">-</span>extensions<span class="token operator">==</span><span class="token number">3.7</span><span class="token punctuation">.</span><span class="token number">4.3</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>wrapt<span class="token operator">==</span><span class="token number">1.12</span><span class="token punctuation">.</span><span class="token number">1</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python调用asrt实现脏话识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python调用百度api的视频识别接口</title>
      <link href="/2021/112933904.html"/>
      <url>/2021/112933904.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/python_baidu-api_videoRecognition.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载调用百度api图片审核接口项目</a></p><h2 id="1-项目代码相对位置"><a href="#1-项目代码相对位置" class="headerlink" title=" 1. 项目代码相对位置"></a><code> 1. 项目代码相对位置</code></h2><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/baidu-api.PNG"></p><p><code>2. accetoken.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">get_accesstoken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># client_id 为官网获取的AK， client_secret 为官网获取的SK</span>    host <span class="token operator">=</span> <span class="token string">"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=GfHcIUdOtlOSOVtGWtW1w6&amp;client_secret=c9HtDl7rGPwo6O9NznWyuxvj9nMXe"</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>host<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(response)</span>    <span class="token keyword">if</span> response<span class="token punctuation">:</span>        <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'access_token'</span><span class="token punctuation">]</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>get_accesstoken<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>now<span class="token operator">-</span>start<span class="token punctuation">)</span></code></pre><p><code>3. main.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> os <span class="token keyword">import</span> access<span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">from</span> accetoken <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> cv2<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token triple-quoted-string string">'''图像审核接口,功能调用百度api对视频流进行截图处理'''</span><span class="token keyword">def</span> <span class="token function">process_video_to_images</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 文件夹路径不存在去创建</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># print('已经创建路径'+ save_path)</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>    now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 图片存储路径</span>    file_path <span class="token operator">=</span> save_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now <span class="token operator">+</span> <span class="token string">'.jpg'</span>    <span class="token comment" spellcheck="true"># print(path,file_path)</span>    save_cmd <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared/ffmpeg-4.4.1-full_build-shared/bin/ffmpeg.exe -loglevel quiet -i %s -r 1 -t 0.1 -f image2  %s"</span><span class="token operator">%</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 执行保存</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span>        f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>        img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># !!!!!!!!!关闭文件很重要</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> picture_save_alert<span class="token punctuation">(</span>img<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'视频打开失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':6,'conclusion': '视频打开失败'&amp;#125;,ensure_ascii=False)</span><span class="token keyword">def</span> <span class="token function">picture_save_alert</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># print('hello word')</span>    request_url <span class="token operator">=</span> <span class="token string">"https://aip.baidubce.com/rest/2.0/solution/v1/img_censor/v2/user_defined"</span>    <span class="token comment" spellcheck="true"># 识别</span>    params <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"image":img&amp;#125;</span>    access_token <span class="token operator">=</span> <span class="token string">'%s'</span><span class="token operator">%</span>get_accesstoken<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># access_token = '24.a6252d0fc87a8d462ccb4cb9f4a7e390.2592000.1640328040.282335-2521363'</span>    request_url <span class="token operator">=</span> request_url <span class="token operator">+</span> <span class="token string">"?access_token="</span> <span class="token operator">+</span> access_token    headers <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'content-type': 'application/x-www-form-urlencoded'&amp;#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>request_url<span class="token punctuation">,</span> data<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print('+++++++++')</span>    <span class="token comment" spellcheck="true"># print(response.json())</span>    <span class="token comment" spellcheck="true"># print('+++++++++')</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 请求成功</span>        <span class="token keyword">if</span> response<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'合规'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'conclusionType'</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print(type(response.json()['conclusionType']))</span>                <span class="token comment" spellcheck="true"># print(id,companyId)</span>                <span class="token comment" spellcheck="true"># 图片命名规则</span>                <span class="token comment" spellcheck="true"># cv2.imwrite("%s/%s.jpg"%(save_path,now),frame)</span>                <span class="token comment" spellcheck="true"># print('图片合规的')</span>                result <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>                result <span class="token operator">=</span> dict<span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 移除图片</span>                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 返回成功的数据</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>result<span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># 不合规</span>            <span class="token keyword">elif</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'conclusionType'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不合规'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 不合规返回图片路径</span>                <span class="token comment" spellcheck="true"># 数据返回结果</span>                result <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>                result <span class="token operator">=</span> dict<span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 更新数据</span>                result<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                    <span class="token string">'imagePath'</span><span class="token punctuation">:</span>file_path                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span>                                <span class="token comment" spellcheck="true"># 返回成功的数据</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>result<span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return str(result)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span><span class="token triple-quoted-string string">"""flask接口"""</span>server <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span>        <span class="token comment" spellcheck="true"># return json.dumps("&amp;#123;'message': 'None'&amp;#125;",ensure_ascii=False)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span>    save_path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'savePath'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 调用函数</span>    result <span class="token operator">=</span> process_video_to_images<span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    启动flask服务    """</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre><p><code>4. post_test.py</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token triple-quoted-string string">"""这是一个使用多线程的类"""</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://127.0.0.1:5000/gttx/objectrecognition"</span><span class="token comment" spellcheck="true"># C:/Users/15256/Desktop/nowtime/yolov_smoke_v1.0/yolov5/smokingdata/images/train/000001.jpg</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span><span class="token comment" spellcheck="true"># http://pili-live-hdl.miaobolive.com/live/dfbe2bcc0acd956bda5c9a3d133e5c18.flv</span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'targetimages'&amp;#125; </span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/76db77b91f9248d3e21eef0f1e815f37.flv',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'./target/test'&amp;#125; </span><span class="token comment" spellcheck="true"># information = json.dumps(information)</span><span class="token keyword">import</span> random<span class="token comment" spellcheck="true">## 数据打包传输</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/6e8d175660edc74ea70f54abbd598c8a.flv',  </span>                <span class="token string">'savePath'</span> <span class="token punctuation">:</span><span class="token string">'./target/test/%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># _Data = information</span>    MyThread<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span>information<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># response = requests.post(interfaceurl, data=information)</span>    <span class="token comment" spellcheck="true"># response = requests.post(interfaceurl, data=information)</span>    <span class="token comment" spellcheck="true"># print(response)</span>    <span class="token comment" spellcheck="true"># print(response.json())</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><p><code>4. requirements.txt</code></p><pre class=" language-python"><code class="language-python">baidu<span class="token operator">-</span>aip<span class="token operator">==</span><span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">18.0</span>certifi<span class="token operator">==</span><span class="token number">2021.10</span><span class="token punctuation">.</span><span class="token number">8</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>idna<span class="token operator">==</span><span class="token number">3.3</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>kafka<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>numpy<span class="token operator">==</span><span class="token number">1.21</span><span class="token punctuation">.</span><span class="token number">4</span>opencv<span class="token operator">-</span>contrib<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.60</span>opencv<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.60</span>Pillow<span class="token operator">==</span><span class="token number">8.4</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span></code></pre><p><code>5. test.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> random<span class="token comment" spellcheck="true"># file_path = save_path + '/' + now+ '.wav'</span>now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图片存储路径</span>file_path <span class="token operator">=</span> <span class="token string">'target'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'test'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now  <span class="token operator">+</span> str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    file_path <span class="token operator">=</span> <span class="token string">'target'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'test'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now  <span class="token operator">+</span> str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">'.jpg'</span>    <span class="token comment" spellcheck="true"># time.sleep(1)</span>    save_cmd <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared/ffmpeg-4.4.1-full_build-shared/bin/ffmpeg.exe -i http://pili-live-hdl.miaobolive.com/live/6e8d175660edc74ea70f54abbd598c8a.flv -r 1 -t 0.1 -f image2   %s"</span><span class="token operator">%</span>file_path    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span></code></pre><p><code>#6. README.md</code></p><h3 id="1-这个项目是调用百度api对视频链接进行截图识别返回结果"><a href="#1-这个项目是调用百度api对视频链接进行截图识别返回结果" class="headerlink" title="1. 这个项目是调用百度api对视频链接进行截图识别返回结果"></a>1. 这个项目是调用百度api对视频链接进行截图识别返回结果</h3><h3 id="2-accetoken-py是获取请求accetoken的函数"><a href="#2-accetoken-py是获取请求accetoken的函数" class="headerlink" title="2. accetoken.py是获取请求accetoken的函数"></a>2. accetoken.py是获取请求accetoken的函数</h3><h3 id="3-main-py-是项目的主代码"><a href="#3-main-py-是项目的主代码" class="headerlink" title="3. main.py 是项目的主代码"></a>3. main.py 是项目的主代码</h3><h3 id="4-post-test-py-是提交测试例子"><a href="#4-post-test-py-是提交测试例子" class="headerlink" title="4. post_test.py 是提交测试例子"></a>4. post_test.py 是提交测试例子</h3><h3 id="5-requirements-txt是虚拟环境需要的依赖包"><a href="#5-requirements-txt是虚拟环境需要的依赖包" class="headerlink" title="5. requirements.txt是虚拟环境需要的依赖包"></a>5. requirements.txt是虚拟环境需要的依赖包</h3><h3 id="6-test-py是项目测试某些python写法的文件"><a href="#6-test-py是项目测试某些python写法的文件" class="headerlink" title="6. test.py是项目测试某些python写法的文件"></a>6. test.py是项目测试某些python写法的文件</h3>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python调用百度api图像识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux日常笔记</title>
      <link href="/2021/112949872.html"/>
      <url>/2021/112949872.html</url>
      
        <content type="html"><![CDATA[<h4 id="linux-使用nohup创建后台"><a href="#linux-使用nohup创建后台" class="headerlink" title="linux 使用nohup创建后台"></a>linux 使用nohup创建后台</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 将 check_application.py放入后台运行并生成日志，日志目录在info.log</span><span class="token comment" spellcheck="true"># 2>&amp;1 的意思就是将标准错误重定向到标准输出</span>nohup python3 check_application<span class="token punctuation">.</span>py <span class="token operator">></span>log<span class="token operator">/</span>info<span class="token punctuation">.</span>log <span class="token number">2</span><span class="token operator">></span><span class="token operator">&amp;</span><span class="token number">1</span> <span class="token operator">&amp;</span></code></pre><h4 id="linux-删除所有空格（每行）"><a href="#linux-删除所有空格（每行）" class="headerlink" title="linux 删除所有空格（每行）"></a>linux 删除所有空格（每行）</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sed</span> -i s/<span class="token punctuation">[</span><span class="token punctuation">[</span>:space:<span class="token punctuation">]</span><span class="token punctuation">]</span>//g filename<span class="token function">sed</span> -i <span class="token string">'/^[[:blank:]]*$/d'</span> filename</code></pre><h4 id="linux-修改某个文件的某列"><a href="#linux-修改某个文件的某列" class="headerlink" title="linux 修改某个文件的某列"></a>linux 修改某个文件的某列</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"^-"</span> <span class="token operator">|</span> <span class="token function">wc</span> -l</code></pre><h4 id="linux-查看文件夹下文件个数"><a href="#linux-查看文件夹下文件个数" class="headerlink" title="linux 查看文件夹下文件个数"></a>linux 查看文件夹下文件个数</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"^-"</span> <span class="token operator">|</span> <span class="token function">wc</span> -l</code></pre><h4 id="linux-vim使用多窗口"><a href="#linux-vim使用多窗口" class="headerlink" title="linux  vim使用多窗口"></a>linux  vim使用多窗口</h4><pre class=" language-bash"><code class="language-bash">水平窗口的开启使用:sp命令即可 <span class="token comment" spellcheck="true"># （1）Ctrl+w+k 上一个窗口   Ctrl+w+ j  下一个窗口 （2）Ctrl+w+上下方向键</span>垂直窗口的开启使用:vs命令即可 <span class="token comment" spellcheck="true"># （1）Ctrl+w+h 当前窗口左边的一个窗口   Ctrl+w+ l  当前窗口右边的一个窗口 （2）Ctrl+w+左右方向键</span></code></pre><h4 id="linux-获取某个进程的pid号"><a href="#linux-获取某个进程的pid号" class="headerlink" title="linux  获取某个进程的pid号"></a>linux  获取某个进程的pid号</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> check_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span> # check_application.py 是运行程序的名字<span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> traffic_application.py <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> truck_application.py <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'SCREEN -S test'</span>  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span> # 获取screen 某个虚拟终端的id<span class="token comment" spellcheck="true">## 某个脚本案例</span><span class="token comment" spellcheck="true">#!/bin/bash</span><span class="token comment" spellcheck="true"># 获取pid程序运行的pid号</span>pid1<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> check_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span>pid2<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> traffic_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span>pid3<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> truck_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 杀死已经运行的程序</span><span class="token function">kill</span> -9 <span class="token variable">$pid1</span><span class="token function">kill</span> -9 <span class="token variable">$pid2</span><span class="token function">kill</span> -9 <span class="token variable">$pid3</span><span class="token comment" spellcheck="true"># 进入虚拟环境</span><span class="token function">source</span> env/bin/activate<span class="token comment" spellcheck="true"># 后台运行程序</span><span class="token function">nohup</span> python3 traffic_application.py <span class="token operator">></span>log/trafficInfo.log.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token function">nohup</span> python3 check_application.py <span class="token operator">></span>log/info.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token function">nohup</span> python3 truck_application.py <span class="token operator">></span>log/truckInfo.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token comment" spellcheck="true"># 退出虚拟环境</span>deactivate<span class="token keyword">echo</span> <span class="token string">"check_application.py traffic_application.py truck_application.py重启成功"</span></code></pre><h4 id="linux设置环境变量"><a href="#linux设置环境变量" class="headerlink" title="linux设置环境变量"></a>linux设置环境变量</h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># bash 终端的情况下</span><span class="token comment" spellcheck="true">## 1. 对所有用户有效</span><span class="token comment" spellcheck="true">## 除了profile 也有可能在/etc/bash.bashrc这个文件里</span><span class="token function">vi</span> /etc/profile<span class="token comment" spellcheck="true">## 所有的引号可以不添加PATH必须大写</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"<span class="token variable">$PATH</span>:/usr/abc/def/"</span><span class="token function">source</span> /etc/profile<span class="token comment" spellcheck="true">## 2. 对当前用户有效</span><span class="token function">vi</span> /root/.bashrc<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"<span class="token variable">$PATH</span>:/usr/abc/def/"</span><span class="token function">source</span> /root/.bashrc<span class="token comment" spellcheck="true">## 3. 添加多个环境变量</span><span class="token comment" spellcheck="true"># 比如添加搜索路径/home/cc/path1和/home/cc/path2,路径到PATH中,采用:来分隔,冒号左右不需要空格:</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"<span class="token variable">$PATH</span>:/home/cc/path1:/home/cc/path2"</span></code></pre><h4 id="screen-脚本使用"><a href="#screen-脚本使用" class="headerlink" title="screen 脚本使用"></a>screen 脚本使用</h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## screen 配置开机自启动脚本</span>screen_name<span class="token operator">=</span><span class="token string">"my_screen"</span> cmd<span class="token operator">=</span><span class="token string">"python test.py"</span><span class="token punctuation">;</span>  <span class="token function">screen</span> -dmS <span class="token variable">$screen_name</span> <span class="token comment" spellcheck="true"># 创建名字</span><span class="token comment" spellcheck="true"># 方式一</span><span class="token function">screen</span> -x -S <span class="token variable">$screen_name</span> -p 0 -X stuff <span class="token string">"<span class="token variable">$cmd</span>\n"</span> <span class="token comment" spellcheck="true"># 运行命令 </span><span class="token comment" spellcheck="true"># 方式二 回车符可以在下一行传入</span><span class="token function">screen</span> -x -S <span class="token variable">$screen_name</span> -p 0 -X stuff <span class="token string">"<span class="token variable">$cmd</span>"</span> <span class="token comment" spellcheck="true"># 运行命令不添加回车符号</span><span class="token function">screen</span> -x -S <span class="token variable">$screen_name</span> -p 0 -X stuff <span class="token string">'\n'</span> <span class="token comment" spellcheck="true"># 添加回车符号</span></code></pre><h4 id="linux安装python"><a href="#linux安装python" class="headerlink" title="linux安装python"></a>linux安装python</h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 获取linux的python包</span><span class="token function">wget</span> xxxx.Python-3.6.5.tar.gz<span class="token comment" spellcheck="true">## 2. 准备编译环境</span>yum/apt <span class="token function">install</span> gcc <span class="token comment" spellcheck="true"># 或者还有其他需要安装的包</span><span class="token comment" spellcheck="true">## 3. 开始编译</span>./configure --prefix<span class="token operator">=</span>/root/training/Python-3.6.5 <span class="token comment" spellcheck="true"># --prefix是指定安装目录</span><span class="token function">make</span><span class="token function">make</span> <span class="token function">install</span><span class="token comment" spellcheck="true">## 4. 配置环境变量</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"<span class="token variable">$PATH</span>:/root/training/Python-3.6.5 "</span><span class="token comment" spellcheck="true">## 5. 测试验证</span><span class="token comment" spellcheck="true"># 终端输入python3.6.5启动python成功</span></code></pre><h3 id="linux开机自启动两种方法"><a href="#linux开机自启动两种方法" class="headerlink" title="linux开机自启动两种方法"></a>linux开机自启动两种方法</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 使用update-rc.d </span><span class="token comment" spellcheck="true"># 创建shell脚本并移动到/etc/init.d里面</span><span class="token function">cd</span> /etc/init.d<span class="token comment" spellcheck="true"># 配置开机启动</span>update-rc.d name defaults <span class="token comment" spellcheck="true"># 或者 update-rc.d name start 20 2 3 4 5 . stop 20 0 1 6 .</span><span class="token comment" spellcheck="true">## 2. 使用systemd</span><span class="token comment" spellcheck="true"># 进入到system下</span>/usr/lib/systemd/system/<span class="token comment" spellcheck="true"># 配置一个service文件</span>vim test.service<span class="token comment" spellcheck="true"># 内容如下例子</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>Frp Client ServiceAfter<span class="token operator">=</span>network.target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type<span class="token operator">=</span>simpleUser<span class="token operator">=</span>nobodyRestart<span class="token operator">=</span>on-failureRestartSec<span class="token operator">=</span>5sExecStart<span class="token operator">=</span>/usr/bin/frpc -c /etc/frp/frpc.iniExecReload<span class="token operator">=</span>/usr/bin/frpc reload -c /etc/frp/frpc.iniLimitNOFILE<span class="token operator">=</span>1048576<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi-user.target<span class="token comment" spellcheck="true"># 启动配置使用systemctl命令即可</span>systemctl start <span class="token function">test</span></code></pre><h3 id="ubuntu-ufw设置端口允许（9000端口允许）"><a href="#ubuntu-ufw设置端口允许（9000端口允许）" class="headerlink" title="ubuntu ufw设置端口允许（9000端口允许）"></a>ubuntu ufw设置端口允许（9000端口允许）</h3><pre class=" language-bash"><code class="language-bash">ufw allow proto tcp from 10.8.0.0/24 to 10.8.0.37 port 9000</code></pre><h3 id="python3-消息队列-queue"><a href="#python3-消息队列-queue" class="headerlink" title="python3 消息队列(queue)"></a>python3 消息队列(queue)</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 进程之间通过消息队列进行共享</span><span class="token comment" spellcheck="true"># 导入消息队列模块</span><span class="token keyword">import</span> time<span class="token keyword">import</span> multiprocessing<span class="token keyword">import</span> threading<span class="token comment" spellcheck="true"># 创建一个放1个消息的消息队列</span>queue<span class="token operator">=</span>multiprocessing<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 放入第一个值</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">def</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> i    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>        queue<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token operator">%</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">bb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"消费到的数据"</span><span class="token operator">+</span>queue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>aa<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># threading.Thread(target=bb,args=()).start()</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux日常随记 </tag>
            
            <tag> linux设置环境变量 </tag>
            
            <tag> nohup创建后台 </tag>
            
            <tag> linux删除所有空格 </tag>
            
            <tag> vim使用多窗口 </tag>
            
            <tag> linux获取进程pid </tag>
            
            <tag> linux查看文件数 </tag>
            
            <tag> linux安装python </tag>
            
            <tag> ufw开启端口允许 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python日常笔记</title>
      <link href="/2021/111223223.html"/>
      <url>/2021/111223223.html</url>
      
        <content type="html"><![CDATA[<h4 id="显示当前目录"><a href="#显示当前目录" class="headerlink" title="显示当前目录"></a>显示当前目录</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="python装饰器是什么"><a href="#python装饰器是什么" class="headerlink" title="python装饰器是什么"></a>python装饰器是什么</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">pass</span></code></pre><h4 id="不定参数函数变量"><a href="#不定参数函数变量" class="headerlink" title="不定参数函数变量"></a>不定参数函数变量</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># *args 是用来发送一个非键值对的可变数量的参数列表给一个函数</span><span class="token comment" spellcheck="true"># 1</span><span class="token keyword">def</span> <span class="token function">test_args_kwargs</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_args_kwargs<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">332</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token keyword">def</span> <span class="token function">test_args_kwargs</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_args_kwargs<span class="token punctuation">(</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># **kwargs 允许你将不定长度的键值对, 作为参数传递给一个函数</span><span class="token comment" spellcheck="true">#</span><span class="token keyword">def</span> <span class="token function">test_kwargs</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"name":'python',"name1":'java',"name2":'ruby',"name3":'lua'&amp;#125;</span>test_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>b<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2</span><span class="token keyword">def</span> <span class="token function">test_kwargs</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>a  <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'a'</span><span class="token punctuation">,</span>    <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token string">'b'</span><span class="token punctuation">,</span>    <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token string">'c'</span><span class="token punctuation">,</span>    <span class="token string">'d'</span><span class="token punctuation">:</span><span class="token string">'d'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>test_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>a<span class="token punctuation">)</span></code></pre><h4 id="python-linux下创建虚拟环境-名字为py36"><a href="#python-linux下创建虚拟环境-名字为py36" class="headerlink" title="python linux下创建虚拟环境 名字为py36"></a>python linux下创建虚拟环境 名字为py36</h4><pre class=" language-python"><code class="language-python">python3 <span class="token operator">-</span>m venv py36</code></pre><h4 id="pip-指定阿里源安装"><a href="#pip-指定阿里源安装" class="headerlink" title="pip 指定阿里源安装"></a>pip 指定阿里源安装</h4><pre class=" language-python"><code class="language-python">pip install <span class="token operator">-</span>r requirements<span class="token punctuation">.</span>txt  <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>pypi<span class="token operator">/</span>simple<span class="token operator">/</span></code></pre><h4 id="pip-生成-requirements-环境依赖文件"><a href="#pip-生成-requirements-环境依赖文件" class="headerlink" title="pip 生成 requirements 环境依赖文件"></a>pip 生成 requirements 环境依赖文件</h4><pre class=" language-python"><code class="language-python">pip freeze  <span class="token operator">></span> requirements</code></pre><h3 id="pyton遍历文件夹下的文件"><a href="#pyton遍历文件夹下的文件" class="headerlink" title="pyton遍历文件夹下的文件"></a>pyton遍历文件夹下的文件</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>imagesdir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 获取文件夹下所以图片的名字</span>        <span class="token keyword">for</span> imagename <span class="token keyword">in</span> files<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 拼接图片路径</span>            imagepath <span class="token operator">=</span> root <span class="token operator">+</span> <span class="token string">'/'</span><span class="token operator">+</span> imagename            images_path_name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">'imagepath'</span><span class="token punctuation">:</span>imagepath<span class="token punctuation">,</span>                <span class="token string">'imagename'</span><span class="token punctuation">:</span>imagename                    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span>        <span class="token keyword">return</span> images_path_name_list</code></pre><h3 id="python-逐行遍历txt文本"><a href="#python-逐行遍历txt文本" class="headerlink" title="python 逐行遍历txt文本"></a>python 逐行遍历txt文本</h3><pre class=" language-python"><code class="language-python"> f <span class="token operator">=</span> open<span class="token punctuation">(</span>r<span class="token string">"C:\Users\15256\Desktop\宝丽金\song_mix.txt"</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 返回一个文件对象 </span> lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 调用文件的 readline()方法 </span> <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># split() 默认就是以空格为分割</span>     line_list<span class="token operator">=</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>     SongName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>     SingerName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>     <span class="token keyword">if</span> SingerName<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">continue</span></code></pre><h3 id="python构造多线程类"><a href="#python构造多线程类" class="headerlink" title="python构造多线程类"></a>python构造多线程类</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""这是一个使用多线程的类"""</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None</code></pre><h3 id="ffmpeg保存图片"><a href="#ffmpeg保存图片" class="headerlink" title="ffmpeg保存图片"></a>ffmpeg保存图片</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># path 视频链接 </span><span class="token comment" spellcheck="true"># file_path 保存图片位置</span>save_cmd <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared/ffmpeg-4.4.1-full_build-shared/bin/ffmpeg.exe -loglevel quiet -i %s -r 1 -t 0.1 -f image2  %s"</span><span class="token operator">%</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python日常随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常密码本</title>
      <link href="/2021/11122148.html"/>
      <url>/2021/11122148.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5456c70115bd5193d52f9333308f31a99f105200db827121d016bec3ed0a52ed">14f2d733a805bc4143cc4d1dcd33bd086165bf1343064b1ba2555105fc046f80d76280ed663e93c948014a7a9106ba2aa41fafedae7e55ffac04c85d4751f94db011fc1c5c6b0e6c9b63e830ae38c3a8e6c7ca2c8eacc7620cd059b748963f8cdf92c328a89556dcf1aa7248bbc917ef8c8654e236bcbf14c8d1f0ff9d3a7b63a621732e3462816eaa2030e285830bbe2cb265983bcd68fa3eb43f5f6be4fc41befc0d00266898fea6c4c0bff3f1616d6263649999a671bc6369c24e9fcf4458d745481d36bfd9c847bf4aa4cfaec7037c9dd1e901b2d295021158872de8aea7c1ec7ba0659c25481d2f4721e18a9c8f7ab81d67078a985129030f945242f7cdc399e27d74522a55ca62bc2bdf2695bfb1b8fbff4462fff19512e19313d88373659558ae45a38914f5621114a3c8cfc565641acaad8645b70313c2aa8eec0fc7626ea471e6be33acdac13a966833828c500caeb36638b872c08f52a022fbb1f39d394a1b5afbc953e1547c9d3b7e741e671f59627e51430c4297e72c09a62b1b475ce91825b53f595c85a511d44eb192927b3bd747583046d876d5bd3bdfd264db4727f41bf9fd686c62ed2498006b2e03317f48df2d5aa8188f1b41df5299878acdfe1acf45bc493130928c24dc4170375d68c718b1d0c25194f40c6bc27279d66e93fdfe983f6b8df650d282b239bf68d9625bb340078b495a8891200d8173659330e4adccad2d444d683a97428fe4b60cdf4353577819f17ab318317987c92c038dec1dce6b6a32f78e5a3725d6d847d54c675117bae19d20a500fa745e3477b7428b6aebcd9a0c23ad33fa43a717dea750132ecd4af29c3027a9257a49aff9535bfd19eb206f783b21fd9f000ab29a35aac1f4d770e158fa51c31d18c6339aac1bd864fd692635f21d63eb5c446750f6b5e190a88b6b9cdee4f1b82e1bf89a8ee4bc7bcb7ac6a92181bae537afa6029ba9a7e852091383d78ac4ad5dc6c4ca1c70c2618763bfa16ec6b71a2a3820bc9512cdbcb3817b6f860072665ac9a4b825cc9847c02099465846a3ca8c94ddd9e8c1cafc9df6fb779ef1b32d6e2309ede9bf944e78327ce99c1f45c58746291d48d5413746457cda29f705643abf11b1041d2c9c89cd46ce3c78fbf7f3e12c76d5084e78108e5f26c24bb23d4a340d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日常密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常密码记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python下excel和txt和csv和mysql相互间数据插入</title>
      <link href="/2021/110962388.html"/>
      <url>/2021/110962388.html</url>
      
        <content type="html"><![CDATA[<h1 id="python下excel和txt和csv和mysql相互间数据插入"><a href="#python下excel和txt和csv和mysql相互间数据插入" class="headerlink" title="python下excel和txt和csv和mysql相互间数据插入"></a>python下excel和txt和csv和mysql相互间数据插入</h1><h3 id="插入数据到excel里"><a href="#插入数据到excel里" class="headerlink" title="插入数据到excel里"></a>插入数据到excel里</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'评级编号': [1,2],</span>        <span class="token string">'名称'</span><span class="token punctuation">:</span> name_list<span class="token punctuation">,</span>        <span class="token string">'分数'</span><span class="token punctuation">:</span> score_list<span class="token punctuation">,</span>        <span class="token string">'年份'</span><span class="token punctuation">:</span> year_list<span class="token punctuation">,</span>        <span class="token string">'尺寸'</span><span class="token punctuation">:</span> size_list<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">'./1.xlsx'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 在 excel 里面格式如下</span>评级编号 名称 分数 年份 尺寸   <span class="token number">1</span>     <span class="token number">1</span>   <span class="token number">1</span>    <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">2</span>     <span class="token number">2</span>   <span class="token number">2</span>    <span class="token number">2</span>   <span class="token number">2</span></code></pre><h3 id="pandns判断取出数据为空"><a href="#pandns判断取出数据为空" class="headerlink" title="pandns判断取出数据为空"></a>pandns判断取出数据为空</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">or</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span></code></pre><h3 id="python向csv中插入数据"><a href="#python向csv中插入数据" class="headerlink" title="python向csv中插入数据"></a>python向csv中插入数据</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""v1.0单纯的数据插入"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>        <span class="token comment" spellcheck="true"># 进口数据插入</span>        created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>        sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 出口数据插入</span>        sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># print(row[0],float(row[1]))</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""v2.0添加了防止插入数据中断,查询时采用了两个字段 LOG_TIME 和 INTERFACE_INFO"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d <span class="token operator">and</span> <span class="token punctuation">(</span>INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span> <span class="token operator">or</span> INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span> " <span class="token operator">%</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""防止重复的查询"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'插入新数据'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\nowtime\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""v3.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d" <span class="token operator">%</span> int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token keyword">pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token triple-quoted-string string">''''''        """插入数据"""        """防止重复的插入"""        # 查询数据不存在时再执行插入        if sql_select(timeconversion(row[0])) == 'unexisted':            """调用sql_execute插入数据"""            # 进口数据插入            created_time=datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")            sql_execute(timeconversion(row[0]),ip,host,1,interface_in_info,timeconversion(row[0]),row[1],ns,created_time)            # 出口数据插入            sql_execute(timeconversion(row[0]),ip,host,2,interface_out_info,timeconversion(row[0]),row[2],ns,created_time)                        # # print(row[0],float(row[1]))            # time.sleep(2)        '''</span><span class="token string">''</span>'<span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token triple-quoted-string string">"""v4.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info,实现了默认插入和已经存在的进行更新。"""</span><span class="token comment" spellcheck="true"># 导入相关需要使用的函数库</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d" <span class="token operator">%</span> int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token comment" spellcheck="true"># pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token triple-quoted-string string">"""插入数据"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token triple-quoted-string string">"""防止重复的插入"""</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>               <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""v5.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info,实现了默认插入和已经存在的进行更新增加了查询是否存在的可信度"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 这里查询采用了两个字段LOG_TIME 和 INTERFACE_INFO</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d <span class="token operator">and</span> <span class="token punctuation">(</span>INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span> <span class="token operator">or</span> INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span> " <span class="token operator">%</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'---------'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token comment" spellcheck="true"># pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token triple-quoted-string string">"""插入数据"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token triple-quoted-string string">"""防止重复的插入"""</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>               <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\nowtime\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    </code></pre><h2 id="sql实现大量数据批量插入"><a href="#sql实现大量数据批量插入" class="headerlink" title="sql实现大量数据批量插入"></a><code>sql实现大量数据批量插入</code></h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token comment" spellcheck="true"># 定义一个数据全局列表</span>value_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token comment" spellcheck="true"># def sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time):</span><span class="token comment" spellcheck="true">#     # SQL 插入语句</span><span class="token comment" spellcheck="true">#     ns = create_random()</span><span class="token comment" spellcheck="true">#     # type is </span><span class="token comment" spellcheck="true">#     sql = "INSERT INTO zabbix_flow_data_copy1(log_time, \</span><span class="token comment" spellcheck="true">#     ip, host, type,interface_info,clock,value,ns,created_time) \</span><span class="token comment" spellcheck="true">#     VALUES ('%s', '%s', '%s', '%d', '%s','%s','%s','%s','%s')" % \</span><span class="token comment" spellcheck="true">#     (int(log_time),ip,host,type,interface_info,int(clock),int(value),ns,created_time)</span><span class="token comment" spellcheck="true">#     try:</span><span class="token comment" spellcheck="true">#         # 使用cursor()方法获取操作游标 </span><span class="token comment" spellcheck="true">#         cursor = db.cursor()</span><span class="token comment" spellcheck="true">#         # 执行sql语句</span><span class="token comment" spellcheck="true">#         cursor.execute(sql)</span><span class="token comment" spellcheck="true">#         # 提交到数据库执行</span><span class="token comment" spellcheck="true">#         db.commit()</span><span class="token comment" spellcheck="true">#         </span><span class="token triple-quoted-string string">"""插入数据查看调试"""</span><span class="token comment" spellcheck="true">#         print("插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"%(int(log_time),ip,host,type,interface_info,int(clock),int(value),ns,created_time))</span><span class="token comment" spellcheck="true">#         # time.sleep(2)</span><span class="token comment" spellcheck="true">#     except:</span><span class="token comment" spellcheck="true">#         # 如果发生错误则回滚,在错误的实在再关闭数据库</span><span class="token comment" spellcheck="true">#         db.rollback()</span><span class="token keyword">def</span> <span class="token function">splicing_all_value_insert</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> value_list    ns <span class="token operator">=</span> create_random<span class="token punctuation">(</span><span class="token punctuation">)</span>    clock<span class="token operator">=</span>int<span class="token punctuation">(</span>clock<span class="token punctuation">)</span>    value<span class="token operator">=</span>int<span class="token punctuation">(</span>value<span class="token punctuation">)</span>    log_time<span class="token operator">=</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    value_information<span class="token operator">=</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    value_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>value_information<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>        <span class="token comment" spellcheck="true"># 进口数据插入</span>        created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">or</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print(row[1],row[2])</span>            <span class="token comment" spellcheck="true"># in 数据</span>            splicing_all_value_insert<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># out 数据</span>            splicing_all_value_insert<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># sql_execute(timeconversion(row[0]),ip,host,1,interface_in_info,timeconversion(row[0]),row[1],ns,created_time)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            <span class="token comment" spellcheck="true"># sql_execute(timeconversion(row[0]),ip,host,2,interface_out_info,timeconversion(row[0]),row[2],ns,created_time)</span>                        <span class="token comment" spellcheck="true"># print(row[0],float(row[1]))</span>    <span class="token triple-quoted-string string">"""一张表结束一行插入数据到sql"""</span>    <span class="token comment" spellcheck="true"># 在写sql语句时，不管字段为什么类型，占位符统一使用%s,且不能加上引号。例如</span>    <span class="token comment" spellcheck="true"># sql="insert into tablename (id,name) values (%s,%s)"</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        sql <span class="token operator">=</span> "INSERT INTO zabbix_flow_data_copy1<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">)</span>"        cursor<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span>value_list<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token operator">+</span><span class="token string">"数据插入成功"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果错误回滚一下</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    <span class="token comment" spellcheck="true"># db = pymysql.connect(host='172.16.1.15',</span>    <span class="token comment" spellcheck="true">#                     user='bigdata',</span>    <span class="token comment" spellcheck="true">#                     password='bigdata2020',</span>    <span class="token comment" spellcheck="true">#                     database='zabbix')</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>                   <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">'183.131.213.129'</span>    host<span class="token operator">=</span><span class="token string">'QiuBin-core'</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">''</span>    interface_out_info<span class="token operator">=</span><span class="token string">''</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    files_dir<span class="token operator">=</span>r<span class="token string">'D:\agotime\补录流量\36.27.214.254精英12708(1)(1)\36.27.214.254精英12708'</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>files_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files<span class="token punctuation">:</span>            name_split_list<span class="token operator">=</span>file_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>            interface_split_list<span class="token operator">=</span>name_split_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"'."</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># interface out-flow</span>            <span class="token comment" spellcheck="true"># interface in-flow</span>            interface_in_info<span class="token operator">=</span><span class="token string">"interface in-flow"</span><span class="token operator">+</span>interface_split_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span>            interface_out_info<span class="token operator">=</span><span class="token string">"interface out-flow"</span><span class="token operator">+</span>interface_split_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>            read_deal_csv<span class="token punctuation">(</span>files_dir<span class="token punctuation">,</span>file_name<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="python数据批量插入到数据库中"><a href="#python数据批量插入到数据库中" class="headerlink" title="python数据批量插入到数据库中"></a>python数据批量插入到数据库中</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token comment" spellcheck="true"># def sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time):</span><span class="token comment" spellcheck="true">#     # SQL 插入语句</span><span class="token comment" spellcheck="true">#     ns = create_random()</span><span class="token comment" spellcheck="true">#     # type is </span><span class="token comment" spellcheck="true">#     sql = "INSERT INTO zabbix_flow_data_copy1(log_time, \</span><span class="token comment" spellcheck="true">#     ip, host, type,interface_info,clock,value,ns,created_time) \</span><span class="token comment" spellcheck="true">#     VALUES ('%s', '%s', '%s', '%d', '%s','%s','%s','%s','%s')" % \</span><span class="token comment" spellcheck="true">#     (int(log_time),ip,host,type,interface_info,int(clock),int(value),ns,created_time)</span><span class="token comment" spellcheck="true">#     try:</span><span class="token comment" spellcheck="true">#         # 使用cursor()方法获取操作游标 </span><span class="token comment" spellcheck="true">#         cursor = db.cursor()</span><span class="token comment" spellcheck="true">#         # 执行sql语句</span><span class="token comment" spellcheck="true">#         cursor.execute(sql)</span><span class="token comment" spellcheck="true">#         # 提交到数据库执行</span><span class="token comment" spellcheck="true">#         db.commit()</span><span class="token comment" spellcheck="true">#         </span><span class="token triple-quoted-string string">"""插入数据查看调试"""</span><span class="token comment" spellcheck="true">#         print("插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"%(int(log_time),ip,host,type,interface_info,int(clock),int(value),ns,created_time))</span><span class="token comment" spellcheck="true">#         # time.sleep(2)</span><span class="token comment" spellcheck="true">#     except:</span><span class="token comment" spellcheck="true">#         # 如果发生错误则回滚,在错误的实在再关闭数据库</span><span class="token comment" spellcheck="true">#         db.rollback()</span><span class="token keyword">def</span> <span class="token function">splicing_all_value_insert</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    ns <span class="token operator">=</span> create_random<span class="token punctuation">(</span><span class="token punctuation">)</span>    clock<span class="token operator">=</span>int<span class="token punctuation">(</span>clock<span class="token punctuation">)</span>    value<span class="token operator">=</span>int<span class="token punctuation">(</span>value<span class="token punctuation">)</span>    log_time<span class="token operator">=</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    value_information<span class="token operator">=</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    value_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>value_information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(value)</span>    <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>        <span class="token comment" spellcheck="true"># 进口数据插入</span>        created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token operator">and</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">if</span>  pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">:</span>            splicing_all_value_insert<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>        <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">:</span>            splicing_all_value_insert<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># else:</span>        <span class="token comment" spellcheck="true">#     # print(row[1],row[2])</span>        <span class="token comment" spellcheck="true">#     # in 数据</span>        <span class="token comment" spellcheck="true">#     splicing_all_value_insert(timeconversion(row[0]),ip,host,1,interface_in_info,timeconversion(row[0]),row[1],ns,created_time)</span>        <span class="token comment" spellcheck="true">#     # out 数据</span>        <span class="token comment" spellcheck="true">#     splicing_all_value_insert(timeconversion(row[0]),ip,host,2,interface_out_info,timeconversion(row[0]),row[2],ns,created_time)</span>        <span class="token comment" spellcheck="true">#     # sql_execute(timeconversion(row[0]),ip,host,1,interface_in_info,timeconversion(row[0]),row[1],ns,created_time)</span>        <span class="token comment" spellcheck="true">#     # 出口数据插入</span>        <span class="token comment" spellcheck="true">#     # sql_execute(timeconversion(row[0]),ip,host,2,interface_out_info,timeconversion(row[0]),row[2],ns,created_time)</span>                        <span class="token comment" spellcheck="true"># print(row[0],float(row[1]))</span>    <span class="token triple-quoted-string string">"""一张表结束一行插入数据到sql"""</span>    <span class="token comment" spellcheck="true"># 在写sql语句时，不管字段为什么类型，占位符统一使用%s,且不能加上引号。例如</span>    <span class="token comment" spellcheck="true"># sql="insert into tablename (id,name) values (%s,%s)"</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        sql <span class="token operator">=</span> "INSERT INTO zabbix_flow_data_tmp_copy11<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">)</span>"        cursor<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span>value_list<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token operator">+</span><span class="token string">"数据插入成功"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果错误回滚一下</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'172.16.1.15'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'bigdata'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'bigdata2020'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'zabbix'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    <span class="token comment" spellcheck="true"># db = pymysql.connect(host='127.0.0.1',</span>    <span class="token comment" spellcheck="true">#                     user='root',</span>    <span class="token comment" spellcheck="true">#                     password='sxh.200008',</span>    <span class="token comment" spellcheck="true">#                     database='mydb')</span>                   <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">'61.174.252.17'</span>    host<span class="token operator">=</span><span class="token string">'JingYing-12808-1'</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">''</span>    interface_out_info<span class="token operator">=</span><span class="token string">''</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    files_dir<span class="token operator">=</span>r<span class="token string">'D:\下载\菁英12808-1'</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>files_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files<span class="token punctuation">:</span>            name_split_list<span class="token operator">=</span>file_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>            interface_split_list<span class="token operator">=</span>name_split_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"'."</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># interface out-flow</span>            <span class="token comment" spellcheck="true"># interface in-flow</span>            interface_in_info<span class="token operator">=</span><span class="token string">"interface in-flow"</span><span class="token operator">+</span>interface_split_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span>            interface_out_info<span class="token operator">=</span><span class="token string">"interface out-flow"</span><span class="token operator">+</span>interface_split_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span>            value_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>            read_deal_csv<span class="token punctuation">(</span>files_dir<span class="token punctuation">,</span>file_name<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="通过txt向mysql里插入数据"><a href="#通过txt向mysql里插入数据" class="headerlink" title="通过txt向mysql里插入数据"></a>通过txt向mysql里插入数据</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment" spellcheck="true"># 对字符串进行转义</span><span class="token keyword">from</span> pymysql<span class="token punctuation">.</span>converters <span class="token keyword">import</span> escape_string<span class="token keyword">def</span> <span class="token function">sql_insert</span><span class="token punctuation">(</span>TableName<span class="token punctuation">,</span>SongName<span class="token punctuation">,</span>SingerName<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "INSERT INTO <span class="token operator">%</span>s<span class="token punctuation">(</span>song_name<span class="token punctuation">,</span> \    singer_name<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>TableName<span class="token punctuation">,</span>SongName<span class="token punctuation">,</span>SingerName<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行sql语句</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到数据库执行</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print("sucessful")</span>    <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token comment" spellcheck="true"># except Exception as e:</span>    <span class="token comment" spellcheck="true">#     print("错误"+e)</span>    <span class="token comment" spellcheck="true">#     print("错误跳过继续")</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        <span class="token comment" spellcheck="true"># db.rollback()</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    <span class="token comment" spellcheck="true"># ktv_song_baolijin</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'10.8.0.42'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'Gttx@2020'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'push'</span><span class="token punctuation">)</span>    f <span class="token operator">=</span> open<span class="token punctuation">(</span>r<span class="token string">"C:\Users\15256\Desktop\宝丽金\song_mix.txt"</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 返回一个文件对象 </span>    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 调用文件的 readline()方法 </span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># split() 默认就是以空格为分割</span>        line_list<span class="token operator">=</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>        SongName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        SingerName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> SingerName<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token comment" spellcheck="true"># print("歌曲插入完成"+str(SongName)+"----"+str(SingerName))</span>        sql_insert<span class="token punctuation">(</span><span class="token string">"ktv_song_baolijin"</span><span class="token punctuation">,</span>escape_string<span class="token punctuation">(</span>SongName<span class="token punctuation">)</span><span class="token punctuation">,</span>escape_string<span class="token punctuation">(</span>SingerName<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print("歌曲插入完成"+str(SongName)+"----"+str(SingerName))</span>    <span class="token comment" spellcheck="true"># 完成关闭数据库</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(SongName+"---------"+SingerName)</span>    <span class="token comment" spellcheck="true"># break</span>    <span class="token comment" spellcheck="true"># print(line.split()[2])</span>    <span class="token comment" spellcheck="true"># break</span>    <span class="token comment" spellcheck="true">#line_list=line.split(" ")</span>    <span class="token comment" spellcheck="true"># print(line_list[0][3])</span></code></pre><h3 id="通过txt向mysql里批量插入数据"><a href="#通过txt向mysql里批量插入数据" class="headerlink" title="通过txt向mysql里批量插入数据"></a>通过txt向mysql里批量插入数据</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment" spellcheck="true"># 对字符串进行转义</span><span class="token keyword">from</span> pymysql<span class="token punctuation">.</span>converters <span class="token keyword">import</span> escape_string<span class="token keyword">def</span> <span class="token function">splicing_all_value_insert</span><span class="token punctuation">(</span>SongName<span class="token punctuation">,</span>SingerName<span class="token punctuation">)</span><span class="token punctuation">:</span>    value_information<span class="token operator">=</span><span class="token punctuation">(</span>escape_string<span class="token punctuation">(</span>SongName<span class="token punctuation">)</span><span class="token punctuation">,</span>escape_string<span class="token punctuation">(</span>SingerName<span class="token punctuation">)</span><span class="token punctuation">)</span>    value_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>value_information<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    <span class="token comment" spellcheck="true"># ktv_song_baolijin</span>    <span class="token comment" spellcheck="true"># db = pymysql.connect(host='10.8.0.42',</span>    <span class="token comment" spellcheck="true">#                     user='root',</span>    <span class="token comment" spellcheck="true">#                     password='Gttx@2020',</span>    <span class="token comment" spellcheck="true">#                     database='push')</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>                    user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                    password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                    database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    f <span class="token operator">=</span> open<span class="token punctuation">(</span>r<span class="token string">"C:\Users\15256\Desktop\宝丽金\song_mix.txt"</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 返回一个文件对象 </span>    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true"># 调用文件的 readline()方法 </span>    value_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># split() 默认就是以空格为分割</span>        line_list<span class="token operator">=</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>        SongName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        SingerName<span class="token operator">=</span>line_list<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>        <span class="token triple-quoted-string string">"""放入到列表中"""</span>        splicing_all_value_insert<span class="token punctuation">(</span>SongName<span class="token punctuation">,</span>SingerName<span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""将列表中的数据插入"""</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    sql <span class="token operator">=</span> "INSERT INTO ktv_song_baolijin<span class="token punctuation">(</span>song_name<span class="token punctuation">,</span> \    singer_name<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token operator">%</span>s<span class="token punctuation">)</span>"    cursor<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span>value_list<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 关闭数据库</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python更新数据到mysql </tag>
            
            <tag> 读取execel数据 </tag>
            
            <tag> 插入数据到excel </tag>
            
            <tag> pandns判断取出数据为空 </tag>
            
            <tag> sql实现大量数据批量插入 </tag>
            
            <tag> sql批量插入 </tag>
            
            <tag> mysql数据批量到数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/2021/110263420.html"/>
      <url>/2021/110263420.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f1e9eb9cf127926b229d5519d3ac3a0c54549e07edb062f878d8afc6ee755ed1">793e42839e7bcdf5ec20d6466c3245e6a1177965da9af78b6d0c5982574866283af28eda785adacbed1c2b8f384df3cf92c5bb060b61d607723d358499bcc2c3b825a3089191aa97eba94e393dd70e37d998ac4706d7192f2f39fcc2a0e6e46019caec473e1f3c3f1043a1c8a12a446b575c3b01759c920d11ad5d564c6af77698526b04d3e5b349b297580a4644d40d7974e46863623e128b908c9daf15d63ef82115892e0371d7ea2436538d52d8b880b12ae0c76bd1bae00f11877b5395ccacf18833568b9e9319ec6de855f61dfc71758cc8ee713033a22549e59fda7f7c53ed8632d9be037ad088e0af39296036f51b99d0d0096ed647c82872871e1735dd9ca83c3246517d7d465812fbcf19376fde0cbe2e3dab906281d5f667f1440f3ee1ca261edec5fabfe49720cb6a6390cbb9166682e0c334d077d3ef6e1186a77e6972fdef5cc2bd6a50740f8fa486dbf0852c1a61ddbab83a4778a68a4f05f107d883f5980bde3511b3af2aeb55fe63dd7cd8562ecc20ccace85163da4c3addd0f398769ef39683ad5807b243a7bec10b0466c6d66cb7e963f89346185436780f04c1b933f5dd362d83c5ad0df627b8bae52672c6cc3fca8a3336d06c99fb863cfe411f0039c252e960d5733c16a6979248101405129e7173a3333e949fb708f6116ea528829f0ee89b0bf4b41a5ae69546248d2935c03ed66e288729254b15a0caf593bae392d8ecff8406cc47254a0cac3fd058b09946fa6e0d129bd5acc87b2343a6ff79488f3847163f070cdff3c4b502ea52c26b4add10a754e6e187a20625774f6045ed75021b18ad48f8a737cbf06c910b21b90773d52e865cc00ecb28a6a9e338235e0a47c977433e104158f53da42b2fd0840f810390350a008b70637bef0706aa671d00a4e9379a3ba57e695193c4272b49a1fd18894d6e74728fcf922dd4352ce67d088ac432b1538850511fdb1d77eaaea9a6e47832a6e017c57b6ea2b83255e0d090e7055e9db962f7fd6fa2fccabf12a54208177ac32dbfc16be4438ce763e0ce60b63ba4e4ce6ea623c28dca8743bde13db6f52e45b1f400c34da2d47043adf62497d510652796444221fcbcf6bf0d756f3f580826654570b30a52a39668ff5a95a1a028c057752767ee48011d9e47b4de62d8ddd8a7e85af60099a7897aea28220799ed0e5102cf6581ab057ed92b6dd05b7698cf669b13cd974d251236dd5238203147b25050ecba10b428e64b25f2035fb58f1fedf0d168dd4bf1e47af2ca93571c8eb296ff38d1ecd68ee5d2b67fc3cf7c8816ea3aa32824c201227e65663167c5cd2df1ef1c70186f7f5a89299fec78ec5d320ea8f4c0ebebf75ee44bbe349ca6b049e74142cf0cde27ec451d9c39f0c1462e45b11e4561f8c3e96ac02431fc1e7b6e6a7ea8e728ae9009ab2da56c3a16c886bb403e0410fcc5f217c99da8466b9c84e82c004113e321cbea6140a6c8567635b9046691be6298cf951fb09f904c4eaf47f13dfaafa8f7855366359882ba752cc1ce316c7dd2a73def31a0f20523d0e32e23ee236465a56c4aabb11348771a74417382aee2b87ac68087dab69da82c6d42faed051a54c541b85de23ee418d0cbdd087040a044c376c0aee1193d7be982339f5c2273a7ae901bf1ebf1f4ed266c348c50c7279a887c096df7b926c55be07772c632383124b943cc56ad13f5c3db84a9eee7692fa961551c1131e733ebff762ff6e06214cc19570e3da6460f627e23b5ac66c90ee247407855a8b5075d8fee262d2259f82310786663e61aeab6c5a0225be9db546ebe9b59b6d1e7387e220754ee1e0a74c6d8334dc0ff9fb7145c1d80463c181b37cd7b4617c04e948fa84e3758467a8b38607740d7bde56b8026e2c532aa763c6e59e0d396b427bd8e10578a848b9eb7ee25bf86152016c63f689036db731952e341f4add0146ba7e9e5b65cf98b3a0c021d74d8c21a5e6fb3bdb65df9b511b34cdc4b9f48d8f42715eb58360608ee8749d20c66bb9472541a6e8e40cbe390dd82912fb8ddc48626b69dc5d8f9a0121ed71e1c60b153a737012330fb612e7c9983db0d9564d82336cc578811e96655ad5c9933c3c49a7ceb865b9e2231bdf0b6387192882d60f7d20dc20759d5d96085dbdd155070de2e426feda5996c3ec8bd8d9245de2e6e477fa65dfda2116dca0da1762f6ca59d8c6a76e0b15fe72ce5972f0c54d97a83a20a4749b09d1e27e9e23fc0c6b3dd8533ad43825ee76e7d30614f4b71afe2570c7c8705ac411172cb8e147fd761d78598f734dc6765194782fb6db1c2c0d174ed6b454c1e0554dcc49454bc0769e5f8f4103a014f839994b06553c86390b3db0b9ec95bcd7535119197e034e80761f9862ac009dab102c320453aecffbcca8f6698d5cccd4b322f9eba8b9863726441f6560401f985ec3e5a7732a8754d9c91f8d694fdda2723a1bf815a19bafc414b3a09545e6c7472aa9f3548f8fe195bd5adfa88e0feecfc32e7f11810302ab5dad026fb6f0b86a843019eaa1b94931ed2946803c198e0e0f1a58e9573137de6edb32e08e29801ab377a5726eefce696cb68a6e992962e835bb6267b50195ffb138420c183f9cd9836c26d4857790923664bef608c41f6f62c1ceefe8e41559999cd7a107a351f731d83d83cf0a0e771d386c940c1d5fa3c8621920cc32813a3466bf6fa3141f3b356b2e369a1b7f4037a43cb417c57a095a548cc3bf7d971b71e834fb545161af7f6d44fed83884c93f2e3602c7ed113b2b89b5db8abe17b6a0a2ee74a7486b780671510501d33195012ae9c5938e588d52b0d5f8fb17fc9642ac348f5b2df04339f5806555b442be05d71c3df3db3e8db7304e8fa277e7f25f5679db41a4c6b98cd851fde5e566dc258317db7058c21382afb303e0c054c5a487e2fbb166a4a47b9fb7a5439895851390a8767422e43a3f06c2adf0addfd6e66e548fcbc72ff7fee7659beebd5167da1c9f2a8ddbc0fba93d3764509ed7a04ad4389f8bf5bbfb3433fd8bb9077dc8f406e0ac1fa7bfa36b2c5137074492aa22ecc62490fc56ea4bd9fa8f602aaea62ef0564fa001903ffca57be0314445cf69cd67699c5f0be4b7a5e249ff783c7a206fd05ca49369addc7f856d1de5e20c2f1b13673c41552fded68ce9f66426426823ae7cb3dd320ea506a30354683557c03e31a141b5e8348d4fb7362c7daeae555ca72dd2871cbd8f476b923bbe0452563fd4299ada1adc8b1168c283f3e1605cce4b18406c92d16ca5bd6ba7b0f8a90a69e107132d44a5bc834d00b81ed083ccb34aeb8e6e1a18dd0eeda99992a56eda0c5dc572b969eb09572b5ccfed3feaf2fe0b18eab556301bdd7522b862c73267121549f30bd1dc9b32786ff6592a0bafe3571b78438f571bf91c14c38de090a537a4b0ac78d8d4c10d14a80ac26f3a5977903b306d418e93d5dff160ef76a6c0328d112c591cc83d72814326f9b92ecd0b6623ea1d4a128</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防火墙连接云端详细配置</title>
      <link href="/2021/101910496.html"/>
      <url>/2021/101910496.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bcb9a7b69340432a8f86150a74acfbe84f68a2c72aa2c6f38922bf8b73bebff3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为防火墙连接云端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为USG防火墙二层部署</title>
      <link href="/2021/10194219.html"/>
      <url>/2021/10194219.html</url>
      
        <content type="html"><![CDATA[<h1 id="华为USG600V防火墙二层部署"><a href="#华为USG600V防火墙二层部署" class="headerlink" title="华为USG600V防火墙二层部署"></a><code>华为USG600V防火墙二层部署</code></h1><h2 id="1-整体拓扑及简介"><a href="#1-整体拓扑及简介" class="headerlink" title="1. 整体拓扑及简介"></a><code>1. 整体拓扑及简介</code></h2><p><a href="https://shixiuhai.github.io/work_share/USG6000V2.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载华为USG6000V防火墙二层部署ensp项目</a></p><blockquote><p>(1) 此拓扑是USG6000V的一个简单的二层部署，本项目的目标是实现vlan间的相互通信，所有pc都可以成功上网，上网的标志是所有的pc都能ping通114.114.114.114 这个地址。</p><p>(2) pc1和pc2属于vlan10，pc3和和pc4属于vlan20，pc5和pc6属于vlan30。sw1、sw2、sw3、sw0属于二层交换机，在上面划分了vlan相关，FW1是USG6000V防火墙这里做了二层的部署，cloud2在这里可以理解为三层的接入层（连接internat的路由器）。cloud1使用了防火墙GE0/0/0接口做为管理接口，实现PC登录防火墙的web页面进行防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/usg%E4%BA%8C%E5%B1%82%E9%83%A8%E7%BD%B2%E6%8B%93%E6%89%91.PNG" alt="二层部署拓扑"></p><h2 id="2-pc具体配置"><a href="#2-pc具体配置" class="headerlink" title="2. pc具体配置"></a><code>2. pc具体配置</code></h2><p>(1) pc1和pc2的配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc1%E5%92%8Cpc2%E9%85%8D%E7%BD%AE.PNG" alt="pc1-pc2"></p><p>（2）pc3和pc4配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc3%E5%92%8Cpc4%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="pc3-pc4"></p><p>(3) pc5和pc6配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc5%E5%92%8Cpc6%E9%85%8D%E7%BD%AE.PNG" alt="pc5-pc6"></p><h2 id="3-交换机具体配置"><a href="#3-交换机具体配置" class="headerlink" title="3. 交换机具体配置"></a><code>3. 交换机具体配置</code></h2><blockquote><p>这里描述了交换机的配置</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## sw1的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw2的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw3的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan30</span>port-group vlan30<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 30<span class="token comment" spellcheck="true">## sw0的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan 10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组命名为vlanall</span>port-group vlanall<span class="token comment" spellcheck="true"># 将g0/0/1到g0/0/4划入到端口组中</span>group-member GigabitEthernet0/0/1 to g0/0/4<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type trunk<span class="token comment" spellcheck="true"># 设置trunk允许通过的端口</span>port trunk allow-pass vlan 10 20</code></pre><h2 id="4-cloud1的具体配置"><a href="#4-cloud1的具体配置" class="headerlink" title="4. cloud1的具体配置"></a><code>4. cloud1的具体配置</code></h2><blockquote><p>这里需要先介绍一下cloud1的配置，因为后期需要通过本机的web页面登录防火墙实现对防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud1%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="cloud1"></p><p>这里不同电脑vmnet1的ip地址可能不同，比如我这里的ip是192.168.157.1那么我的防火墙G0/0/0地址就必须配置一个和192.168.157.1 同一个网段的地址。这里我防火墙ip地址配置的是192.168.157.5/24，具体ip配置可以进入ensp项目中通过终端查看防火墙的ip配置。这里防火墙G0/0/0接口里我配置了多个地址，但是只有192.168.157.5是有效的。所以由于不同电脑的vmnet的地址段不一样，你需要根据自己电脑的地址端在自己的防火墙上进行修改，或者你可以直接将vmnet1修改成和我一样的地址段。</p><h2 id="5-cloud2的具体配置"><a href="#5-cloud2的具体配置" class="headerlink" title="5. cloud2的具体配置"></a><code>5. cloud2的具体配置</code></h2><blockquote><p>这里cloud2的配置有点复杂，这里我们为了实现pc可以上外网，即可以ping通114.114.114.114，我们需要为cloud2绑定的vmnet8再绑定一下本机可以上网的网卡。</p></blockquote><p>(1) 创建cloud2绑定网卡</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud%E9%85%8D%E7%BD%AE1.PNG" alt="cloud2"></p><p>这里的vmnet8这个192.168.1.1 ip无需过多关注，因为cloud2的网关是我们通过绑定到本机可上网的网卡获取的。这里的地址现在绑定过上网网卡后还没有改变过来，所以这个192.168.1.1部署cloud2的实际地址，查看实现地址的方法如下，或者关闭ensp项目重新打开这里的vmnet8就可以获取真正的cloud2的地址了。</p><p>(2）绑定本机可上网网卡并获取cloud2的实际可使用网卡地址</p><blockquote><p>点击更改适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A81.png"></p><blockquote><p>打开WLAN适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/WLAN%E9%80%82%E9%85%8D%E5%99%A8.png"></p><blockquote><p>选择属性</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%B1%9E%E6%80%A7.png"></p><blockquote><p>设置共享</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%85%B1%E4%BA%AB.png"></p><blockquote><p>通过VMnet8查看cloud2实际ip地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%80%82%E9%85%8D%E5%99%A82.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>查看详细信息</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%9B%B8%E4%BF%A1%E4%BF%A1%E6%81%AF2.png"></p><p>这里的192.168.137.1可以认为是我们得到cloud2的真正的ip地址，用来做防火墙的网关，所以防火墙的上连接口需要配置一个和这个地址同一个网段ip地址，在我的项目中我配置了192.168.137.6/24这个地址。</p><h2 id="6-USG6000V的具体配置"><a href="#6-USG6000V的具体配置" class="headerlink" title="6. USG6000V的具体配置"></a><code>6. USG6000V的具体配置</code></h2><blockquote><p>这里我同样只是对防火墙上网进行了基本配置，但是这里是二层部署的配置，二层部署一般可以选择接口对模式或者交换模式。这里有一点需要重点强调！！！ 防火墙做二层部署一定需要记得创建vlan，不管接口对模式还是交换模式一定记得创建vlan。</p></blockquote><p>(1) 使用web界面登录到防火墙</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/web%E7%99%BB%E5%BD%95.PNG" alt="usgweb"></p><p>(2) 创建vlan 10 20 30</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%98%B2%E7%81%AB%E5%A2%99%E5%88%9B%E5%BB%BAvlan.png" alt="创建vlan"></p><p>这里GE0/0/0做为连接cloud1的接口使用，GE1/0/0用于连接交换机sw0，GE1/0/1做为防火墙的出口。</p><p>(3) 配置接口对</p><blockquote><p>接口位置选择 安全区域 连接类型 允许的vlan 接口模式</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E6%8E%A5%E5%8F%A3%E5%AF%B91.png" alt="接口对配置"></p><blockquote><p>接口对位置进行一下配置</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E6%8E%A5%E5%8F%A3%E5%AF%B92.png" alt="接口对配置"></p><p>(4) 配置安全策略</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A51.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A52.png" alt="安全策略"></p><p>这里只是对默认的default策略开启了全部允许，快速实现trust到untrst的策略设置，实际配置中会建立多条安全策略。</p><h2 id="7-路由器AR2配置"><a href="#7-路由器AR2配置" class="headerlink" title="7. 路由器AR2配置"></a><code>7. 路由器AR2配置</code></h2><blockquote><p>这里路由器需要配置静态缺省路由和nat，其中缺省路由是为了实现下面多个vlan的pc可以上网，缺省路由实现AR2可以访问外网，当AR2可以访问外网后下面所有vlan下pc即可通过AR2实现访问外网。</p></blockquote><p>配置NAT和静态路由</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 这里nat配置Easy ip的方式，即多对一的方式</span><span class="token comment" spellcheck="true"># 创建acl 2000</span>acl 2000rule permit <span class="token function">source</span> 10.0.0.0 0.0.0.255rule permit <span class="token function">source</span> 172.1.1.0 0.0.0.255rule permit <span class="token function">source</span> 192.168.0.0 0.0.0.255<span class="token comment" spellcheck="true"># 设置NAT地址池的转换策略</span>int e0/0/8nat outbound 2000 <span class="token comment" spellcheck="true">## 配置缺省路由</span><span class="token comment" spellcheck="true"># 这里我们配置的是一条缺省路由实现出去，192.168.137.1就是我们前面获取cloud2的真正的地址，来做为防火墙的下一跳，出接口是GE1/0/1接口</span>ip route-static 0.0.0.0 0.0.0.0 192.168.137.1 </code></pre><h2 id="8-验证是否实现上网"><a href="#8-验证是否实现上网" class="headerlink" title="8. 验证是否实现上网"></a><code>8. 验证是否实现上网</code></h2><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%AA%8C%E8%AF%81.PNG"></p><p>这里选择vlan10的pc1和vlan30的pc5进行了一个验证，得pc上外网成功，至此这个项目操作结束。</p><h2 id="9-项目总结"><a href="#9-项目总结" class="headerlink" title="9. 项目总结"></a><code>9. 项目总结</code></h2><p>（1）本项目复习了华为交换机vlan的划分创建</p><p>（2）本项目验证了防火墙二层部署的简单情况</p><p>（3）本项目的难点在于cloud2配置绑定WLAN网卡，和防火墙需要配置一条缺省路由</p><p>（4）本项目的防火墙web配置也可以通过命令配置</p><p>（5）本项目对路由器进行了简单的nat配置和静态缺省路由配置</p><p>（6）本项目需要强调一下防火墙在做二层部署的时候一定要创建需要的vlan</p><h2 id="10-小贴士常用查询某个配置的命令"><a href="#10-小贴士常用查询某个配置的命令" class="headerlink" title="10. 小贴士常用查询某个配置的命令"></a><code>10. 小贴士常用查询某个配置的命令</code></h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 进如命令模式进行命令配置</span>system-view <span class="token comment" spellcheck="true"># 配置命令的第一步</span><span class="token comment" spellcheck="true">## 查询当前的配置</span>display this<span class="token comment" spellcheck="true">## 查询创建了哪些vlan</span>display vlan<span class="token comment" spellcheck="true">## 设备状态信息刷屏</span>Tab<span class="token comment" spellcheck="true">## 查询接口配置ip状态</span>display ip interface brief<span class="token comment" spellcheck="true">## 查询接口状态</span>display interface brief<span class="token comment" spellcheck="true">## 清晰查看端口属于哪个vlan</span>display port vlan<span class="token comment" spellcheck="true">## 查看路由表</span>display ip routing-table<span class="token comment" spellcheck="true">## 查看接口有哪些配置</span>int 接口名display this</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USG6000V二层部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为USG防火墙三层部署</title>
      <link href="/2021/101947200.html"/>
      <url>/2021/101947200.html</url>
      
        <content type="html"><![CDATA[<h1 id="华为USG600V防火墙三层部署"><a href="#华为USG600V防火墙三层部署" class="headerlink" title="华为USG600V防火墙三层部署"></a><code>华为USG600V防火墙三层部署</code></h1><h2 id="1-整体拓扑及简介"><a href="#1-整体拓扑及简介" class="headerlink" title="1. 整体拓扑及简介"></a><code>1. 整体拓扑及简介</code></h2><p><a href="https://shixiuhai.github.io/work_share/USG6000V.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载华为USG6000V防火墙三层部署ensp项目</a></p><blockquote><p>(1) 此拓扑是USG600V一个简单的三层部署，本项目实现的目标是不同vlan之间可以相互通信，所有的pc都可以上网，上网的标志是所有的pc都可以ping通114.114.114.114这个地址。</p><p>(2) pc1和pc2属于vlan10，pc3和和pc4属于vlan20，pc5和pc6属于vlan30。sw1、sw2、sw3、sw0属于二层交换机，在上面划分了vlan相关，FW1是USG6000V防火墙这里做了三层的部署，cloud2在这里可以理解为三层的接入层（连接internat的路由器）。cloud1使用了防火墙GE0/0/0接口做为管理接口，实现PC登录防火墙的web页面进行防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%89%E5%B1%82%E9%83%A8%E7%BD%B2%E7%AE%80%E5%8D%95%E6%8B%93%E6%89%911.PNG"></p><h2 id="2-pc具体配置"><a href="#2-pc具体配置" class="headerlink" title="2. pc具体配置"></a><code>2. pc具体配置</code></h2><p>(1) pc1和pc2的配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc1%E5%92%8Cpc2%E9%85%8D%E7%BD%AE.PNG" alt="pc1-pc2"></p><p>（2）pc3和pc4配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc3%E5%92%8Cpc4%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="pc3-pc4"></p><p>(3) pc5和pc6配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc5%E5%92%8Cpc6%E9%85%8D%E7%BD%AE.PNG" alt="pc5-pc6"></p><h2 id="3-交换机具体配置"><a href="#3-交换机具体配置" class="headerlink" title="3. 交换机具体配置"></a><code>3. 交换机具体配置</code></h2><blockquote><p>这里描述了交换机的配置</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## sw1的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw2的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw3的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan30</span>port-group vlan30<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 30<span class="token comment" spellcheck="true">## sw0的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan 10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组命名为vlanall</span>port-group vlanall<span class="token comment" spellcheck="true"># 将g0/0/1到g0/0/4划入到端口组中</span>group-member GigabitEthernet0/0/1 to g0/0/4<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type trunk<span class="token comment" spellcheck="true"># 设置trunk允许通过的端口</span>port trunk allow-pass vlan 10 20</code></pre><h2 id="4-cloud1的具体配置"><a href="#4-cloud1的具体配置" class="headerlink" title="4. cloud1的具体配置"></a><code>4. cloud1的具体配置</code></h2><blockquote><p>这里需要先介绍一下cloud1的配置，因为后期需要通过本机的web页面登录防火墙实现对防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud1%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="cloud1"></p><p>这里不同电脑vmnet1的ip地址可能不同，比如我这里的ip是192.168.157.1那么我的防火墙G0/0/0地址就必须配置一个和192.168.157.1 同一个网段的地址。这里我防火墙ip地址配置的是192.168.157.5/24，具体ip配置可以进入ensp项目中通过终端查看防火墙的ip配置。这里防火墙G0/0/0接口里我配置了多个地址，但是只有192.168.157.5是有效的。所以由于不同电脑的vmnet的地址段不一样，你需要根据自己电脑的地址端在自己的防火墙上进行修改，或者你可以直接将vmnet1修改成和我一样的地址段。</p><h2 id="5-cloud2的具体配置"><a href="#5-cloud2的具体配置" class="headerlink" title="5. cloud2的具体配置"></a><code>5. cloud2的具体配置</code></h2><blockquote><p>这里cloud2的配置有点复杂，这里我们为了实现pc可以上外网，即可以ping通114.114.114.114，我们需要为cloud2绑定的vmnet8再绑定一下本机可以上网的网卡。</p></blockquote><p>(1) 创建cloud2绑定网卡</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud%E9%85%8D%E7%BD%AE1.PNG" alt="cloud2"></p><p>这里的vmnet8这个192.168.1.1 ip无需过多关注，因为cloud2的网关是我们通过绑定到本机可上网的网卡获取的。这里的地址现在绑定过上网网卡后还没有改变过来，所以这个192.168.1.1部署cloud2的实际地址，查看实现地址的方法如下，或者关闭ensp项目重新打开这里的vmnet8就可以获取真正的cloud2的地址了。</p><p>(2）绑定本机可上网网卡并获取cloud2的实际可使用网卡地址</p><blockquote><p>点击更改适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A81.png"></p><blockquote><p>打开WLAN适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/WLAN%E9%80%82%E9%85%8D%E5%99%A8.png"></p><blockquote><p>选择属性</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%B1%9E%E6%80%A7.png"></p><blockquote><p>设置共享</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%85%B1%E4%BA%AB.png"></p><blockquote><p>通过VMnet8查看cloud2实际ip地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%80%82%E9%85%8D%E5%99%A82.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>查看详细信息</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%9B%B8%E4%BF%A1%E4%BF%A1%E6%81%AF2.png"></p><p>这里的192.168.137.1可以认为是我们得到cloud2的真正的ip地址，用来做防火墙的网关，所以防火墙的上连接口需要配置一个和这个地址同一个网段ip地址，在我的项目中我配置了192.168.137.6/24这个地址。</p><h2 id="6-USG6000V的具体配置"><a href="#6-USG6000V的具体配置" class="headerlink" title="6. USG6000V的具体配置"></a><code>6. USG6000V的具体配置</code></h2><blockquote><p>这里我只是对防火墙能进行上网进行了配置，并不包含USG6000V的IPSEC隧道的打通、北向接口、日志上传、防火墙更新这些相关配置。防火墙上云端的相关配置请参考文章 <a href="https://fuyaoershang.xyz/2021/101910496.html">防火墙连接云端详细配置 </a>，这里的配置全部基于web页面进行配置。</p></blockquote><p>(1) 使用web界面登录到防火墙</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/web%E7%99%BB%E5%BD%95.PNG" alt="usgweb"></p><p>(2) 配置防火墙ip地址相关</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/image-20211019114515487.png" alt="防火墙ip"></p><p>这里GE0/0/0作为连接cloud1的接口使用。GE1/0/0做了三个子接口，用于作为下面三个vlan的网关来使用。GE1/0/1做为防火墙的出口。</p><p>(3) 配置安全策略</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A51.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A52.png" alt="安全策略"></p><p>这里只是对默认的default策略开启了全部允许，只是为了能够上网。</p><p>(4) nat策略配置（配置源地址转换，实现下面三个vlan的任意一个主机都可以上网）</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pcnat%E7%AD%96%E7%95%A5%E4%B8%8A%E7%BD%91%E9%85%8D%E7%BD%AE.png" alt="nat策略"></p><p>(5) 配置路由使我们实现真正的上外网（ping 通 114.114.114.114）</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%B7%AF%E7%94%B1.png" alt="缺省路由"></p><p>这里我们配置的是一条缺省路由实现出去，192.168.137.1就是我们前面获取cloud2的真正的地址，来做为防火墙的下一条，出接口是GE1/0/1接口。</p><h2 id="7-验证是否实现上网"><a href="#7-验证是否实现上网" class="headerlink" title="7. 验证是否实现上网"></a><code>7. 验证是否实现上网</code></h2><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%AA%8C%E8%AF%81.PNG"></p><p>这里选择vlan10的pc1和vlan30的pc5进行了一个验证，得pc上外网成功，至此这个项目操作结束。</p><h2 id="8-项目总结"><a href="#8-项目总结" class="headerlink" title="8. 项目总结"></a><code>8. 项目总结</code></h2><p>（1）本项目复习了华为交换机vlan的划分创建</p><p>（2）本项目验证了防火墙三层部署的简单情况</p><p>（3）本项目的难点在于cloud2配置绑定WLAN网卡，和防火墙需要配置一条缺省路由</p><p>（4）本项目的防火墙web配置也可以通过命令配置</p><h2 id="9-小贴士常用查询某个配置的命令"><a href="#9-小贴士常用查询某个配置的命令" class="headerlink" title="9. 小贴士常用查询某个配置的命令"></a><code>9. 小贴士常用查询某个配置的命令</code></h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 进如命令模式进行命令配置</span>system-view <span class="token comment" spellcheck="true"># 配置命令的第一步</span><span class="token comment" spellcheck="true">## 查询当前的配置</span>display this<span class="token comment" spellcheck="true">## 查询创建了哪些vlan</span>display vlan<span class="token comment" spellcheck="true">## 设备状态信息刷屏</span>Tab<span class="token comment" spellcheck="true">## 查询接口配置ip状态</span>display ip interface brief<span class="token comment" spellcheck="true">## 查询接口状态</span>display interface brief<span class="token comment" spellcheck="true">## 清晰查看端口属于哪个vlan</span>display port vlan<span class="token comment" spellcheck="true">## 查看路由表</span>display ip routing-table<span class="token comment" spellcheck="true">## 查看接口有哪些配置</span>int 接口名display this</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USG6000V三层部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-lfs的使用</title>
      <link href="/2021/101656698.html"/>
      <url>/2021/101656698.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="git-lfs使用"><a href="#git-lfs使用" class="headerlink" title="git-lfs使用"></a>git-lfs使用</h3><blockquote><p>这是一个引用测试 &gt;</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 开启lfs功能</span><span class="token function">git</span> lfs <span class="token function">install</span> <span class="token comment" spellcheck="true"># clone仓库到本地</span><span class="token function">git</span> lfs clone ?.url.git <span class="token comment" spellcheck="true"># 使用git clone也可以</span><span class="token comment" spellcheck="true"># 命令进行大文件追踪</span><span class="token function">git</span> lfs track <span class="token comment" spellcheck="true">#  例如git lfs track "*.png" 追踪所有后缀为png的文件</span><span class="token comment" spellcheck="true"># 查看现有的文件追踪模式,执行过 git lfs track file 后可以查看追踪了哪些文件</span><span class="token function">git</span> lfs track <span class="token comment" spellcheck="true"># 提交代码需要将gitattributes文件提交至仓库. 它保存了文件的追踪记录</span><span class="token function">git</span> add .gitattributes<span class="token comment" spellcheck="true"># .gitattributes文件提交后可以运行以下命令查看当前跟踪的文件列表</span><span class="token function">git</span> lfs ls-files <span class="token comment" spellcheck="true"># 上传和git方式一样</span><span class="token function">git</span> add file.psd<span class="token function">git</span> commit -m <span class="token string">"Add design file"</span><span class="token function">git</span> push origin main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 代码托管平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git-lfs使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传项目代码到github</title>
      <link href="/2021/101621696.html"/>
      <url>/2021/101621696.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="代码托管到github平台"><a href="#代码托管到github平台" class="headerlink" title="代码托管到github平台"></a>代码托管到github平台</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 设置 username 和 email，添加远程地址</span><span class="token function">git</span> config --global user.name <span class="token string">"your name"</span><span class="token function">git</span> config --global user.email <span class="token string">"your_email@youremail.com"</span><span class="token comment" spellcheck="true"># 下载ssh私钥到本地</span><span class="token function">cd</span> ?/.ssh <span class="token comment" spellcheck="true"># 在windows或者linux的.ssh目录里把私钥拷贝下来,私钥的文件名字为id_rsa</span><span class="token comment" spellcheck="true"># 验证成功设置好用户名和密钥</span><span class="token function">ssh</span> -T git@github.com <span class="token comment" spellcheck="true"># 成功会出现Hi shixiuhai! You've successfully authenticated, but GitHub does not provide shell access.</span><span class="token comment" spellcheck="true"># 查看git本地初始化</span><span class="token function">git</span> config --list<span class="token comment" spellcheck="true">## 创建一个本地仓库并修改</span><span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 创建本地仓库</span><span class="token function">git</span> init<span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 查看本地仓库文件状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true">## 将git clone下载到本地 生成的本地仓库 提交到远程仓库</span><span class="token function">git</span> clone ?.url.git<span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 查看本地仓库文件状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true"># 把本地仓库文件上传到远程仓库</span><span class="token function">git</span> push <span class="token comment" spellcheck="true">## 在本地创建好项目上传到远程仓库</span><span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# shixiuhai"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 创建本地仓库</span><span class="token function">git</span> init<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 提交到主分支上</span><span class="token function">git</span> branch -M main <span class="token comment" spellcheck="true"># 或者 创建名为main的分支</span><span class="token function">git</span> branch <span class="token comment" spellcheck="true"># 添加远程仓库对象origin和远程仓库地址</span><span class="token function">git</span> remote add origin git@github.com:shixiuhai/shixiuhai.git<span class="token comment" spellcheck="true"># 添加到远程仓库</span><span class="token function">git</span> push -u origin main <span class="token comment" spellcheck="true"># 或者git push -u origin master 或者git push  </span><span class="token comment" spellcheck="true">## 查看远程仓库对象和远程仓库连接地址</span><span class="token function">git</span> remote -v<span class="token comment" spellcheck="true">## 分支相关可参考 https://backlog.com/git-tutorial/cn/stepup/stepup2_3.html</span><span class="token comment" spellcheck="true">## 从远程仓库把代码修改合并到本地</span><span class="token function">git</span> pull <span class="token comment" spellcheck="true"># 或者 git pull origin, git pull 等于 git fetch remotename + git merge remotename branchname</span><span class="token comment" spellcheck="true">## 创建分支并和合并分支</span><span class="token function">git</span> branch branchname <span class="token comment" spellcheck="true"># 创建分支branchname是分支名字</span><span class="token comment" spellcheck="true"># 查看已经创建的分支</span><span class="token function">git</span> branch<span class="token comment" spellcheck="true"># 切换分支到branchname1 </span><span class="token function">git</span> checkout branchname1<span class="token comment" spellcheck="true"># 向master分支合并branchnam1分支</span><span class="token function">git</span> checkout master <span class="token comment" spellcheck="true"># 切换到主分支</span><span class="token function">git</span> merge issue1 <span class="token comment" spellcheck="true"># 将issue1分支合并到master</span><span class="token comment" spellcheck="true">## 删除已经创建的分支 branchname</span><span class="token function">git</span> branch -d branchname<span class="token comment" spellcheck="true">## 修改项目文件</span><span class="token comment" spellcheck="true"># 先进入修改</span>vim filename<span class="token comment" spellcheck="true"># 查看状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true"># 添加到暂存区</span><span class="token function">git</span> add filename<span class="token comment" spellcheck="true"># 暂存区提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"描述"</span><span class="token comment" spellcheck="true">## 删除项目文件</span><span class="token comment" spellcheck="true"># 从本地仓库中删除文件</span><span class="token function">git</span> <span class="token function">rm</span> filename<span class="token comment" spellcheck="true"># 删除源文件</span><span class="token function">rm</span> -rf filename<span class="token comment" spellcheck="true"># 提交暂存区到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"描述"</span><span class="token comment" spellcheck="true">## github设置全局代理</span><span class="token function">git</span> config --global https.proxy http://127.0.0.1:1080<span class="token function">git</span> config --global https.proxy https://127.0.0.1:1080<span class="token function">git</span> config --global --unset http.proxy<span class="token function">git</span> config --global --unset https.proxy<span class="token comment" spellcheck="true">## github 设置用户名和邮箱</span><span class="token comment" spellcheck="true"># 1. 全局设置（对所有git工程都有效）</span><span class="token function">git</span> config --global user.name  用户名 <span class="token comment" spellcheck="true"># 设置用户名</span><span class="token function">git</span> config --global user.email 邮箱 <span class="token comment" spellcheck="true"># 设置邮箱</span><span class="token comment" spellcheck="true"># 2. 对特定branch（切换到工程目录下执行）</span><span class="token function">git</span> config user.name 用户名 <span class="token comment" spellcheck="true"># 设置用户名</span><span class="token function">git</span> config user.email 邮箱 <span class="token comment" spellcheck="true"># 设置邮箱</span><span class="token comment" spellcheck="true">## git上传指定账户和密码</span><span class="token function">git</span> push http://abc@qq.com:abc123456@git.xxx.com/www.git<span class="token function">git</span> push http://username:password@172.16.210.112/project/test.git<span class="token comment" spellcheck="true">## git下载指定账户和密码</span><span class="token function">git</span> clone http://abc@qq.com:abc123456@git.xxx.com/www.git</code></pre>]]></content>
      
      
      <categories>
          
          <category> 代码托管平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github基础配置 </tag>
            
            <tag> github设置代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由交换基础配置</title>
      <link href="/2021/10154050.html"/>
      <url>/2021/10154050.html</url>
      
        <content type="html"><![CDATA[<!-- # 路由交换 --><h2 id="第一章-路由交换基础相关"><a href="#第一章-路由交换基础相关" class="headerlink" title="第一章 路由交换基础相关"></a><code>第一章 路由交换基础相关</code></h2><h3 id="1-1-交换机划分vlan相关配置"><a href="#1-1-交换机划分vlan相关配置" class="headerlink" title="1.1 交换机划分vlan相关配置"></a><code>1.1 交换机划分vlan相关配置</code></h3><pre class=" language-shell"><code class="language-shell">## sw1-1配置# 端口组的方式# 创建vlan10 20 30vlan batch 10 20 30# 创建端口组并命名为vlan10port-group vlan10# 将e0/0/2 到 e0/0/3划入到端口组中group-member e0/0/2 to e0/0/3# 设置端口类型trunk 或者 accessport link-type access# 设置端口属于vlanport default vlan 10## sw1-2配置# 端口方式# 创建vlan10 20 30vlan batch 10 20 30# 进入到端口中int e0/0/1# 设置端口类似为 accessport link-type access# 设置端口属于vlanport default vlan 10## sw2-1配置# 端口组的方式# 创建vlan10 20 30vlan batch 10 20 30# 创建端口组并命名为vlan10port-group vlan10# 将e0/0/2 到 e0/0/3划入到端口组中group-member e0/0/2 to e0/0/3# 设置端口类型trunk 或者 accessport link-type access# 设置端口属于vlanport default vlan 10## sw2-2配置# 端口方式# 创建vlan10 20 30vlan batch 10 20 30# 进入到端口中int e0/0/1# 设置端口类似为 accessport link-type access# 设置端口属于vlanport default vlan 10## sw3配置# 批量创建vlan vlan batch 10 20 30# 创建端口组命名为vlanallport-group vlanall# 将g0/0/1到g0/0/4划入到端口组中group-member GigabitEthernet0/0/1 to g0/0/4# 设置端口类型trunk 或者 accessport link-type trunk# 设置trunk允许通过的端口port trunk allow-pass vlan 10 20</code></pre><h3 id="1-2-单臂路由基础配置"><a href="#1-2-单臂路由基础配置" class="headerlink" title="1.2 单臂路由基础配置"></a><code>1.2 单臂路由基础配置</code></h3><pre class=" language-shell"><code class="language-shell">## AR2配置# 进入e0/0/0接口int e0/0/0# 开启接口二层交换功能undo portswitch# 进入子接口e0/0/0.1并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 10ip address 10.0.0.1 255.255.255.0 arp broadcast enable# 进入子接口e0/0/0.2并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 20ip address 172.1.1.1 255.255.255.0 arp broadcast enable# 进入子接口e0/0/0.3并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 30ip address 192.168.0.1 255.255.255.0 arp broadcast enable</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换基础 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web渗透</title>
      <link href="/2021/101455981.html"/>
      <url>/2021/101455981.html</url>
      
        <content type="html"><![CDATA[<h1 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a><code>web渗透</code></h1><h2 id="第1章-基本搜索工具的使用"><a href="#第1章-基本搜索工具的使用" class="headerlink" title="第1章 基本搜索工具的使用"></a><code>第1章 基本搜索工具的使用</code></h2><h3 id="1-1-Google语法使用"><a href="#1-1-Google语法使用" class="headerlink" title="1.1 Google语法使用"></a><code>1.1 Google语法使用</code></h3><p>关于谷歌相关的语法搜索列表</p><table><thead><tr><th>关键词</th><th>示例1</th><th>示例2</th></tr></thead><tbody><tr><td>site</td><td>site:edu.cn（搜索指定站点）</td><td>“site:edu.en”</td></tr><tr><td>link</td><td>link:<a href="http://www.baidu.com（这个的功能是查询所有链接到某个特定URL上的列表。要注意的是，是特定的URL页面，如输入：“link:www.baidu.com”进行搜索，如下图所示，就会返回所有链接到百度主页的网页了。因此，我们同样可以指定特定的URL页面来进行搜索）">www.baidu.com（这个的功能是查询所有链接到某个特定URL上的列表。要注意的是，是特定的URL页面，如输入：“link:www.baidu.com”进行搜索，如下图所示，就会返回所有链接到百度主页的网页了。因此，我们同样可以指定特定的URL页面来进行搜索）</a></td><td>“link:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>inurl</td><td>inurl:ww.baidu.com（inurl语法返回的网页链接中包含第一个关键字，后面的关键字则出现在链接中或者网页文档中）</td><td>“inurl:ww.baidu.com”</td></tr><tr><td>allinurl</td><td>allinurl:<a href="http://www.baidu.com(返回的网页的链接中包含所有查询关键字.这个查询的对象只集中于网页的链接字符串)/">www.baidu.com（返回的网页的链接中包含所有查询关键字。这个查询的对象只集中于网页的链接字符串）</a></td><td>“allinurl:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>intitle</td><td>intitle:index.of(allintitle和intitle的用法类似于上面的allinurl和inurl，只是后者对URL进行查询，而前者对网页的标题栏进行查询。网页标题，就是HTML标记语言中之间的部分。网页设计的一个原则就是要把主页的关键内容用简洁的语言表示在网页标题中。因此，只查询标题栏，通常也可以找到高相关率的专题页面)</td><td>“intitle:index.of”</td></tr><tr><td>allintitle</td><td>allintitle:index.of</td><td>“intitle:index.of”</td></tr><tr><td>info</td><td>info:<a href="http://www.baidu.com(这个语法可以搜索到关于一个url的更多信息的页面列表,这里的信息包括这个网页的cache,还有与这个网页相似的网页等等,注意下面的英文信息就好)/">www.baidu.com（这个语法可以搜索到关于一个URL的更多信息的页面列表，这里的信息包括这个网页的cache，还有与这个网页相似的网页等等，注意下面的英文信息就好）</a></td><td>“info:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>intext</td><td>intext:<a href="http://www.baidu.com（“intext:”是用来搜索网页正文内容的，这样就可以忽略网页中的超文本链接、URL和题目）">www.baidu.com（“intext:”是用来搜索网页正文内容的，这样就可以忽略网页中的超文本链接、URL和题目）</a></td><td>“intext:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>inanchor</td><td>inanchor:<a href="http://www.baidu.com（这个语法的意思是在页面的链接锚点进行搜索，链接锚点指的是一个链接的描述文本，如这样的一段HTML代码：`">www.baidu.com（这个语法的意思是在页面的链接锚点进行搜索，链接锚点指的是一个链接的描述文本，如这样的一段HTML代码：`</a><a href=https://www.baidu.com>百度</a>`，链接的锚点就是“百度”了）</td><td></td></tr><tr><td>related</td><td>related:<a href="http://www.sina.com.cn/index.shtml">www.sina.com.cn/index.shtml</a> (related用来搜索结构内容方面相似的网页。例：搜索所有与中文新浪网主页相似的页面如网易首页，搜狐首页，中华网首页等）</td><td>“related:<a href="http://www.sina.com.cn/index.shtml&quot;">www.sina.com.cn/index.shtml&quot;</a></td></tr><tr><td>cache</td><td>cache:<a href="http://www.baidu.com(cache可以帮助我们查找到google索引过的页面副本,它最大的好处就是及时源文件界面不存在了,或者变成了其它的内容,我们依然可以搜索的到)/">www.baidu.com（Cache可以帮助我们查找到google索引过的页面副本，它最大的好处就是及时源文件界面不存在了，或者变成了其它的内容，我们依然可以搜索的到）</a></td><td>“cache:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>filetype</td><td>filetype:mdb（filetype是指搜索指定后缀的文件。这个不太常用，但是在黑客领域有一定的作用。但是我们的重点是讲解语法，如下图所示，输入“filetype:mdb”，结果就会显示出一些网站的数据库文件）</td><td>“filetype:pdf”</td></tr><tr><td>+</td><td>“关键词a” + “关键词b”</td><td></td></tr><tr><td>-</td><td>“关键词a” - “关键词b”</td><td></td></tr><tr><td>OR</td><td>“关键词a” OR “关键词b”</td><td></td></tr></tbody></table><h2 id="1-2-Shodan语法使用"><a href="#1-2-Shodan语法使用" class="headerlink" title="1.2 Shodan语法使用"></a><code>1.2 Shodan语法使用</code></h2><table><thead><tr><th>关键词</th><th>示例1</th></tr></thead><tbody><tr><td>一般搜索</td><td>关键词+关键词   apache2 country:”CN”/  webcam contry:”US” / “webcam” country:”US”</td></tr><tr><td>限定国家</td><td>country:”CN”</td></tr><tr><td>限定城市</td><td>city:”ShangHai”</td></tr><tr><td>限定主机名或域名</td><td>hostname:.org / hostname:”google” / hostname:baidu.com</td></tr><tr><td>限定组织或机构</td><td>org:”alibaba”</td></tr><tr><td>限定系统OS版本</td><td>os:”Windows Server 2008 R2”  / os:”Windows 7 or 8” / os:”Linux 2.6.x”</td></tr><tr><td>限定端口</td><td>port:22 / port:80</td></tr><tr><td>指定网段或ip</td><td>net:”59.56.19.0/24” / net:121.24.35.1</td></tr><tr><td>指定使用的软件或产品</td><td>product:”Apache httpd” / product:”nginx”/ product:”Microsoft IIS httpd” / product:”mysql”</td></tr><tr><td>指定CVE漏洞编号</td><td>vuln:”CVE-2014-0723”</td></tr><tr><td>指定网页内容</td><td>http.html:”hello world”</td></tr><tr><td>指定网页标题</td><td>http.title:”hello”</td></tr><tr><td>指定返回响应码</td><td>http.status:200</td></tr><tr><td>指定返回中的server类型</td><td>http.server:Apache/2.4.7 / http.server:PHP</td></tr><tr><td>指定地理位置</td><td>geo:”31.25,121.44”</td></tr><tr><td>指定ISP供应商</td><td>isp:”China Telecom”</td></tr><tr><td>搜索指定的软件版本</td><td>version:”7.1.4”</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="1-3-kali-网络、DNS配置、远程ssh连接配置"><a href="#1-3-kali-网络、DNS配置、远程ssh连接配置" class="headerlink" title="1.3 kali 网络、DNS配置、远程ssh连接配置"></a><code>1.3 kali 网络、DNS配置、远程ssh连接配置</code></h3><pre class=" language-shell"><code class="language-shell">#### 网络配置为静态网卡vim /etc/network/interfaces## 添加以下内容# The loopback network interfaceauto loiface lo inet loopbackauto eth0iface eth0 inet staticaddress 192.168.1.2netmask 255.255.255.0gateway 192.168.1.254dns-nameservers 114.114.114.114#### DNS配置为 114.114.114.114vim /etc/resolv.conf## 添加以下内容# Generated by NetworkManagernameserver 114.114.114.114#### 配置远程允许root用户和私钥进行ssh登录vim /etc/ssh/sshd_config## 修改或者添加一下内容# 允许root和秘钥登录PermitRootLogin yesPubkeyAuthentication yes</code></pre><h2 id="第2章-BurpSuite使用"><a href="#第2章-BurpSuite使用" class="headerlink" title="第2章 BurpSuite使用"></a><code>第2章 BurpSuite使用</code></h2><p>BurpSuite中文汉化版使用相关教程 <a href="https://www.xcnte.com/archives/426/">https://www.xcnte.com/archives/426/</a></p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="第三章-OSWAP使用"><a href="#第三章-OSWAP使用" class="headerlink" title="第三章 OSWAP使用"></a><code>第三章 OSWAP使用</code></h2><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="1-sqlmap-扫描"><a href="#1-sqlmap-扫描" class="headerlink" title="1 .sqlmap 扫描"></a><font color=gren>1 .sqlmap 扫描</font></h4><p>扫描网址：<a href="https://damocles.compoundevents.org/post.php?id=109">https://damocles.compoundevents.org/post.php?id=109</a></p><p>扫描参数：sqlmap -u “<a href="https://damocles.compoundevents.org/post.php?id=109&quot;">https://damocles.compoundevents.org/post.php?id=109&quot;</a>  –random-agent -D conmpoun6-wp232 –tables</p><p>数据表：</p><ul><li><p>compoun6_wp232</p></li><li><p>information_schema</p></li></ul><p>compoun6_wp232 数据库数据表：</p><p>+————————————+<br>| wpvs_commentmeta                   |<br>| wpvs_comments                      |<br>| wpvs_groups_capability             |<br>| wpvs_groups_group                  |<br>| wpvs_groups_group_capability       |<br>| wpvs_groups_user_capability        |<br>| wpvs_groups_user_group             |<br>| wpvs_links                         |<br>| wpvs_loginizer_logs                |<br>| wpvs_mendeleycache                 |<br>| wpvs_options                       |<br>| wpvs_postmeta                      |<br>| wpvs_posts                         |<br>| wpvs_teachpress_artefacts          |<br>| wpvs_teachpress_assessments        |<br>| wpvs_teachpress_authors            |<br>| wpvs_teachpress_course_capabilites |<br>| wpvs_teachpress_course_documents   |<br>| wpvs_teachpress_course_meta        |<br>| wpvs_teachpress_courses            |<br>| wpvs_teachpress_pub                |<br>| wpvs_teachpress_pub_capabilites    |<br>| wpvs_teachpress_pub_documents      |<br>| wpvs_teachpress_pub_imports        |<br>| wpvs_teachpress_pub_meta           |<br>| wpvs_teachpress_rel_pub_auth       |<br>| wpvs_teachpress_relation           |<br>| wpvs_teachpress_settings           |<br>| wpvs_teachpress_signup             |<br>| wpvs_teachpress_stud               |<br>| wpvs_teachpress_stud_meta          |<br>| wpvs_teachpress_tags               |<br>| wpvs_teachpress_user               |<br>| wpvs_term_relationships            |<br>| wpvs_term_taxonomy                 |<br>| wpvs_termmeta                      |<br>| wpvs_terms                         |<br>| wpvs_usermeta                      |<br>| wpvs_users                         |<br>+————————————+</p><p>information_schema 数据库数据表：</p><p>+—————————————+<br>| CHARACTER_SETS                        |<br>| CLIENT_STATISTICS                     |<br>| COLLATIONS                            |<br>| COLLATION_CHARACTER_SET_APPLICABILITY |<br>| COLUMN_PRIVILEGES                     |<br>| ENGINES                               |<br>| EVENTS                                |<br>| FILES                                 |<br>| GLOBAL_STATUS                         |<br>| GLOBAL_TEMPORARY_TABLES               |<br>| GLOBAL_VARIABLES                      |<br>| INDEX_STATISTICS                      |<br>| INNODB_BUFFER_PAGE                    |<br>| INNODB_BUFFER_PAGE_LRU                |<br>| INNODB_BUFFER_POOL_STATS              |<br>| INNODB_CHANGED_PAGES                  |<br>| INNODB_CMP                            |<br>| INNODB_CMPMEM                         |<br>| INNODB_CMPMEM_RESET                   |<br>| INNODB_CMP_PER_INDEX                  |<br>| INNODB_CMP_PER_INDEX_RESET            |<br>| INNODB_CMP_RESET                      |<br>| INNODB_FT_BEING_DELETED               |<br>| INNODB_FT_CONFIG                      |<br>| INNODB_FT_DEFAULT_STOPWORD            |<br>| INNODB_FT_DELETED                     |<br>| INNODB_FT_INDEX_CACHE                 |<br>| INNODB_FT_INDEX_TABLE                 |<br>| INNODB_LOCKS                          |<br>| INNODB_LOCK_WAITS                     |<br>| INNODB_METRICS                        |<br>| INNODB_SYS_COLUMNS                    |<br>| INNODB_SYS_DATAFILES                  |<br>| INNODB_SYS_FIELDS                     |<br>| INNODB_SYS_FOREIGN                    |<br>| INNODB_SYS_FOREIGN_COLS               |<br>| INNODB_SYS_INDEXES                    |<br>| INNODB_SYS_TABLES                     |<br>| INNODB_SYS_TABLESPACES                |<br>| INNODB_SYS_TABLESTATS                 |<br>| INNODB_SYS_VIRTUAL                    |<br>| INNODB_TABLESPACES_ENCRYPTION         |<br>| INNODB_TABLESPACES_SCRUBBING          |<br>| INNODB_TEMP_TABLE_INFO                |<br>| INNODB_TRX                            |<br>| KEY_COLUMN_USAGE                      |<br>| OPTIMIZER_TRACE                       |<br>| PARAMETERS                            |<br>| PARTITIONS                            |<br>| PLUGINS                               |<br>| PROCESSLIST                           |<br>| PROFILING                             |<br>| REFERENTIAL_CONSTRAINTS               |<br>| ROUTINES                              |<br>| SCHEMATA                              |<br>| SCHEMA_PRIVILEGES                     |<br>| SESSION_STATUS                        |<br>| SESSION_VARIABLES                     |<br>| TABLESPACES                           |<br>| TABLE_CONSTRAINTS                     |<br>| TABLE_PRIVILEGES                      |<br>| TABLE_STATISTICS                      |<br>| TEMPORARY_TABLES                      |<br>| THREAD_STATISTICS                     |<br>| TRIGGERS                              |<br>| USER_PRIVILEGES                       |<br>| USER_STATISTICS                       |<br>| VIEWS                                 |<br>| XTRADB_INTERNAL_HASH_TABLES           |<br>| XTRADB_READ_VIEW                      |<br>| XTRADB_RSEG                           |<br>| XTRADB_ZIP_DICT                       |<br>| XTRADB_ZIP_DICT_COLS                  |<br>| COLUMNS                               |<br>| STATISTICS                            |<br>| TABLES                                |<br>+—————————————+</p><p>查询其中某一张表的内容：</p><p>sqlmap -u “<a href="https://damocles.compoundevents.org/post.php?id=109&quot;">https://damocles.compoundevents.org/post.php?id=109&quot;</a>  -t 5  –random-agent -D information_schema   -T KEY_COLUMN_USAGE  –columns </p><p>查询表中的字段： </p><p>+——————-+————————————+<br>| user_login        | user_pass                          |<br>+——————-+————————————+<br>| dirkE             | $P$BphxuJTLbBrLRI70FK3Gq8uRKDFpoj1 |<br>| anaisC            | $P$B8u1KNzF5eFXVAe1ZVxcCxj8.2UO4j1 |<br>| NinaRidder        | $P$BzZeqQ.Qu02E89yI9eoSghcqUJ3Pcw1 |<br>| PhilipWard        | $P$Bsl4CSrPQ/Jr/U47kLw7MADCHrdiH90 |<br>| HesselWinsemius   | $P$BDpmNsugn4qXEo8r8L/rnH6Zr03zPz0 |<br>| EmanueleBevacqua  | $P$B4TLlQh.SnYS0AgfIA93TSmN0qELnr. |<br>| AntoniaSebastian  | $P$BLZpW2QSgwPlIlib5PnhCX4ahO/O7z1 |<br>| test              | $P$B9jxrqgOHfL71oTuraeFZmXZy7wY3X/ |<br>| KarinW            | $P$B1W5dvRnwZkDOVLl4Qza4xvD6TDwMo. |<br>| JakobZscheischler | $P$Bjlc/BfsIi7ENsyguNqGVs981Rxx1d/ |<br>| ThomasWahl        | $P$BWyrB0tusTrOxOYGq7MldJv2pYLVcM1 |<br>| AlexC             | $P$BqcYW6Nk6/RcERK7tuYfEu.WaiIyL30 |<br>| JannisH           | $P$BCBrg2m1tkIL.9f2ZKQs/shq2d5UuG/ |<br>| AloisT            | $P$BTfccK84Knge1ZbldGY5fqtGX8udAE. |<br>| DirkD             | $P$BsN7CeVOjrgvhQnXlcGSmTW58Ind5n1 |<br>| oliviaR           | $P$BmGLIII.l3i9roEgdEUInzid9DMp1y0 |<br>| AlexandreR        | $P$B1x/sgMfxOVAq72wVFMcnbeiY0nBQ8/ |<br>| WimT              | $P$BNcxFnJN.SMlhNB75FlLZxRVh.Devz/ |<br>| ColinR            | $P$BXK0R9cZpgu29VCs8/6jCMJPs5mfM9/ |<br>| ElisaR            | $P$BPEsvmIlt2xhoJ8tj1mw3LB30VOYaX. |<br>| MojtabaS          | $P$B9dhn/vo07px1PGgQPRHuzKu3phX1.1 |<br>+——————-+————————————+</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> debian网卡静态设置 </category>
          
          <category> ubuntu网卡静态设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java笔记</title>
      <link href="/2021/101456103.html"/>
      <url>/2021/101456103.html</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA-学习笔记"><a href="#JAVA-学习笔记" class="headerlink" title="JAVA 学习笔记"></a>JAVA 学习笔记</h1><h3 id="java基础入门路线图参考"><a href="#java基础入门路线图参考" class="headerlink" title="java基础入门路线图参考"></a>java基础入门路线图参考</h3><ul><li><input checked="" disabled="" type="checkbox"> <strong>java环境配置</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java语言特性</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java体系平台</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java虚拟机</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java垃圾回收</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>jvm、jre、jdk关系</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java注释</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java文本编辑器和集成环境</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java 变量的概念和定义</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java数据类型</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java算数运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>赋值运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>比较运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>逻辑运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>位运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>三元运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>运算符优先级</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>顺序结构</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>分支结构</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>循环结果for和while</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>嵌套循环</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>一维数组和多维数组</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>数组常见算法</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>面对对象编程</strong></li><li><input disabled="" type="checkbox"> <strong>类的写法</strong></li><li><input disabled="" type="checkbox"> <strong>对象创建和应用</strong></li><li><input disabled="" type="checkbox"> <strong>类的属性</strong></li><li><input disabled="" type="checkbox"> <strong>类的方法</strong></li><li><input disabled="" type="checkbox"> <strong>方法重载</strong></li><li><input disabled="" type="checkbox"> <strong>方法参数传递</strong></li><li><input disabled="" type="checkbox"> <strong>包package和引用import</strong></li><li><input disabled="" type="checkbox"> <strong>封装和隐藏</strong></li><li><input disabled="" type="checkbox"> <strong>访问权限修饰符</strong></li><li><input disabled="" type="checkbox"> <strong>类的构造方法</strong></li><li><input disabled="" type="checkbox"> <strong>构造方法重载</strong></li><li><input disabled="" type="checkbox"> <strong>this关键字</strong></li><li><input disabled="" type="checkbox"> <strong>_javaBean</strong></li><li><input disabled="" type="checkbox"> <strong>继承</strong></li><li><input disabled="" type="checkbox"> <strong>单继承和多继承</strong></li><li><input disabled="" type="checkbox"> <strong>父子类与访问修饰符的关系</strong></li><li><input disabled="" type="checkbox"> <strong>关键字super</strong></li><li><input disabled="" type="checkbox"> <strong>关键字super和this区别</strong></li><li><input disabled="" type="checkbox"> <strong>java对象实例化过程</strong></li><li><input disabled="" type="checkbox"> <strong>多态性</strong></li><li><input disabled="" type="checkbox"> <strong>对象类型转换</strong></li><li><input disabled="" type="checkbox"> <strong>==与equals</strong></li><li><input disabled="" type="checkbox"> <strong>包封装和tostring</strong></li><li><input disabled="" type="checkbox"> <strong>关键字static</strong></li><li><input disabled="" type="checkbox"> <strong>单例设计模式</strong></li><li><input disabled="" type="checkbox"> <strong>代码块</strong></li><li><input disabled="" type="checkbox"> <strong>关键字final</strong></li><li><input disabled="" type="checkbox"> <strong>抽象类</strong></li><li><input disabled="" type="checkbox"> <strong>模板设计方式</strong></li><li><input disabled="" type="checkbox"> <strong>接口</strong></li><li><input disabled="" type="checkbox"> <strong>工厂模式</strong></li><li><input disabled="" type="checkbox"> <strong>内部类</strong></li><li><input disabled="" type="checkbox"> <strong>捕获异常</strong></li><li><input disabled="" type="checkbox"> <strong>Hashset集合</strong></li><li><input disabled="" type="checkbox"> <strong>List集合</strong></li><li><input disabled="" type="checkbox"> <strong>map集合</strong></li><li><input disabled="" type="checkbox"> <strong>工具类Collections</strong></li><li><input disabled="" type="checkbox"> <strong>为什么使用范型</strong></li><li><input disabled="" type="checkbox"> <strong>范型相关</strong></li><li><input disabled="" type="checkbox"> <strong>file类及相关</strong></li><li><input disabled="" type="checkbox"> <strong>文件字节流相关</strong></li><li><input disabled="" type="checkbox"> <strong>对象流</strong></li><li><input disabled="" type="checkbox"> <strong>随机存取流</strong></li><li><input disabled="" type="checkbox"> <strong>反射机制概况</strong></li><li><input disabled="" type="checkbox"> <strong>class类</strong></li><li><input disabled="" type="checkbox"> <strong>反射机制相关</strong></li><li><input disabled="" type="checkbox"> <strong>java动态代理</strong></li><li><input disabled="" type="checkbox"> <strong>线程</strong></li><li><input disabled="" type="checkbox"> <strong>线程的同步与死锁</strong></li><li><input disabled="" type="checkbox"> <strong>线程通信</strong></li></ul><h3 id="第1章-Java-环境变量配置"><a href="#第1章-Java-环境变量配置" class="headerlink" title="第1章 Java 环境变量配置"></a>第1章 Java 环境变量配置</h3><ul><li><p>配置 JAVA_HOME 变量，在系统环境变量里添加JAVA_HOME变量 C:\Users\15256\OneDrive\史秀海项目\编程语言学习\java\jdk1.8.0_102\jdk1.8.0_102</p></li><li><p>配置CLASSPATH变量 ，在系统环境变量里添加</p><p>CLASSPATH变量  .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p></li><li><p>path变量添加两个：%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin;</p></li></ul><h3 id="第2章-java运算符相关"><a href="#第2章-java运算符相关" class="headerlink" title="第2章 java运算符相关"></a>第2章 java运算符相关</h3><h3 id="第3章-java循环结构相关"><a href="#第3章-java循环结构相关" class="headerlink" title="第3章 java循环结构相关"></a>第3章 java循环结构相关</h3><h3 id="第4章-类和对象相关"><a href="#第4章-类和对象相关" class="headerlink" title="第4章 类和对象相关"></a>第4章 类和对象相关</h3><h4 id="5-运行Java第一个程序-hello-word"><a href="#5-运行Java第一个程序-hello-word" class="headerlink" title="5.  运行Java第一个程序 hello word"></a>5.  运行Java第一个程序 hello word</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"hello word"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="程序基础逻辑集合"><a href="#程序基础逻辑集合" class="headerlink" title="程序基础逻辑集合"></a>程序基础逻辑集合</h3></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *      * 这是文本注释     * @param args     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 单行注释</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java变量的概念和定义        1. 基本数据类型(8种)            1. 整数数据类型（byte、short、int、long）            2. 浮点类型 （float、 double） float a = 1.22f            3. 字符类型 （char）            4. 布尔类型 （boolean） 布尔类型只要true和false        2. 引用数据类型            1. string类型 (String)            */</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">1.33f</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        c <span class="token operator">=</span> i <span class="token operator">+</span> a<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> <span class="token string">"hell"</span> <span class="token operator">+</span> <span class="token string">"o"</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"print word is "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        三元运算符（三目运算符）        条件表达式?表达式1:表达式2;        */</span>        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> k <span class="token operator">=</span> d <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取三个数中较大的数 （通过三元运算符号）</span>        <span class="token keyword">int</span> a1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a3 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1 <span class="token operator">></span> a2 <span class="token operator">?</span> <span class="token punctuation">(</span>a1 <span class="token operator">></span> a3 <span class="token operator">?</span> a1 <span class="token operator">:</span> a3<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>a2 <span class="token operator">></span> a3 <span class="token operator">?</span> a2 <span class="token operator">:</span> a3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java 分支结构 if-else, switch        */</span>        <span class="token keyword">int</span> b1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> k1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>b1 <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> k1 <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>b1 <span class="token operator">==</span><span class="token number">1</span> <span class="token operator">||</span> k1 <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// 如果数字1输出星期一以此类推 (case数字的应用)</span>       <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期二"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期六"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不知道星期几"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>                  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// case 字符串上的使用</span>       String str <span class="token operator">=</span> <span class="token string">"bcd"</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"a"</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"bcd"</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"bcd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"I don'not know"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>               <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// case语句字符上的使用</span>       <span class="token keyword">int</span> s1 <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'a'</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'b'</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"no char"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">/*        java 循环结构 for while do/while        */</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i2 <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 三位数拆解各个位数</span>        <span class="token comment" spellcheck="true">// 通过while循环输出1到100数字</span>        <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>t <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"while 循环的值是 "</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>            t<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// for 循环return的使用</span>        <span class="token comment" spellcheck="true">// for(int v = 0; v &lt; 9; v++)&amp;#123;</span>        <span class="token comment" spellcheck="true">//     if(v == 7)&amp;#123;</span>                        <span class="token comment" spellcheck="true">//          return; // 看上去效果和break一样，实际上是退出整个类。</span>        <span class="token comment" spellcheck="true">//     &amp;#125;</span>        <span class="token comment" spellcheck="true">//     System.out.println(v);</span>                    <span class="token comment" spellcheck="true">// &amp;#125;</span>                <span class="token comment" spellcheck="true">/*        java 的一位数组定义        type var[]; 或者 type[] var;        int a[]; int[] a1; double b[]; Mydate[] c;        */</span>                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ii <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明一个能放4个int类型的数据数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ii0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明了一个存放1、2、3、4这四个数的数组</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 数组内每个数都有一个下标，这个下标是数字</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"strs的长度是 "</span> <span class="token operator">+</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/*        java 多维数组和命名方法         type var[][]; 或者 type[][] var;        */</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 第一维部分长度是2，第二维也就是第一维每个元素长度是3</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 只定义第一维长度，第二维不定义</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 二维数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 特殊写法，c1是一维数组，c2是二维数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数组的一维长度</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> g <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> g<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr0 <span class="token operator">=</span> arr<span class="token punctuation">[</span>g<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> llen <span class="token operator">=</span> arr0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// </span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> llen<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                res <span class="token operator">+=</span> arr0<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这个二维数组的和是："</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java 常见数组算法        求数组中元素的最大值，最小值，总数，平均数        */</span>        <span class="token comment" spellcheck="true">// 求数组中元素最大值</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 最大值</span>        <span class="token keyword">int</span> max <span class="token operator">=</span> arr3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 假设 arr[0]是最大值</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i5 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i5 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i5<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arr3<span class="token punctuation">[</span>i5<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                max <span class="token operator">=</span> arr3<span class="token punctuation">[</span>i5<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//存放最大值</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 总和平均数</span>        <span class="token keyword">int</span> res1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i6 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i6<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            res1 <span class="token operator">+=</span> arr3<span class="token punctuation">[</span>i6<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"res1这个数组总和是："</span> <span class="token operator">+</span> res1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"res1这个数组的平均数是"</span> <span class="token operator">+</span> res1<span class="token operator">/</span><span class="token punctuation">(</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 注意复制不是赋值</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> copy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i7 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i7 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i7<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            copy<span class="token punctuation">[</span>i7<span class="token punctuation">]</span> <span class="token operator">=</span> arr3<span class="token punctuation">[</span>i7<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 反转</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i8 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i8<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            temp<span class="token punctuation">[</span>i8<span class="token punctuation">]</span> <span class="token operator">=</span> arr3<span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token operator">-</span>i8<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 数组元素排序 冒泡排序(从大到小或者从小到大进行排序)</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> m<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    temp1 <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp1<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*         面向对象编程         */</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明一个Person类型变量，变量名为person</span>        <span class="token comment" spellcheck="true">// new Person() 就是实例化Person类</span>        person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 给Person对象的name属性赋值</span>        person<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 对象方法调用</span>                       Animal ani <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ani<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">"大米小米"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ani<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token string">"飞翔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>Person 类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 人 *  */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    String name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 姓名,String 的默认值是null</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 年龄，int 的默认值是0</span>    <span class="token comment" spellcheck="true">// 行为, 方法, 也叫函数</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 方法的名称如果是多个单词,首个单词字母小写，其他字母单词大写，驼峰命名法</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>Animal 类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 动物的类 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    String name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 动物名称</span>    <span class="token keyword">int</span> eye<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 眼睛的个数</span>    <span class="token keyword">int</span> legs<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 几条腿</span>    <span class="token comment" spellcheck="true">/**     * param food 食物     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span>String food<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"此动物的食物是: "</span> <span class="token operator">+</span> food<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动物的移动方式     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span>String moveType<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"此动物的移动方式是: "</span> <span class="token operator">+</span> moveType<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp配置相关</title>
      <link href="/2021/092915509.html"/>
      <url>/2021/092915509.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="frp-服务端配置"><a href="#frp-服务端配置" class="headerlink" title="frp 服务端配置"></a>frp 服务端配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> frp_0.33.0_linux_amd64/<span class="token function">vi</span> frps.ini<span class="token punctuation">[</span>common<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># frp监听的端口，默认是7000，可以改成其他的</span>bind_port <span class="token operator">=</span> 7000<span class="token comment" spellcheck="true"># 授权码，请改成更复杂的</span>token <span class="token operator">=</span> 52010  <span class="token comment" spellcheck="true"># 这个token之后在客户端会用到</span><span class="token comment" spellcheck="true"># frp管理后台端口，请按自己需求更改</span>dashboard_port <span class="token operator">=</span> 7500<span class="token comment" spellcheck="true"># frp管理后台用户名和密码，请改成自己的</span>dashboard_user <span class="token operator">=</span> admindashboard_pwd <span class="token operator">=</span> adminenable_prometheus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># 配置http代理</span>vhost_http_port <span class="token operator">=</span> 80<span class="token comment" spellcheck="true"># 配置https代理</span>vhost_https_port <span class="token operator">=</span> 443<span class="token comment" spellcheck="true"># frp日志配置</span>log_file <span class="token operator">=</span> /var/log/frps.loglog_level <span class="token operator">=</span> infolog_max_days <span class="token operator">=</span> 3<span class="token comment" spellcheck="true">## 设置和启动frp服务</span><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/frp<span class="token function">sudo</span> <span class="token function">cp</span> frps.ini /etc/frp<span class="token function">sudo</span> <span class="token function">cp</span> frps /usr/bin<span class="token function">sudo</span> <span class="token function">cp</span> systemd/frps.service /usr/lib/systemd/system/<span class="token comment" spellcheck="true"># (或者 /lib/systemd/system)</span><span class="token function">sudo</span> systemctl <span class="token function">enable</span> frps<span class="token function">sudo</span> systemctl start frpssystemctl daemon-reloadsystemctl <span class="token function">enable</span> disk-space-check.service<span class="token comment" spellcheck="true">## 设计开机自启动</span>$ <span class="token function">cat</span> /usr/lib/systemd/system/mycmd.service<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description <span class="token operator">=</span> some shell script<span class="token comment" spellcheck="true"># 要求脚本具有可执行权限</span>ConditionFileIsExecutable<span class="token operator">=</span>/usr/bin/some.sh<span class="token comment" spellcheck="true"># 指定要运行的命令、脚本</span><span class="token punctuation">[</span>Service<span class="token punctuation">]</span>ExecStart <span class="token operator">=</span> /usr/bin/some.sh<span class="token comment" spellcheck="true"># 下面这段不能少</span><span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy <span class="token operator">=</span> multi-user.target$ systemctl daemon-reload$ systemctl <span class="token function">enable</span> mycmd.service<span class="token comment" spellcheck="true">## 防火墙开放端口</span><span class="token comment" spellcheck="true"># 添加监听端口</span><span class="token function">sudo</span> firewall-cmd --permanent --add-port<span class="token operator">=</span>7000/tcp<span class="token comment" spellcheck="true"># 添加管理后台端口</span><span class="token function">sudo</span> firewall-cmd --permanent --add-port<span class="token operator">=</span>7500/tcp<span class="token function">sudo</span> firewall-cmd --reload</code></pre><h2 id="frp-客户端配置"><a href="#frp-客户端配置" class="headerlink" title="frp 客户端配置"></a>frp 客户端配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> frpc.ini  <span class="token comment" spellcheck="true"># (注意哦，不是frps.ini)</span><span class="token comment" spellcheck="true"># 客户端配置</span><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> 服务器ipserver_port <span class="token operator">=</span> 7000 <span class="token comment" spellcheck="true"># 与frps.ini的bind_port一致</span>token <span class="token operator">=</span> 52010  <span class="token comment" spellcheck="true"># 与frps.ini的token一致</span><span class="token comment" spellcheck="true"># 配置ssh服务</span><span class="token punctuation">[</span>ssh<span class="token punctuation">]</span><span class="token function">type</span> <span class="token operator">=</span> tcplocal_ip <span class="token operator">=</span> 127.0.0.1local_port <span class="token operator">=</span> 22remote_port <span class="token operator">=</span> 6000  <span class="token comment" spellcheck="true"># 这个自定义，之后再ssh连接的时候要用</span><span class="token comment" spellcheck="true"># 配置http服务，可用于小程序开发、远程调试等，如果没有可以不写下面的</span><span class="token punctuation">[</span>web<span class="token punctuation">]</span><span class="token function">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> 127.0.0.1local_port <span class="token operator">=</span> 8080subdomain <span class="token operator">=</span> test.hijk.pw  <span class="token comment" spellcheck="true"># web域名</span>remote_port <span class="token operator">=</span> 自定义的远程服务器端口，例如8080<span class="token comment" spellcheck="true">## web相关配置</span><span class="token punctuation">[</span>walterlv_example_http<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 依然支持 http 访问</span><span class="token function">type</span> <span class="token operator">=</span> http<span class="token comment" spellcheck="true"># 本地 Web 服务的端口</span>local_port <span class="token operator">=</span> 10000<span class="token comment" spellcheck="true"># 需要反向代理的域名（当访客通过此域名访问 A 机器时，才会将请求反向代理到此 Web 服务）</span>custom_domains <span class="token operator">=</span> example.walterlv.com<span class="token punctuation">[</span>walterlv_example<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 配置 https 访问</span><span class="token function">type</span> <span class="token operator">=</span> https<span class="token comment" spellcheck="true"># 本地 Web 服务的端口（与前面的配置一样，都对应同一个 Web 服务）</span>local_port <span class="token operator">=</span> 10000<span class="token comment" spellcheck="true"># 需要反向代理的域名（当访客通过此域名访问 A 机器时，才会将请求反向代理到此 Web 服务）</span>custom_domains <span class="token operator">=</span> example.walterlv.com<span class="token comment" spellcheck="true"># 接下来的配置是支持 https 的重点配置</span><span class="token comment" spellcheck="true"># 配置插件，将 https 请求转换成 http 请求后再发送给本地 Web 服务程序</span>plugin <span class="token operator">=</span> https2http<span class="token comment" spellcheck="true"># 转换成 http 后，发送到本机的 10000 端口</span>plugin_local_addr <span class="token operator">=</span> 127.0.0.1:10000<span class="token comment" spellcheck="true"># 可能是 frp 的 Bug？这里必须写成 127.0.0.1，稍后解释</span>plugin_host_header_rewrite <span class="token operator">=</span> 127.0.0.1<span class="token comment" spellcheck="true"># 指定代理方式为 frp</span>plugin_header_X-From-Where <span class="token operator">=</span> frp<span class="token comment" spellcheck="true"># 指定成你在前面部分导出的证书的路径</span>plugin_crt_path <span class="token operator">=</span> C:/Samples/_.walterlv.com_chain.crtplugin_key_path <span class="token operator">=</span> C:/Samples/_.walterlv.com_key.key</code></pre><h2 id="测试穿透是否配置成功"><a href="#测试穿透是否配置成功" class="headerlink" title="测试穿透是否配置成功"></a>测试穿透是否配置成功</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> 用户名@服务端ip  -p 端口号<span class="token comment" spellcheck="true"># 这里一定要注意，这里用的是服务端的ip和用户名，端口号用的frpc.ini文件中的remote_port。如果你登录成功，那么，恭喜你，你已经学会了利用frc怎么配置内网穿透了！！！</span></code></pre><h2 id="frps-完整"><a href="#frps-完整" class="headerlink" title="frps 完整"></a>frps 完整</h2><pre class=" language-bash"><code class="language-bash">vim frps.ini 基础配置​bind_addr           服务端监听地址          0.0.0.0        bind_port           服务端监听端口           7000      bind_udp_port       服务端监听 UDP 端口        0       kcp_bind_port       服务端监听 KCP 协议端口     0        proxy_bind_addr     代理监听地址      log_file            日志文件地址             /var/log/frp.loglog_level           日志级别                trace, debug, info, warn, error<span class="token punctuation">(</span>默认info<span class="token punctuation">)</span>log_max_days        日志文件保留天数           3    detailed_errors_to_client  服务端返回详细错误信息给客户端  <span class="token boolean">true</span>tls_cert_file       TLS 服务端证书文件路径           tls_key_file        TLS 服务端密钥文件路径           tls_trusted_ca_file  TLS CA 证书路径    ​权限验证authentication_method       鉴权方式              token <span class="token punctuation">(</span>默认token 。oidc<span class="token punctuation">)</span>         authenticate_heartbeats     开启心跳消息鉴权       <span class="token boolean">false</span>        token                       鉴权使用的 token 值   客户端需要设置一样的值才能鉴权通过​管理配置allow_ports          允许代理绑定的服务端端口     1000-2000,2001,3000-4000max_pool_count       最大连接池大小             5max_ports_per_client 限制单个客户端最大同时存在的代理数  0<span class="token punctuation">(</span>0表示没有限制<span class="token punctuation">)</span>tls_only             只接受启用了 TLS 的客户端连接     <span class="token boolean">false</span>        ​监控dashboard_addr          启用 Dashboard 监听的本地地址    0.0.0.0         dashboard_port          启用 Dashboard 监听的本地端口    0       dashboard_user          HTTP BasicAuth 用户名          dashboard_pwd           HTTP BasicAuth 密码           enable_prometheus       是否提供 Prometheus 监控接口    <span class="token boolean">false</span>       需要同时启用了 Dashboard 才会生效asserts_dir             静态资源目录          Dashboard 使用的资源默认打包在二进制文件中，通过指定此参数使用自定义的静态资源​HTTP <span class="token operator">&amp;</span> HTTPSvhost_http_port         为 HTTP 类型代理监听的端口    0       启用后才支持 HTTP 类型的代理，默认不启用vhost_https_port        为 HTTPS 类型代理监听的端口   0       启用后才支持 HTTPS 类型的代理，默认不启用vhost_http_timeout      HTTP 类型代理在服务端的 ResponseHeader 超时时间  60      subdomain_host          二级域名后缀          custom_404_page         自定义 404 错误页面地址          ​TCPMUXtcpmux_httpconnect_port     为 TCPMUX 类型代理监听的端口  0       启用后才支持 TCPMUX 类型的代理，默认不启用</code></pre>]]></content>
      
      
      <categories>
          
          <category> 内网穿透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp配置基础 </tag>
            
            <tag> frp使用 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
