<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记vscode相关配置</title>
      <link href="/2021/121939245.html"/>
      <url>/2021/121939245.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装的插件已经同步到微软账户"><a href="#1-安装的插件已经同步到微软账户" class="headerlink" title="1.安装的插件已经同步到微软账户"></a><code>1.安装的插件已经同步到微软账户</code></h1><h1 id="2-日常调试python"><a href="#2-日常调试python" class="headerlink" title="2.日常调试python"></a><code>2.日常调试python</code></h1><blockquote><p>直接debug按钮即可</p></blockquote><h1 id="3-日常调试flask"><a href="#3-日常调试flask" class="headerlink" title="3.日常调试flask"></a><code>3.日常调试flask</code></h1><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 在项目文件夹下创建.vscode文件夹</span><span class="token comment" spellcheck="true">## 2. 在.vscode下创建launch.json</span><span class="token comment" spellcheck="true">## 3. launch.json内容如下</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid<span class="token operator">=</span>830387    <span class="token string">"version"</span><span class="token keyword">:</span> <span class="token string">"0.2.0"</span>,    <span class="token string">"configurations"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"Python: Flask"</span>,            <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"python"</span>,            <span class="token string">"request"</span><span class="token keyword">:</span> <span class="token string">"launch"</span>,            <span class="token string">"module"</span><span class="token keyword">:</span> <span class="token string">"flask"</span>,            <span class="token string">"env"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"FLASK_APP"</span><span class="token keyword">:</span> <span class="token string">"flask_app_1.py"</span>,                <span class="token string">"FLASK_ENV"</span><span class="token keyword">:</span> <span class="token string">"development"</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"run"</span>,                <span class="token string">"--no-debugger"</span>,                <span class="token string">"--no-reload"</span>             <span class="token punctuation">]</span>,            <span class="token string">"jinja"</span><span class="token keyword">:</span> <span class="token boolean">true</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><h1 id="4-日常调试django"><a href="#4-日常调试django" class="headerlink" title="4.日常调试django"></a><code>4.日常调试django</code></h1><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. 在项目文件夹下创建.vscode文件夹</span><span class="token comment" spellcheck="true">## 2. 在.vscode下创建launch.json</span><span class="token comment" spellcheck="true">## 3. launch.json内容如下</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid<span class="token operator">=</span>830387    <span class="token string">"version"</span><span class="token keyword">:</span> <span class="token string">"0.2.0"</span>,    <span class="token string">"configurations"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"Python: Django"</span>,            <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"python"</span>,            <span class="token string">"request"</span><span class="token keyword">:</span> <span class="token string">"launch"</span>,            <span class="token string">"program"</span><span class="token keyword">:</span> <span class="token string">"$&amp;#123;workspaceFolder&amp;#125;\\manage.py"</span>,            <span class="token string">"args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"runserver"</span>,                <span class="token string">"--noreload"</span>,            <span class="token punctuation">]</span>,            <span class="token string">"django"</span><span class="token keyword">:</span> <span class="token boolean">true</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><h1 id="5-vscode连接远程服务器"><a href="#5-vscode连接远程服务器" class="headerlink" title="5.vscode连接远程服务器"></a><code>5.vscode连接远程服务器</code></h1><blockquote><p>导入图1 步骤1</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211219212029.png"></p><blockquote><p>导入图2 步骤二<br><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211219212236.png"></p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1. config里面内容配置如下（ssh配置文件里面的内容）</span>Host 104.225.236.140  HostName 104.225.236.140  User root  Port 27464  IdentityFile C:/Users/15256/.ssh/id_rsamyserver</code></pre>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode配置python调试 </tag>
            
            <tag> vscode配置连接远程服务器开发 </tag>
            
            <tag> vscode调试django </tag>
            
            <tag> vscode调试flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用百度地图api获取经纬度</title>
      <link href="/2021/1217198.html"/>
      <url>/2021/1217198.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3b1d3854e9f9527ee27425b7b2ae3d003d36a0475b451063fe74e2a8d1d41c65">14f2d733a805bc4143cc4d1dcd33bd088abc189993ab46cbd10dcc8b189abd6cb063777c6fef34f014d80692b9c2e1c52e8173670499f75e296daa92dc2aa205189874fc57532fee639998520dc7d37f5c7a5a0c53f6570ed46d43b37425469a74d7020f7f3cb57ce88357e4722cbce8431d7d6503d1171f9048ee62428ea152692bb6e796f5296e6c7a4ec1267475c339d0fb97e71d5992117f80d61bfcd00b6f1d612fbdf8b747da21932c552b888f931394727e6390b71ba85cd7fdc63511b4889c6318f41db1c61740fc35f538b7b0677e832029d34b6740fb8ff9274df8d63e8742f9c6e48afaefeb17f818f64a7d497939494e9f11753d8b132885852c792bb1054258ec92034ce31a62c32eefbb9fb15ceeb9da770f55a365f733e3e35496f50f1ebe90939a8cac77c3b7f001f6f49caf2b3326f076d40f663c8f2b33517d6707e43b97f5fbc01537a15a0c166dc1e16a10fff052a38aa921a729f1e7ea0cb2d4d18606f0c117fc8c2c3894e15f25783a2145373bead7987d530078d365b2365045b2395ea9e9d5882eef203e2c18c00388b5f139f4fa9786d111567038a9ab76576f6f37893ce1b7123ce22f89749f279c09a4e37884702224ba6ef8cf2dedfc0bc5b9d8288ec09e10737522ee8af40c19c44db7c5252ed2a072de1ddf6edff6beefe61a31ef65af92aff02a29454f4b8bf8a760160ea8ace8cab05c1724e8b77cd43aa91c5239e6c4a384c7228bcd90b578d26bfb261a7c539b21b29718af760f40032914845b41efb61ff8650f34f02ab0a3c1bdf4243d5ed197cd1432a8f219d8bc53912563762196c5bd71700a22ca8295759a60a315a120b0ec617e11b8986ffcee7ee1339c0a2e1acdaff98e8bb7c441956166e08ad3a1ba949ff8c0d1d77bcfc320eb000c385a3dab13876ca25ad6f3a6ead5e53b0ce7e26b07970e21d3490665c57a1aefbc82f53870c91b6e1923db50552beb25e6e0a5555499e1b8e151f5125b7cf9b7b63c167f656d717128b6e8f98043e6b5fd8f11c098dbe475f347ae899a1c89988ea8f03dcd396b8543c8fc2ab5fee9c67bb975be02680de820185cb01bc069aa6b5e0808dc769c37a94eeb62fb0e3b6c0405fa1b47ff81efae674d8ff13a7a88da694fcd389ba5427c2facac434ab24bf552b214c66d50499b95d7373d5c940cef4fbeccde9e4554b009328260f0fee5fb5aac6a354911ca71b1e1d98e1a0ef1777199363bef6d71619bcd3df8ee8cc1452a06eea6a829d08947e20951cc51c73f58ba942497ed760ed2a4ee4da961195b311a6887823efd7ae625af5dcccf6e44c0146fd47878deff324da589dc391335c967b75b8feaa6c324c4319140a63b36ac0ccd725a24ee609b618bb338bc5d16c17845187818192dffc45be77001e477897567a598d6b5670827c7be22915cb2a3c1fbbc7ad8b6c9119d713fa9abd9487e58cfd784274afa1ec0a9b536c610e5bb887a71a5dac400ac739737f21e34c65842365d2cb6db19489bfabf732defd7bac2ce1771174b67650656e7943727abd01dc85a58db3454987b3374b87dc4817e4bf695d93259a959b88f8e9c8c17b0410f1738e9d1b56943ba003725cb5fab27ed4e2d9686d918a8b3bf93c43491a389be09bd586058aa4196d26771ba2e1f11996062119763c0c4d332664ef6c2c437de96a85d477678e1c94316135cf344c205fd9a88bedc89674936fa66e10950fcbbf062517343c0a2cf612908b4f03df04a5611326803c6b88811d63e80fda982f9e1a8952d46313b8927b7bd45b73dc97c8f2ab825468618f33533d5fcd60ebd8c2dea53a3ab8ac0941bce11a546443254c947d5c223e39e84539d2aa762804bacee9bd3b7a22e631bf7cdd64a0d3d6383c38a12461971e8b878b019c94980a3ff4fbf5d71208d22acc68ef8fb8188c1928f8bb652f7bcfc35fbe795418d39d47e5bbae4f2c75adde583775b0ed505c5d9c43521350df2a2f818247ab8e3594d45184ef528f361b6674380c216ef30048555f723ffe51676311cf8f87fc64b9d9c24f486dbd15c38b039a5ba27c15768a2b1bac496dc26312cc58a30f8ad45957c7d2d634c83b976301d10fb1c5bad1e7c9bb198f174a5b2e56bc0ff69b188a0f5c195c16b3df9afd5757a5868dfdac1511c4cfd3325997028607a2d49534c51c4bb21a52434c5aa8923c61789ecca00a24a18e3faf65ba0af92f2a404a243e387b4b5c50c64c280a869fb870c3df9212df8282e487f35fe5162953115dd9e7e5e7ec38fe4000be7166ab5ded22b7b3da83e935fdf98dd7f238764a87961df376782d8cb89a3f2b784bb710445aef52b7551a31c8836f591a20f9da65b34d0393402c2325c3555f69d9d8e32cc910e461fc252dd135c4e28bb7120ebfb6a376db751fac4f3e9ed9b06f8f73fd775bab9c93a34d4dbf4a1174f35d2dde5fc9554b65e4b693b599b6d73cf3ca5f07ef18bf96c0672f28f88b86cb77156898530ca5920162a4911238a03e8d00038eaf05eeea144b928e8b814618a1090ea48da4b94cf0a46546808a030479ce6a328c1cfe93f522d22676c9c2c061af69ba68c0813ed62fbfb7792cb7053de559bdb82a1dd65a4294fcf65966d72c82c7fa07db634211676f9f81ba833e4d8369a186e7ed026888c0f3558cf513da33281a36ad30217caa557f76c4242824ae3bd07678d751d892e11cbcbc02005f85b867f8c55ae8b0fac717c87c5e32e2ca17cf0e64478b6645e592e4cc59b06bf3e6309eee3a297f2b5905b9a4ff3a6e0f963146091d7e8485bab9465339135fad26ce00a3fe5d2a915db083ae5bdbc8e4f07f64174c2c7742ae6bf9e4894d2b4d08a8c28b17747f0c6ee21d42d0024a011c7e575f8624544f7da99e873fc9aaf7b1ac82b882b940b1fde79eb46aa5c3e523f677493e6d2a039f180b1750e4c3ed8e5bd9ec8e63abd0b4673fb5559c1415fa44332d3afc48ab5c4787b57c334b8c61967240572a717fb72a5f4a7e53f1f8459f9d87db206590eb8def76a69ae652d03869959943906d8a170baeaba6997bdc62e1854606d037cdc0aafe61d842eb041c81ba29a5c13fefae684e4e6bad34deac3d414c70f92a2872706b5fdd11901256d3e310cf3f0db0d9ed0f06286084971fcabb12bd3835e5931c82cdd1a493011fc9733a62598f673b05a75bc0f252f73c40bab915b0b88b18824f8adc357816bd6f3a56437e15682747c471e09a45e1284f7415ebe39c0f21132a6f3ea565297b01297cbd68109636239e3417c1eb2fa49ad0b42d105c7ca074765e0e26ee1c6c92a4f88661323cc8dc7a33bd0f960faecf0fbfa6159e700267666f31dc611c5dedfd98d1b75405fc15b6af24a4ed40235ceb6d4d70940ad28a7265d38214aaec05b8d1778c97be5bf452ffbf5679e590e74b5e64bad7f322bc8f56af5f4788e0eb3920e95b80b0cdb7830b64c9bdb67f887e88da595d92dad75a06597197b2549a6c04e4b7da20b57fceddbea18ccd07baa06871c8491fd436d7eba1a01277b2832d8899ca7619b724b008ed212e729a49848dc55c6c6e7f8e1033f918c4690fac628c72b01e481ee8324a4a2d952d4f5daacbce1069eb6c3e697d8465323121a5e51b691ce3d7403928aa0e1168446cc711b92a3429f80142d3dd49096e4e8cbfbfce9f6ad96e637be1bd9b22a2e4e6311b33cc1f5a3f2df975997847b92452d4dcd8a03f0fc08466298594025bf7c10b1df2a8ffc9d01b7bc31e1584fb647ad1d8c53432623bb257f9990325b212f0aa69992ae3e995d869fd1d739466ddce731be1830e1aa43b799a7194d76829b9dfa42d8973af2eb26c50de57c21ec91fdd9769fdf47844f19be0b7dfda47d9ece3c7efc183ce664957a8d4a8e0df8fd9ec8723bd09a6b4b0c71ef3385ea87a2809079d7d1e5e28abe21f750597e4092c6eb46ea5041e3e92bfcd4bdaf4041387b6722a9af01c4a2cc8adfdaa6292c7a2c91db7fc2135fc885fca94fafa685d9e0e338098d5b7fa0f4c51b57fda2cfef1c55e2da0bf5bbc6f9324dbcc263665a882ac71f804da4726d03ad261ac9e8a57629b6f1869eb628df1bb8ecc8dea32610b5fb9fc090b549e8c7de95a382a16e699c7f4f8a2010543b77b647c1f1fb4a02936b2cf4337f91a2917779804761288ac79d7f97a4ba8ea85dcf74fff25f75f4cb099b8a42633636a1b19e45c49e65aaab392beee34059553186f428f5efe936c295676a5180541ec0524428e82f615ccc87846508082caf97eea15fdb6d56f2b68ae75b6735cbb5384f412e7d474f35967715226555d990b594de452c861ba5f86d5318f19028794c7b809923ce0c899a4d013409e989e1f221ff30edb108f26710583841507dd01aebeab94c428453938003f8ab6e862a790e687d5b45349050588f8822b692c9340c4c63a19d1da17da20d019aa1074ab6fea0869c438e3ec319270213fef24db5dfde54d1e326b516ab75aebc2b6191fc9ce275c76c908a167cf00de1be3ace80b6bb1aab58cce362d7bd4e458dfc35be1f8f39ff3a432affa6af527950a334e770060298ec45d8195b811548fcf2ddc4179fc81d28d78733b6269a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调用百度地图api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js基础学习</title>
      <link href="/2021/121730907.html"/>
      <url>/2021/121730907.html</url>
      
        <content type="html"><![CDATA[<h3 id="以下教程都没有系统学习，只是单纯的用啥写啥"><a href="#以下教程都没有系统学习，只是单纯的用啥写啥" class="headerlink" title="以下教程都没有系统学习，只是单纯的用啥写啥"></a>以下教程都没有系统学习，只是单纯的用啥写啥</h3><pre class=" language-js"><code class="language-js">## json数据基本格式<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span><span class="token punctuation">[</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">'a1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'b1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'c1'</span><span class="token punctuation">:</span><span class="token number">2</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">'b1'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'b2'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token string">'d'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// js 使用例子</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>     <span class="token comment" spellcheck="true">// var a=1;</span>    <span class="token comment" spellcheck="true">// var b=2;</span>        <span class="token comment" spellcheck="true">// window.alert(a+b);</span>         <span class="token comment" spellcheck="true">// document.write("您的浏览器支持JavaScript脚本!");</span>    <span class="token comment" spellcheck="true">// 先创建js数组</span>    <span class="token keyword">var</span> person<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"John"</span><span class="token punctuation">,</span>    <span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"Doe"</span><span class="token punctuation">,</span>    <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">,</span>    <span class="token string">"eyecolor"</span><span class="token punctuation">:</span><span class="token string">"blue"</span><span class="token punctuation">,</span>    <span class="token string">"test"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"a"</span><span class="token punctuation">:</span><span class="token string">"123"</span><span class="token punctuation">,</span>         <span class="token string">"b"</span><span class="token punctuation">:</span><span class="token string">"456"</span><span class="token punctuation">,</span>         <span class="token string">"c"</span><span class="token punctuation">:</span><span class="token string">"789"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">'d'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>         <span class="token string">'e'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>         <span class="token string">'f'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 取json里面的数据</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> person<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// document.write(i + person[i] +"&lt;br>");</span>                document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i  <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'hell owrd'</span> <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// document.write(person['test'].length+"&lt;br>");</span>        <span class="token comment" spellcheck="true">// 获取数组下标</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token string">"下标"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取数组里json</span>                <span class="token comment" spellcheck="true">// 获取单个&amp;#123;&amp;#125;数据 t是数组下标</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">"单个数组里的key"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 从单个数组里通过key获取value</span>                    <span class="token comment" spellcheck="true">// 获取数组里的value person['test'][t]是对象 i 是key</span>                    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"value"</span><span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//打印出key的value</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> person<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><pre class=" language-js"><code class="language-js">## js一个调用示例<span class="token operator">%</span> load <span class="token keyword">static</span> <span class="token operator">%</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"&amp;#123;% static 'all.js' %&amp;#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>注册页面<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>        <span class="token operator">*</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            margin<span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            padding<span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            box<span class="token operator">-</span>sizing<span class="token punctuation">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        body<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            background<span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"img/2.jpg"</span><span class="token punctuation">)</span> no<span class="token operator">-</span>repeat center<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_layout<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            border<span class="token punctuation">:</span> 8px solid #eeeeee<span class="token punctuation">;</span>            background<span class="token operator">-</span>color<span class="token punctuation">:</span> white<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 让div水平居中 */</span>            margin<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>            margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* padding: 15px; */</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_left<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* border: 1px solid red; */</span>            float<span class="token punctuation">:</span> left<span class="token punctuation">;</span>            margin<span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_left p<span class="token punctuation">:</span>first<span class="token operator">-</span>child<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            color<span class="token punctuation">:</span> #fed026<span class="token punctuation">;</span>            size<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_left p<span class="token punctuation">:</span>last<span class="token operator">-</span>child<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            color<span class="token punctuation">:</span> #a6a6a6<span class="token punctuation">;</span>            size<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_center<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 450px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* border: 1px solid red; */</span>            float<span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_right<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* border: 1px solid red; */</span>            float<span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_right p<span class="token punctuation">:</span>first<span class="token operator">-</span>child<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* color: #a6a6a6; */</span>            font<span class="token operator">-</span>size<span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>rg_right p a<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            color<span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>td_left<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            text<span class="token operator">-</span>align<span class="token punctuation">:</span> right<span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>            color<span class="token punctuation">:</span> #a6a6a6<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span>td_right<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            padding<span class="token operator">-</span>left<span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            color<span class="token punctuation">:</span> #a6a6a6<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        #username<span class="token punctuation">,</span>#password<span class="token punctuation">,</span>#email<span class="token punctuation">,</span>#name<span class="token punctuation">,</span>#tel<span class="token punctuation">,</span>#birthday<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 251px<span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>            border<span class="token punctuation">:</span> 1px solid #a6a6a6<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 设置边框圆角 */</span>            border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            padding<span class="token operator">-</span>left<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        #checkcode<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>            border<span class="token punctuation">:</span> 1px solid #a6a6a6<span class="token punctuation">;</span>            border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            padding<span class="token operator">-</span>left<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        #img_check<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 验证码图片垂直居中 */</span>            vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        #btn_sub<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            background<span class="token operator">-</span>color<span class="token punctuation">:</span> #ffd026<span class="token punctuation">;</span>            border<span class="token punctuation">:</span> 1px solid #a6a6a6<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_right"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> id<span class="token operator">=</span><span class="token string">"username"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入用户名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"rg_layout"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string">"rg_left"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>新用户注册<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>USER REGISTER<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string">"rg_center"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"rg_form"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>table <span class="token operator">></span>                        <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_left"</span><span class="token operator">></span><span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"usename"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span> 用户名<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_right"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> id<span class="token operator">=</span><span class="token string">"username"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入用户名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                                                <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_left"</span><span class="token operator">></span><span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span> 密码<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_right"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> id<span class="token operator">=</span><span class="token string">"password"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入密码"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                                                <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_left"</span><span class="token operator">></span><span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"email"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span> email<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_right"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"email"</span> name<span class="token operator">=</span><span class="token string">"email"</span> id<span class="token operator">=</span><span class="token string">"email"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入email"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                                                <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_left"</span><span class="token operator">></span><span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"tel"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span> 手机号<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"td_right"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"tel"</span> id<span class="token operator">=</span><span class="token string">"tel"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入手机号"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                        <span class="token operator">&lt;</span>tr<span class="token operator">></span>                            <span class="token operator">&lt;</span>td colspan<span class="token operator">=</span><span class="token string">"2"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> id <span class="token operator">=</span> <span class="token string">"btn_sub"</span> value<span class="token operator">=</span><span class="token string">"注册"</span> onclick<span class="token operator">=</span><span class="token string">"getRegister()"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>                           <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string">"rg_right"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>已有账号<span class="token operator">?</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>  <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>立即登录<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token comment" spellcheck="true">// js相关代码 --></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 定义一个全局接口</span>        <span class="token keyword">var</span> port_url<span class="token operator">=</span><span class="token string">"http://localhost:8000/"</span>                <span class="token comment" spellcheck="true">// 定义一个调用post接口的函数</span>        <span class="token keyword">function</span> <span class="token function">post_data</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>post_data<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建一个提交对象</span>        <span class="token keyword">var</span> method<span class="token operator">=</span><span class="token string">"POST"</span>        <span class="token keyword">var</span> xhr<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 预提交数据</span>        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 提交数据</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>post_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">200</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token keyword">function</span> <span class="token function">getRegister</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// 传入变量 是从标签里面的id获取到数据的</span>       <span class="token keyword">var</span> username<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>       <span class="token keyword">var</span> password<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>       <span class="token keyword">var</span> email<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>       <span class="token keyword">var</span> tel<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"tel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    document.write(usename,password)</span>       <span class="token comment" spellcheck="true">// 添加元素到某个标签上面</span>        <span class="token comment" spellcheck="true">//    document.getElementById("usename").innerHTML = userID ;</span>        <span class="token comment" spellcheck="true">//    document.getElementById("password").innerHTML = pwd ;</span>        <span class="token comment" spellcheck="true">//    document.getElementById("email").innerHTML = userID ;</span>        <span class="token comment" spellcheck="true">//    document.getElementById("tel").innerHTML = pwd ;</span>      <span class="token comment" spellcheck="true">// 构造注册json数据</span>       <span class="token keyword">var</span>  register_information<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token string">"username"</span><span class="token punctuation">:</span>username<span class="token punctuation">,</span>          <span class="token string">"password"</span><span class="token punctuation">:</span>password<span class="token punctuation">,</span>          <span class="token string">"email"</span><span class="token punctuation">:</span>email<span class="token punctuation">,</span>          <span class="token string">"tel"</span><span class="token punctuation">:</span>tel             <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 调用函数提交数据</span>      <span class="token keyword">var</span> url<span class="token operator">=</span>port_url<span class="token operator">+</span><span class="token string">"register/"</span>      <span class="token keyword">var</span> res<span class="token operator">=</span><span class="token function">post_data</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>register_information<span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          pass      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token function">getRegister</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 调用是否成功判断</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span> </code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js基础 </tag>
            
            <tag> js基本学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12170.html"/>
      <url>/2021/12170.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker使用</title>
      <link href="/2021/121543906.html"/>
      <url>/2021/121543906.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-手工构建docker镜像"><a href="#1-手工构建docker镜像" class="headerlink" title=" 1. 手工构建docker镜像"></a><code> 1. 手工构建docker镜像</code></h1><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## docker 基础命令 docker run docker commit docker exec </span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 获取镜像</span>docker pull ubuntu <span class="token comment" spellcheck="true"># 获取镜像ubuntu镜像</span><span class="token comment" spellcheck="true">## 创建并自动启动容器</span>docker run -it ubuntu /bin/bash <span class="token comment" spellcheck="true"># 以bash的方式启动容器</span>docker run -it ubuntu  <span class="token comment" spellcheck="true"># 直接以镜像默认命令使用容器</span><span class="token comment" spellcheck="true">## 启动容器</span>docker start <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 关闭容器</span>docker stop <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 重启容器</span>docker restart <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## 导出和导入容器</span><span class="token comment" spellcheck="true"># 导出容器</span>docker <span class="token function">export</span> 1e560fca3906 <span class="token operator">></span> ubuntu.tar<span class="token comment" spellcheck="true"># 导入容器</span><span class="token function">cat</span> docker/ubuntu.tar <span class="token operator">|</span> docker <span class="token function">import</span> - test/ubuntu:v1<span class="token comment" spellcheck="true">## 删除容器</span><span class="token function">cat</span> docker/ubuntu.tar <span class="token operator">|</span> docker <span class="token function">import</span> - test/ubuntu:v1<span class="token comment" spellcheck="true">## 退出容器自动删除容器内容</span>docker run --rm <span class="token operator">&lt;</span>容器 ID or name<span class="token operator">></span><span class="token comment" spellcheck="true">## docker bash运行多个命令方法</span>docker run -itd  --name test150 apache2:v20 /bin/sh -c <span class="token string">'service apache2 start &amp;&amp; /bin/bash'</span></code></pre><h1 id="2-dockerfile构建dokcer镜像"><a href="#2-dockerfile构建dokcer镜像" class="headerlink" title="2. dockerfile构建dokcer镜像"></a><code>2. dockerfile构建dokcer镜像</code></h1><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 注明RUN命令可以有多个,CMD和ENTRYPOINT命令只能有一个</span>FROM nginxRUN <span class="token operator">&lt;</span>命令行命令<span class="token operator">></span> <span class="token comment" spellcheck="true"># &lt;命令行命令> 等同于，在终端操作的 shell 命令。</span>RUN <span class="token punctuation">[</span><span class="token string">"可执行文件"</span>, <span class="token string">"参数1"</span>, <span class="token string">"参数2"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 例如：RUN ["./test.php", "dev", "offline"] 等价于 RUN ./test.php dev offline</span><span class="token comment" spellcheck="true">## CMD和ENTRYPOINT命令融合写法</span>ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"nginx"</span>, <span class="token string">"-c"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 定参</span>CMD <span class="token punctuation">[</span><span class="token string">"/etc/nginx/nginx.conf"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 变参 </span><span class="token comment" spellcheck="true">## VOLUME匿名挂载 https://www.jianshu.com/p/738a6455b804</span>VOLUME <span class="token punctuation">[</span><span class="token string">"&lt;路径1>"</span>, <span class="token string">"&lt;路径2>"</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>VOLUME <span class="token operator">&lt;</span>路径<span class="token operator">></span><span class="token comment" spellcheck="true">## CMD 用法</span>CMD <span class="token punctuation">[</span> <span class="token string">"/bin/bash"</span> ,<span class="token string">"/start.sh"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 在容器里/目录下写上start.sh脚本，脚本的最后一行需要加上/bin/bash 因为# docker只运行在pid为1的状态下 所有需要开启一个bash</span>CMD /etc/init.d/apache2 start <span class="token operator">&amp;&amp;</span> /bin/bash</code></pre><h1 id="2-docker-compose的使用"><a href="#2-docker-compose的使用" class="headerlink" title="2. docker-compose的使用"></a><code>2. docker-compose的使用</code></h1><pre><code>待写</code></pre>]]></content>
      
      
      <categories>
          
          <category> dokcer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker基础 </tag>
            
            <tag> docker使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5_detect.py重写</title>
      <link href="/2021/121321986.html"/>
      <url>/2021/121321986.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b8b23d5a7863f7eb66d94d8245cbea8b3bd0beed9f2e43fee9919870349c7db"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5_detect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站域名截图</title>
      <link href="/2021/121340417.html"/>
      <url>/2021/121340417.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ff54e745a3bff0891acba04b7c1a2b486a01da90dff1b21d4b5df23ea2db8543">14f2d733a805bc4143cc4d1dcd33bd084d4f8db9ce8e34eec74a2a3fb7173124e2296ab53da0fa3f435dc3090a6dbf31f0c1148df75f8d9bbce5e3517a8a89ae7b6b35faae35419d329d54d133b9766cd7666a71f70810346e8ed47507daf05c682bbb09aa29c35bdb1be98ef48592f06539ef1f850081193e546a75a37d1ebf9fd09563d6c033faa3101e569a671d1fd6d06586cf8f165259e54536684f8bec116bae355e6f1ebf491c9eabc39cc1f4dcb5d1bf807e32f10e2f6fb4cf12d2b8e6d3b99dfe481240c97ba6643a03576187c20e11eb6537cae59508388789cd5f66b619bfd1e0852a23cf5cb9fc09f9fa67ced30fd9de2ac536c205af4694c6461d082546b714ce5d24a8c63c3b6e7bfc229abfd515e877727a0b77c0c3933bbf4002bc448d731bae44ca2dc0395f9428e3399ac0702948b99fa985b92366c9669905dfb933cacf3e6bdb80f1663743ec2f93f5d840a04e45cbc4ddc501d523b697992620007b94f8540d25e462072dd41a5985504bc95a7991353a6e9fe9e958a0e40ce0c93765b16df510050f23a52aadd30dcd0650aed18668edd826cfc20da84d249df493428bc153dae7a24bde759b169a277543378f056cbc848731d8797deb9fd6798193d321838173ac026316032aaa93f67ec887d6a9c281b1fae5e3dea2402a0ffa0d4e32faf93e8fad64eb9104bbd6d8f48512ed3931a6579ade1768ed6ca76aaa6d39f31a31a05abadf75104ab5343720071c831ba428870f505170973635af6a0cd35c22ffdf646aa9ae18c82f2714a8394bcf302c3279ab28aca368b9f1b7209688906ee0c49efdb0fe28c8fee6848737f0ae0301565b4758ef3405fbbef4f7e853005f35846bd6b88c83a10527ea9c35b62768e158d1978164af45e211bb7b20ac39262f4932855c177ebecc1759f7bcf405979341ae9c0e3d28acfcebea57836204622bdbc9824d4fe30b2017b9b032f8267a0a34e794442fe5207428efca3d2b86afb5b34388f4b54d449069602f65f72e707cf77986e47e8a8591b46ce74c041a4794610cd1068d3eec9ccba5a2f084665ba897332d49aeb9e1026548ec33972c5e43005f6266105629238bbcb446c7e9f5feb3d6a6eda7ee46db6d9b651e58fcc86e39598f77e2815f22099d6a1626852101d357e31b577d0f58797da7bc365a0a3fde4931ed913087e3eff8e567406b193d14c533825c5ede441d8a64553d62e471475f1a067ae4193b6780fca48bfd96f6aec6409c91980ee54389e49a0095ec8fc481c67d755cf421f862ad6495d6622d2b91b245382d54288e7d5e3a83f5678b7c6709b181c698d8cd0f19d994ebc7b93856487874d5dfc98141063789a67b82a7e6ee14f613ee928a78d9e24406abc6541f32dd5a70886f338c7563ff927708155ee288a9952efc8f6714444c9c52e02932dcdbb3226280a3f9ce20c6990622989da6ec1f63debd7bb3cc6b376e4eabfccf9546a253598822dd839991c39a527eab0c5ecd56ee15c3d0ee061ee7f581a54e376a540a61366d5c045c9d2c0fe2da65f653d96f2226650ae426351ea90618e716a4e691eb90a7b91abd4ffbd85491d1d4a114bb774719ff43a78b1a57b658e37e3addf38e1e9e74378901a9202810bf94ec49ac3a479fc049eae0b2ff845e3737808c3d68b1f6d3434ff9b590a0db371a3e2caad5efd761652097a2af92f633e679c80cff38a574f56ec1d2b32880b5ed0c0280d554f4e94356023ab21f9a755281c06b19cb94115d0e593691b399fe646fe1deac60b8410a016e583ee3e92e3cd475b9323bcb13530d0238feee4717928cfdcb7dfda8c12143d380e3c712f7e32266aeb2eb1360b1394bd9282894c981f992fc2eb880dc1faa6e67ffd25b25b679308030db3f2404246b6ed9705bf0e06624b7678a1d8c91a4f6cf4e3736f5ae0cf9ca5e2606016dbddd9d12b2c4044dc7560077495971c8d60a5ec74f451b614c8255c85d5ee9c350cf092ade96f9b4f9444790ca8dd95d942f8f0674f4b00c0be3bc33efdec3c020d485282513925905f3e8c93f71339491b8ece0c1dc257359d0eb65876264f6820d314911c9aef92c1fd6b3591565fb6697534de6125ae6f0ae602e2c4626533f355e6c98ef32d1168ccaabc6b10f8aebd45c2a693beb453797a5bb1bd5220b49379be5bb586bc08aa52d80b9f8de6fc63e4a8a72a1b3cffc24a80d89216d7dbd4cd77aa04fca2dd10000933b72845f638f652cdda5f39259cbbf2ea3c7bd9a688fc4a9687167d8e37a58bc7b83039fe4866ec52bc3c824a895779670ab807d0cfbbe555e8edd19fb97e85f1505af4467f57d2b3d164ec6c638b5b5a65a734f0a258d358c7aa6913f12e0e2be3860796fd0494f76bd8d5005bdadb9f85e4e7f9a5ddeb8af5b01ed5593b8962cca3f2c2b43076c9715e3c89b07c9ec9c9b6e96199404f6833151809286d413aa3978633ce69b8319f5d46f5894aca693385f978a98ea61e28211ccdd22707e632aef997ec684c6ce952b741a6fd7aedf753acdcbc4ea5f45de1837e16cbc62920951eac24974a7e7b11e8b2e730c7428aa667bfdb734997e0b27a0c04def74c8840104a41197473f5e4eee3188daa5ceb679fee13676592ea35e76bf45cc9d9095e926ea13723efd9a6e402260b06ca74a5bfea6a99a4fd2dd808f862ca571c464e249f878df50a7d86d74dbeb671f3b8c5163667dbd942325d4e203356b6a1aff460c7392b0b5323a5455ca4ce364e03cb93412882160c850544b8db33f8dcb3684c62b948983be77f1f09185dac771f3e66337d47327be010705d63f32188f33beda61cae5e3bed7a3ebbf069e939ba3356f9d3945768853594c2d76cc97235ecb63a0316f807743ff1d8d65af9b0975fc5d488e610b4ebab7fba42ac9368cb03acdee1b5e13981f51b707b4e060241adf58ab234f69b81242f8216b625e013302c4ced67c39270197548924a4a05f804ef32fab7261cf539d9923b189daf1fc0876a7b159e973f1969ae7e51056c11b50162b4df4ca09ca9f23bcd35f38fc4edf7424a2fdfd6e1d9477e9418e9edad8d4a7eb4d79577b85d0ac01c316c19953dae3f60f1b3ba72c7ac228d2f8d6070f6cf2ba3ccab95cf1c5bf15bf77cc7d99fe2a9fdcee5ef5815b0815aa9d0626ee6f91f56d64a8df614aef11f922a501039bc83e5827d7374e83b6010b837a46377a8bb0c367ae40865eda14e8699750db667df71ac07b3af327cecce7b3e37aa5daf1f797c392a76d5e1873a195b97429862749eb191a9ca0caa7078e6a2e6ec29796640625f7a4b2765d33c57ef81bad629626b9ac7bd9cfc8165c4cae46af2dbe449edf77d33e60b94be660872654779e80f6d61d656d04f991d81da696321387d79e09a3ea6bd869053507b2b290b427f92a08e07d8e9573cda73bf4de11f02fdb273b3bc5362707b9ecffeaac54db4c572f8187909078b9ab4190cdfe33b70e9197e297e9d6b6987ad180c121799b95eff68c2ad582c6cdeb95804d729262a94f74b917087d324fd7b0d596c6567c1ed8e7f4f7bb1bb05ab3c890f1fef09ab5891a726472cdd2b23ee1ab7b12522a8429ac12933fde42ecc650b64b1ca13baab06d70ba1546a883acc736ce5ef623d9464aa99e7cef8013a70ac2f3f506570534542261f749eefc58b5c5101cc74fbdceadfa3dda0910b1286d15feec0a7e63d0f1c93a627d2674ca05b26880ff757c41a473318b6ffb39d0e9991ed236a2981c7539e38c814437d3fac449b370ef056b4b4e9e64436d53f40ba48fcb78ce5667311f7d1d534be7383b73976e845199e786d22df7de74d486b5607e4cd5f95a19c29ec96c2bc5c06770f1c38aa78e1c7894707dbc1d7e57de3cdcb82c628243fa25f1e64248548ff42767f3a4491a564caade1f9b592845496df6085afb34ebe7ad97d404cfe1d685aa266a7b51375edfa1f6bb4e9c27af95cf3e5d66a2e4e7a32b6ed37119f7cb3e45106a13d9ab60489d2b74b87bf2cc6723fc17aaf1dfbe17dada686c4842de8f0cd6333e7786d04ed709c103bcd52df1c72f2da2446521e49db6ca89d8afffe77b50f969445aca214f61b37af96a78c27b962d43fc797cb689b9a210fa6643aa87e06d0623b21be3ed0ca265e8afb28b51434b59f25737dd58ebd17a118a3e5efabca0a65cae69328520fbb48857700f3965214f204e2316fbfa92101dfd79c6d9742f08a10b9f08589c003d11e7555e1449c5f66f84919badfb78d69fe4e5549d8d9d511e7cd3bdb71b0a00497d3d33c9a23a3759947ce86ed15341b14a95615c775fd07e53dcda86dfaa0da51bf292892bab6d10ceef0349c6addf9f55df870cb6f86e71400ec04c6664d072036d22c4b716050b3c1a468b39b6a889985d7bd91a2929dfbcd9c21ab69f1bdc97ab859b1fd04bbed48742447bba117da0e2aec384b7847a4b7a3951c27a0ab9e9d963155ba69db545dcfd6673041e98f4645f67bac85b4f3e8f78faa7dab85bc313188e4425612145bf351dd8e6152b48c32e262698c5de96c674f948b9dabc96bf048ad74efa958fa694d948aaa482a69ea652812271915fc658febb8ecd55f7eaf27c8f6182736a28ca0ca9a7fa64789f2ed9904541c0d6f61c87c33a6793db7ced6f12a759d634b48caf7557e217b505f416ef0c43530ec4cfd775c74eb084f99ea8ed3beacbac65c40523bdf7699352d273e9fefd8f5a2bee4930097a8ea4a9431031a74037575c1539cdf606a35360465f53934ff4db4a4f454d1ba8f2060be24c6d8a3dd4932298c634993b67cdaa08969e141a20a33de748d43ab0d3736aba61e04766122fa3fe4fa7b1af45713200ae03c50d9fe42c0fb592f7c5e71c2a250e43f6aa7c58db0b52844184e44c3e172643212676a1f54d611452bdd52585e0fe6a7fc73168f9e7ce9e368e0fedeb88351d2424a1561e714bf7e831c99ec9f1cf3159ce0e6ef746f2474e1cf24cc1f92091fb0608bcaccc7bfe9e21b039782f966a58ea6f14c554502afe2ee37fe2add202a0f428e329f32ce7feaa47b0339b250bdccbca6a848f0595be8d89a074fba32527d1f85b97d6ff114448291555911494a9b8d2e426bc952902d9f97eb9247ccfe8c256b099c3248f90354051dfd0d1488b63765990cbf9a849edd11f85fcbaf8d91df3d40d83bd015e146b5f72ca93b47f5d717d3efcde96621faa8a087e3ff10e2fafb25b1c572e26c6f6812df5bc040bae1ce990d73ac1d0aac0d5c4618fae8d3285387a04347aae17bef5c5258797518c744bb9bed0df1fb043d0c8685b911c8e5e6eee7429a2e2bb6f2db52ca2f22a1be9741aacac06e61a0889c5d82f289ff4f7ce532266f52d6524897069cb4a63eef608a6ebfed3e77d3decd988108d59cd7c64677e2dfd57dc55aec5b8671db39cb099943e9a463875224b1c01becf447282133b574cb37abf7b62102645969e7254dcdac187d0b6eb7d4fd1031b4f3a3f7e6a08d900600f88d9280576f2156bc47d7dbb8aa9c082a3b49dde3905bca2f3b47ba5d5646643fc06255a95e62f8d3e4aa4841a56a7142a49ef9718684fa2af2c29a0f35b0af02ea8fa4a1b518e671e89fb5e8d11ef91ee63e430ed4feb2047a3c974b2084f15bc11375348bc657dadf390add53fd006fb7e98f4dfd33e312cabdba92654ff3b59db393bbc8e287b8c3cb562bdf9c240ee37e9108c36171b10c59f4c28a4e148439e86a9ae38de0ca413ce9f74fab55f92771c0de5b8a0605806d157448845618da04e53621391072be8ff3e729b645ecaa2cf6cefb23cee7a3a256f95f92740c4c9c736d2af63c87cb85823a974500b7fbe68c888efdefeb25482cf03309b15bf57a3938ce295ea7df7912a0d13e3cb3205af2b3cb63e181d3604261a8a3e56d2ce41b2c88c484133f8a8895ab2a25e4721b6a79879031b4effaccde3fcf7dc6fc10b99432ab38460fad89507b1c2ef07b253db7f738a7a60a6058f21f83054fe91c02812f54c6e481f0f20ef4ee6664682c184e2273c289072209eb9d5e00e525e3df2a17a17af30e0ff832efc8161151cd3119397fa93e7371fc6f016558c3bfc69b86aa047544f42aa000aa815b558a414caca43c5c7f92f6d99331a0b570a72a4dbc50f7df854ff1a620ad8feb351aac52bee2121b49ed513ab5bb8c2c42b43a6a71eefe85aa61ab5866f5ecc3f7d0f8e48b2ca185451dc723f2d179ab019a9c77ed5d5a42e0d40fe0c2adae3e1a713eb492a584d494e0c1e0ea32add0b745ff805008278c33f5f4c3602d249a1dbf3c2cbecec6977aa2b2c6cf2fb773b2f040809bbddc346b817fd3f271923660ede656e00dba861f75186d888d72996a43e8ac95ea607673314e669258fb6d07b7028abc6f5a3d6814dd61d6f56c463c462748fc370b32e29f4c03c674bab95d71a5cc2f39d4b8ccccc80fe0e14bcb637b907cf27839bd961aa66c64d05c14f880d5bafa7a29f34669315ac0446a2d7674edc29ca0dc6b92e0e772bdd81222bfc8f71c626a3220c6e60e66dfc78bb49ee1d0687fb98e71eade048d94f91fc4d3e6fa61ab9d42b8f403ebbb268d60418ca0f63cb7d9bcde85fb98e3f729b7a61119157083f16955b173ddc49136f6993bdcceaa84567939f501c2806a2d9f37998f0f18f10ddd7b93d6813a7124e2a94e8b23563b9421a80ba2f6f06b0c5378b34b11b6b434a9ad47c635f4350e2f742b08a6aa62d8a756b9a0149a265627f37b806d09f8acf6970743568dea8ae3ad74e6bdce0e8e566e5af0b3adb4ad00206613cb83fe079f166ab459f36f8f7bea4fb8bacb39b5f7eb0c149777005035afcf61780aa16b7599ccb7caa2de01acc1876a6a27d87ca62cd59f5a3debdf519af61794906df6c87418ebe085eddbdec7bf94ff7dade17c2cc641225d0b35149a86da8a8c08a2951cb607c01609524c384251575d80a0da1eaf0b77ca8851e93c4810a346fa06f0a00db045cffb6dc798a07617c4276fba631de3bda4b7f76bef41aeef35b71324b8659657f118be932881b3730799201537b51b7c543f249458b80542653e4201b4554ffeed168aad3a6c1db1d20965f803ba6999cdc16ccacff5956008e3c2274ad0697039f83e1d9af2ee434d134285881e0d1a7d9c5024818dcfeb8372bcccd4bd5ff54326cf9008da88b120cac64c4eff25e19a7c0b0c82af4adad572b2c7a11ba34a51ac2f097355a509b46610aeed0563c37ada5280999c4c69b97c8f73333fac9b03cc395bcb9544f7b696a53ad85df92965bff92c2bfe5f4b3af7c5138175d40b21592415dca3a5114f4a5c77c2aeec15b12464401d6274e7df1c2e72fb6af9385c1a1ebd91f86575142f21e910337367fac912efa891b98e5e1e729b91bce3e252ef8797fdf50a37d1da7b9d9b56b0bc2fdd9627282a9ed400cc74f08b56274f9254d441ab31efa8bf8c3c68b15fbb09f8cdb65c4966008eb99271253780ad10bd2cb873cc65a4c039dea5ed4e73c41575011ddef48cb6b218dfc355a90989519b091372557e3cb0fc0bd0829b87dcda96f680d3ce7c8be327ea6d9d937f1dd4e155d58fe186765500c42ae0d9463edb465be8c8db8ec946ba1e718db93a5598dce5fdf71ea415daa35d0dedd110fa3b51844b7083f8af87c10418a4869bce2ec6c75f55f215ee4dc1752709afc01566f04bd86824159a20895a316ebb4a336ade3c4c1b8afd1dd11ea632d3600d81e2628dafa5ad1e107111829485258ca0613a2d8ce4026e08feb5fc0ada26b9e8a4b42764bdc9e120322cd59dc3043e7657f9808808203a6bdd3f124979df6a4176e1df22e9cc156e8c26eba6455e8e53dbe9e2bdf5a13c506a83bd5e11867f7a579ddf4d0920fd07a59e2a03fea238cee52d306b3fb8c5e603001dc59b7da10a9d222e6dbf7d6e0d5c168d3412a22ef5d257f1706b351f21ecaec7e07754a93f01cf37733623c5b2f66ca1cfac9b30cedaa60a2a2935869e651148fd67730072f2c8c18b75732c97e1e6ca28f4e3748d51e13b5d7b40cc190cc99c7a9f4c212fd7db0e40575e75cdfbffba8015aef480c62bab13769d2d4f701318dad96aef1734e0e271aa39530c587b349c71de81700cc6f52f9334233ef17934d12260ca1bfc6cf977007cb01cdb73c6427201b480478852a6d35c61340daa818e498d17a759f663fba50791909beddc2a9fd6dd8f88a9c0721b830c08cd502c6964f43c8c07a101c68d1b61e00863ee8c320824e247584564cb783eed69721b734d4cf01a6283e5c24073b5f23f81e885e7d644302d16d94f678b9fcb4f1b3041726a01bef2f9da683f39b8f50c5b5c2ce1d3e9d5894fd46ffff5bbdbc697740f55105cc2c63a7c07fd8522da0f931cb54f7ecfd0690a40d2413f17f34f3cd53e43a08741cdba8ba207f3a7ba3669ae172825a7015971bf18fe8fa3fab205788d33a9e51aca640aa35892d65ba72aed1f899c378c45aacc87a821c133808f4eedc3a2bad23a67d0cb308615e38d09a85936e5425063f77f7a247c0741bf83a083b76c9556b08e880a4b9f57f35da51fee3c96e5f4b7a7c1912af2a4aa4a6a9f3560c8651e85dfa2d7eae820e0619f729877ec4dfb6c072e03cd7a4a259820d3257cdfe71162659919cf2451612ab05eca3d2e44281c1a467822f9cc3c6956c8ff89e2f0f517cea3b75e3f9e7e35e4b86487d6c1742bffdb9f0bc87b60bf311dde25a8b87c768f667b96f2df3800687ab1cdec079884715c64f5ca395418204f69c4a9a96d1a88e361e82f80671849027d93666463bad92eeeb65335589a74a76e55cda006e5284c5ae4438ff72d02c5e2975f66aaa91a7d50ba13ec0066ebbd776bfbba913f5afdfc6cf4dd3ba88bf15f17a7b97220c8b35ab374c41e05f9109050d9813036c3fe2cc577d42b003a1b595edc05f36554840fa8387318939c41ff7631aadac9c072a92fb5ab735020e2273e4fa4fb2df7d24195230cb4ccf9d5fe68364865fdca32c95f557a20480e54f6e26aeab5e43d837b5158d37d993f337cb94718ed81dbf8b23d7b715eeb988cf361fdc945683b054a5ae9b7c6b64cf67995e025b4a28bbf6e39c743e546b650e9e46d29d45cf3763254355127e9751182558df1c16858e5c2b87ae18746f6bbb7313ca86cb5eca86869956045f629cf053b6895cdad91b0ed1588d7b2acad65e6a860fbdd0bf81d626e5b40e783efbf50147722f5bf0ace637dfff3571fd6ff41d15d70150f78c5ce9e570ee42293e2638175c9b4c73022ca5210ba5516a60ff82130b1e8fb3d193889a00731c355e192addc818330c48b71fae5514b72a8d602844ebd504021544ccc31c1f528e5048a1df6d7aeabe981393ddce2f2a09e6b77564bae83894a43322cd17f7799f8d5be72b2006cc6ddff6f03c5814cde8e2d94d2a333dbb8efcf933a1d4782d15bc937c75de09891da9654fbc4f7be2fdeabb2e9f911560910fd12528351bed1d414c1c690eeacd6d54389a64ae75d0cd18e53b1ae03023b97660cdcd533ff5b3beb6a88cf7e88843c92c5f931ff81d163c27c57151875c729693ba2eb52d82c37a658175c15e2b297e7303f2b8d897e5f6aa3d23a14b02409f84b56a7741dec68f64af05be83030addcd5a74d95813ecdf10005e2b48795621093e0329deff7712a77761fef8e9957969a1877faef347b799b17c3834ee51059299a055dd7fedab53a6fed6f42709e5c87ddf895794c87c6ba10d537651ae95abb058bcadf0da4b9daf58dab828634a2803ce594ac37cd08665ffb1c306d30eedea34af22321066c909267209efbd2b94f404a7d5f59853f090828ae4986a64f65db8c05f1af38037b3640209c3d1ef65dccfeda81ee22f5e1a3b8903798f48f791b4666825c28dd3c88d0d10762deaa26cd568ce903a91ebc7a82603cc857d4fbc4ff9a56cd0082af6c5c2cab7fb60f26699c13227f7389d0eb4b25e3b8b962fc9dfab15999eb8eb16ab822a55d1fd392af6c7d9b1c8c6870050695c88373a046016d085d83dd805b29f79524e532f7e587a89cf8e0c5c8c5fc33b3d3858f6a7dd51639ae0f9b4a87c48ee3a36b8a7911d84b182962e7e24b6c967b0f3035bf3056108a94133d463e31cf3d935e24122f156e5a635b0878acb354239578c47688b07175ee008c5810629d321a787af5bf38fedf2fd9c78ea8fc2817c0dee3534c34101acd43ab24bd77819e9fe551c6b0f2277e4f76c40420821148eb950ae62744188de45e6ad15f3f442fc7773401330d7cb08aa5a1d595a257c59e24e9920735b2d9bce3b8e887f073a8b272cbcd140d7681741d9749180aa657707aee926a4a30b5ccb29a96ec0abcb13caa24b98990bd0c873a28cc9793c0e154e5e739a53b7a1df26f1ba1d5ce80f5ecfccd988f8ef5b9072556ab1a4aa9dd51fda1198dd73705c06ddedea93542b8a4b500e7b144126f33e8c62ccdcf42ad936fecc13fbcf260746f34b8f7275e23214bf270a3cc1f2a2a9c6cf3d0b5f9d532b86e55b8e41568a6cbd7a05c1fb6ab7d09435a3f1e1ba6c3dd393130de107fbaaa84c56733ee849f4ce6639ee09f1d2150539278c4fc54bd69ba816f4f86fc94704fd723a7d5bac788983c8eeae3c656a51a294720c6abec172a35996c0e1d9540557c95e11585fb1077f8cac48d26b4e832455e778690bd63a5b46ee061243617e55c3be5caccbbb15184cd9e1d433390e223d2a19d98d94be4de4e311c044e2c380f46b27f8f29bee91ea2147e3db6984411fa22b3579a8fc1a879726c3b58dad6803c6383f0164af7f46cdc71e5c53f097605a7a50e6c66fc6638ebef4683cf8e19501b9249387cc5faf5bc0674b2277bb295498e1992e7d6b9a010bebae1b44b818f678b8c36aa44dbb4a5ea24a80ca18b5eb4b3554c8672b56ae9182f4543f58d5d9ef7682241e3e3109c78dee6e8717afd4eeb3075d2f99de647f50ee3610d5da81f1ae7117931d959543d3c7c5a8a02dfaebedb844deafdddbddd70db28332bd68a5b2518e2554cb32f25c4a3f29a258b5cc4b033aadb9be35b35ed535994211185cbaeff2b34dd4d37fef502e2975c4ac9f6db2a4cac1e65d5f3faf5b1a09f381226648a0d7a55b400c3b612a5b1f5e9f4643114e9827d155fd0eeadd7a8ffc66ff8ad579cddb79ca7578b40c6a5125b968d4063fc30c59142813ae7544eb4e5de2ecc4ccecd1d0393ebbcae2d949748a3e25d302c3843497da01a34602c8fec913c35dbd691bee9df1a9e9533b42cdcd445a2319bbb4e8ef364baad92dfe972526f7dc296336ccb58c5e6216d2238b1ae6f5d03fbfdca820df67d9ce140204259833657a7c0a49f94dcb816e4095952042aaa936d89927c0155e199712bab986d7b66db02153e78946e6b25c5e3b3278defce92ee8113e648d97ee7c62382e73730b2dd62f237f7a0ea9c958e74f7a70ea256ba29736c8172f8f6c52f39f18b283c5592e781ab54ec1ed4cd1e615d734b8521d17f3e106d706a111b4e42af10931a5d0df71616c50ffd39eaa2b7c4f9d87e858cb3369e791f952b010bfdf5ec786c7d0b159f13b337dade0349cee8c459060577a5bc3afc866cb0bc79785da3572af8c9e94767576897f3e154b2c59a48f238c3ce7d89816f04bb1b85cd784a50f5d43d93b08e1a29df18f7afedd4e238179a6aa3c3e9b9becde2316cf49f5e3e6e3f629b800d31baf1669f65bb7c90d2f6aef304ebafef2167e55eb94fb72e646b6b61974b9954e82366745bb27dedf94ea9a659a621680990c1a988b2ba127fffcd6296a82b2f87820444c0cb029726f48460fa2a4dd3c9e198e589db5f832ab884686d28d299429be695457c68bf846ea6ec863ff9b270c060826b4246fe525e7a5b50efe29516751d6eed8fe4aa9d66663bdf40d0e9cf485b97893c40a7103667cec5181ac69ece2d2019a52fba2ab52ce6b347b4242c2bf51c599fb86191de3a9eea256c1d32d7d7fc65e594c9a151ee274c90a377b379955e8e7590e98287a13ee591c66ac15c403e0093947dcee90ddabb95779a563a87b213c449fc232fd968620ce9efd4e06994ed0f26bf671ceb09b0bc9dadd1d70c5d30a0b37800d2730aa6cf60f2de65e1f1c904de9aaa68fc7bcdc0fb9b6ae68e2f592a1008604094b859bb2272cbf7c266119227db4aa566e42dfa6e84616c7b5aba7d6272866aae5a6bae6064c46ee220e78c9ef89f7a034824583545a5c4e6b50f1697bb45c16d7220f9ad68e8b2417ffcf1e1c7075c09de9a6e76874c8a2170da46524ba19cb952b78dff07fa41ecacd3b7acc8db90e3a3da93ea30f929ad52abfc6e731a02e607369b2a0f70a6e1a058e621cd78d7134f703ecf63bb1f5df18a5e327e0f58343ea4550e2ac2f2bafcfe3648d22a8133da9ad44c50d98a068c9af5b9ee85162c461f431cd50e61c10777338411b842583d8be36f4749c6a42daa4ca67112321f57e417f95fb3cb17e14f2fc77b6bab7dfa02abf37ed1607f5fce7e92467b1a86b5178b957e6086baaf1423c4423359ba35c5f19e42fe452c18a2dc5c843345439133407eab39ec59cef09582ca6631a0eb85be96457953161bbb51d6c3bf350145520de61a8b28d3e9c14aba82e9d6bf165ec3f5e884c14b00b97b7d28310b70693957135dd2d868c465c8395bf8dfa2ddaabd8d1940b3a13d660804387b1bae72798d174f4038e78c690c9ececebe46e7e9a007a9ba02adb5641c4a9d581abb9e5884a1aadfd51ab36f097e8ad7fb088a135ee489360bbbd4daa451f0f489b332d62bc366e385dded101193dff15ae0d18d5080d43dd3db8878fe1239cd56d07bef1ae1fe22b30d51e296128c409b042eff31679e15c20d88d9aec7e894238286a6bd97a45b1b257524199f4657ad5436addeb6215d864c0087e97b0c513a6bf363aa957d4222fbee63edee7bdf3dcf242d3e679e5c6319fe8810cfe2b5f72dc2852d06df30725603c7599e7a8edc46f3877881fb3e1022646f43bfa1bdb1bc4219de9da25862a873250c4954dd660e05f074767f4306df28dbd52205981e89dffc403c5722457b489a39093d7dc5c1bc5857bf9541df46c5a371d4ae1d9fba99fe2d269850abbf158dcb3729a5f3dfdff33d110cb0a2722b3dc51f567acba150dd5794ea59ded0843a1b9b3477edeb9e22ec1eacf7a5ce441083d224ca573becd1b4af1569a7cbb56b874412ee9ef7a427b046acde9de3e659145b5150684c074dcb48d263ea3cc246df15228848f71449976568368fd6c299ab98f099bfa452a438652535fa67c7d67c8eef4bf0000d31b6be6104139efb0d09facbe78bf08f500eaaf329a81731045d0dbb9a3db52917c6e94075a290d53a89d98e792af8fb95aa45dd2669205f5a76da1754281c6acd28dd97ebc4e0cfc7d67b918793cee3cb53d5f1daea813de296adf935c776aade60192c106e2689bf75b9e7f9fa97616b1c3555c7c291f2cec05284b85454440072b0445f0f9dbca1a9b930ffb9bd8ac3bf26ea5e26eef5a58f54fcddecedbcda9192b01ecf296ed722fe4e9c094c22df7bb1545a3085c35ffddadb2a0cd30bd743ded10db8b7c7256dcdd13947778b9ac749d6b7caf99fe33d0dee49eef66d0fae10f2f9472da413b2ce61e94165d8dada918dbdc95e33c8a55ac756cb13c499529f4baaec3251908f8b112820bea8da5d3d4b47f70f0cc87e477138f535d71a36d43fb4736b9a8771ec9a39d83efc72801b36486f67400f792ddc6c61cf2136f0abbb67d5165eef436b4a5cc3ac021c561b6716d6e108b54f1e3b19881758c52883e046f72eaf61de430c10c2ae6dedc76bf88e3871d770b853b0d9aacf7138bdba22697a161aa150e41f7e9ea7235973cbcdbe5b50ad60fccf88eeb12f509c7d4a28b6e399e9aa1398a14acb0c36ea26b71ecccf20f8ec34e19fbe5ebeb72829086aa48f34899f1b106123659defa4a0df61b36e326f4dc86bc07756547dcdf9e5d2006e96daa9c9ff56cc804ee9a74f23db7a12c822395ff1d9181d15bcbd8c96fc49aa4071d7e9ee027875bc1702a97fc075df753d075855c6e89f5e336c04d306ffedd69558cccd36f1f5ded5554d302aa9693c8beb78636cd3ddbb941c52b54ed31ed7daf7d1500173e83a116611ed8d49178b45b61240773c2f99efd50fb6053afc20d2d02f936a69fe70eb90672d97fa604e55f92c84aeecc747b91969c5a63bb99fa897a8c653d166de3ad663da7ff096811638e298758be1ec452aaabf6da75f33e5a20640fc884df4631a38068365b98f77e7aa6a135464789722abb8ef9662da1e981434fe20c9c718bfe0fe324bff8e3f82644153cff796a694ce27a56a31bdfecdddf27a05b79a9ba12344e0d1b8c75029b2d970d069059073509e108f8ec127abfea218daeae2e8e9eb75c0c868b37d736236056a06db999d82f0731206bd48ebdec5fa4fb5905a7fa543716a78cfc7a144648de6dffbeaf167a8d994760796c49001d45a65e116a9709a7939f6cdc62227fc61a6d6236f8bf822929c7c9bb053e7275036d8e56a7eff4188ebcb367d226056e50e30eddc9d4622926069f78748c7d575269e50269268fddea615c7e5b9b83ae6c6be1ff509ff68314207a59e49757a214388a4da4244b0fce23311e7a8ba09f03a8a79b386706690918ae4bffa6b98d8aa6116ac994baab82f05f7a8bcf5a81a675a5fc291b620deac9374d376fa35f34928b9e1587bfb1303f1664215faba4a03b6e326c6eef5090e26c4e3566cbce033e4e09b4c13d0aaef6fda09e2aa72361825420e61154641850ab2ebea893d9ff55dacf5237361dd67320dfa82aeb04da7f79979ccac7afec29ccd85a0004b9ff1c819f11591ed928faaf41ba21cf050a1252c4b1d604e29f15e147b57fd0e983b6196f078b0d4654a54020b434673f4a769529edd9fbddc6e325c479eb969c9889b004e0ba5348eddf79394fc4d34766980a8e2d5de8f4ee813322372f26faf6b3cddaff5365ec158644efcec9380e8683b539ada5d46b0df058577903068b1194e55e7b432d18b45de10d4f3a89a3b8bd65abc8b94ebd0f485f030c7c0deba4829dafeb91b6c857aecff73ca22dab2e582a2fb9cea12539e7328932699c5b7a34f6a78f0210a4d6c923dacc768d660c940dfbc4181b7d1437e0c0fc15c9ee4836ae48573e9b88d442348d9cbeb4b5e44a03cb530fad39ebf337a9a8070e956bbcb62cc25daffb43609f533d071fb6b0381cefadbc7988d47b47c53c54e989e3be422186fe0cb12e3e5132323d4834eb48db47e11ca43ca3bd5c15e018d1444f3f0c4835abdf2190223f423fbc1974807bbc419241342f06818b1f34347219a0d8df445c7cd6b1991e7af0fd60027bd9ad61c040c56fcc9c206413a005c38f7dd572056160e837c9db59565c7d684ed8d27ce8e64523dd3cec76a4463013485d02e5b720d0cb4f0780bf8f655f68b9bd8bf7237f543a2da3dc5787eee0f937c839c9a48d081cf375b5d82b525ed528831050cc6b25bfa0125bd3621c5451c69a04fd9538b9d9b0e27a7f43ebe51586d0b600a92213dceef49a7b343118d6bd67e8fb2314e9587e2cf65349d1a1905a89c5f10e89afd5a37ca4365f6fd3eba1e0b062c16cc3a5325427ce4679fe76a524663dadd874217ca550a0cc9cba10c7ccaf36e299ea7ce8d4f55387f720aeacc844fe5321303a7f74cc3b1d79946f09f0f09df9954da4ab5c42e1ef47cd8086b0063e6301cc3deca073a769130ff74e1d0f3752567d914837b2d4817588aa4dee330b02085ea7c644f05433cafcc43ced6970f5628c773da77edae7824620788315241e843bc6a55e25ae71e27403f2d5ac4dba3ee777b6dac2dc1f51cc44cbcff2e232143c744622685a1880f23cb7fd30cedaf4317cbccf1e0a2f34e5aa58149f544124cd1131582251a3a27660c8753ec7172527a6e75db2455d977f665cffcf7a10d9e5fd4709f44799da8483974791d5a4d4de0478af2577cdad415a008446dc18fd3a075225d93199a98a67aaac71d9ca98b2080e611d663428548ddf37fe978652db8e73e3b3d2b719714ea15b2deb7acb02af3968ca40f54a05d15cae9c0f1b74305dc81551fc89502149503a7b312bf10546d534550358c6cba3d0d96cd1f0c4843e8dda85414d7a47300eda6181c5012dc7fc552f0428e3b5f3fea9f1397b1c94ea0817ee34025869ed36a4ed8277bce70aabffc324e4d6bb37ea396224bb3e2a63d8cd32313c58839b65725b7ec965759c07d96c74c84ffab6df52476976f834bffef32bf2f39ecba18fd8360804ef393626bd6c595f5820588dfe473f1e99a34cc3c8626df2815d0ac9983380c7caaa6e8ce06c261b99b13b187567565b249451fb764b18fffbad706541ae44c4af173f15acf8c39496cae02eb5c7937391e3d880a79de0d32026033093ecab033d18043798390a85cfff16b7738e103c4cec586cd83c8ee4c5b6cc8bbe28ec9a3fee5842a8b2a9d61aaf58cbd53b1d8c2ee82cf198b31b8dc1ad5419e23294d6ffc96be5a78f55db2c01cc5aaca82a104337496862c42a7c787ee9983f28ca32f90ba1981ba1edcc1aa5901ed8257b6abc5f0051375bad58636bfb8b3bd3ec3afd77d104052f98c4b6c027e4cb579fbc7126bd65d5773acfa36d898a217809904fb107c515161a3195eecea8a44a95869efe4ee8632e5fa77d6b2dfd444e431f3a3dff2385aad7cae3fc86cfc311a9989b13d3b3b45efe9b104e5f1effe500e1c647cb496f700c215c8e764a3d2b05bb1b4b54654593ebfceb3bcaf8a55660644245f957997ad37cec27a3fda909e8fb4275be01b4d819cd90db6fe8f298bcd7aeb16d5eadce0e88c31f91434494b63997660ea3ce1b5c79a9dcb96e98043d242d322dcb171b165a9eafbe57d809c2b28ff80dd0a9fa788c6fef9ac7f08b48773bde1a9e8e87ff3cd2d69802fe6096080c5f7f7a2d29727de166d4bb55ff593f7480eb72e1d2bb95bf9baa6c4a3998911b1db29f43f25d7400eb6b5e4e80e83b29e8574a04d22e9cb93d30a2184dc119e87221f45e4f1bd2a938f7b4efaafdfb2f945fc9995d20eee97dc842b57e2e16452ead475a0bcde50b8d9a873d6673c8044d4cdf41d83248ebc473d4cef8b65ba6b34ff151f52caa0da9c53ee04d0dbf7238606c6ca870cef051a73efbc36042dfc6fcf792ae99819b418ad139bec752d7f5fedc7fde520e52592815fb744b580d12b5b929288bfb5158d2d0ae7c76a60889ba7e42d408c03011e0823081aaed4774fe9cea59b37cd734a77e057c72f15da96396b6153a23bbecb32593cc2daeb2637fa91cda698745aee7934efdc93cef758c02e330783be37ffd2280d4c7d90d3dfc51327e521b85193abfdf21370ed63623b5893545d562b4f24608986e46a8ebbacc837d0e5c804f4cf39705552358d13989b0276d21eef0f22e72161bd3bf48d3e4bbde1e7182bc289ce21797a34a3e8840859bf2067a17c19cefdf854046345aef70f07c99a32e88798a417809322d4d35162f4ff0e4552079644ace811ab1bd387d91a5626bdfa271c0b6200a407f50677cce6fdacdfa7547d72549d55ab9bfe8760a6c3828c9f3d8d8537dbd6a568b6b9a6d5adfe30580b37daa06e621019683c537a28540177ead41994c064c7bb27cc12016eefcfd9ab6501cdc6e12440a2cf7253484faf13aae315d4a2b2ce8162a800ee1378b318ece6802f937292215756a14f36773ce0a22038a453d335e61dac49db763b574b3e1e0bf87dd327f7f4665287f075838e58a213ce64bf5a478df7b21806350792a228a46f30f86d3d0477eb9415fef0b81b56161cfdf825e92cb8e2a4da4f431d63121b1d7c698b78ecd4500e34c79179a9a01d4e85c4ec9746095fc461ec95100e7dd3fa4e4171d1879f28c091ea3640eb048fee1b69bae3ba5341e9a276b9265a28fdf98bf290fdc32ac66e6ba4ca387bc7e5223072aae1fb802ebb67f032d266521d3375b65d4c855ff691e5b8a4b28e17ed64e5cc9328dfc692f2419bd7c81bfc8197497b6e531060f6780930fb6937dd1b2e78cb393df26ebf883f3a2c4a5f0adbab39cd52c6a0bc89c0163ae5441817119b8309e1b2993dbc653d33165de47991c881b761483dcbdaa012be547a6224c3143cc0970a9402c49f6c4d906b9df4075bf4cbc3d4c1e2e2b55d0029636beab752ba59254850a84a752cdfacee11bdae741332887a32a5443855273f643faaec695b09492a8e419ffd579da4f4ff0824a54028377e5381b32b2d3d125c6f7b253436d511b971a9812629c395d9c76ccc93ae2b70dadc9d0ee8930bf0eb1e16605328f8c1aa9a300a03d76ef871dd5d49517bac9d0d04b0d4a568c6be83af72827adc31dd094af42ada720ac7521dc9c8aa7221ecae56614df8235568c27cdc227062f4e0fa636fc418f5218b0ecc641e6a569831be4ce5f2d104436fffee141b8db622738ea70aab939e25b25678f8f4e666df2599446b439ca28df18efc7475c425de611b4d4af4786906d6664c77fb774e4c41a1cca473c78ada94023344ed26f14601b180bbc69c129d613ecba659f272c917af087b99ff72fc8ccbfefb9a4d3ee9c8ea16d3d61c5038fd63251230af20e428443bdbb0246ddc1b6ff33f0333f325fe3b7bfa39b8892ae7d2869e85aa3b223f3ad278c17527d78188cda487b45c91b9230efc97c4ea220f7d4267e6e52958dcad6853f94852c1b0b08a4f989adfeb7c322de03ce58db22b17b6f11956394fe9c38de271f8aec77a172c45cd9ac4961340cd3b80e6634bd8f8c0a652fff7d2591fa9536c36e0a25fcb870d0c1fdf20f92772d23595c58bf0a7619026103a548da8dc227458f9b18f197d68e0893784cc755df7cfdac85310df7dff1d77ddf9f56e7d96527b2dc869f50cbd9196b8a7494a3c51597dec224f2a04fc561c99e3b1f12bd5454169ca198efb235bcc564baa44cdec6b3cbd111579e0e08199fd98abc5f1edf20ce5ad02f925749d606755a3a43a67a9c445d9d6851e4db28d8a20671e4cf4d55c50bb6f4f8d7da52c1910161dd375e1e14574d6a138dac068482f2779cd52b94e4fdc65ee9569c064b998df6b96f5d4e0c20f4e76547c65ba3c7944221cc1aafe95cc3951f99c36c624dbea6c42f6a7c7520732215b3792c12cdfe3728f21e76f74eafa86d38280e83f404c70b463302c65f7ef17243a2728bfae56f582baac9bb99e0c84baa6ea9836e217dc4551cef457093d78104661444d536f4ac30f5c89dbb3845f42e5f92a8671d07f60bbba6023d364bb056caeecfab627a2b09203d33a3781e387e7f32872fc0d43b640a0860f92819158d2f40245d7c2e7abd98a4263696d38f092286837db7f21b4c9fbd823b4c853776b7043f73231a772e0846a50188c9caa96a7c118de541b3509927432649a1c680d4add06e9bbd83524a24cf4dc35870a90d0cb638ac9cf47b4a7d05c8565d526c735b999b73ac6e430129db7c1d4cd181b07ddac989fe3b6ec532e5ac71acf629d1aecfd1da25e9277f2fc1cbd19ba709d73a313a18558d51afa2de2a45659f17ee2e8ca180d6bc2b16b6fd6d6f629421160291553bc2be8d7bf9cb529e142dbeaff9c0c7388db031ad16cd5eb1ccd7c8617207f49ab796af02dd4191df63c1a9eafc70e65fe95b35eecd7e9cda3a21d39c045b39972daa10b97aaa560a055747b2718c5f873fee51c08d38d970bab7d124b2c9eba54046f7da2ac051a2e65b7720b480e3fa3c104dadf374eb078cb99027efbd0b93a133cf9cd82e0b9006735e59d82290e227637dc21beb034e6ad2887d36769344000173fd156014ce21936016dcac8994d03cef707b8abfce6d9d9efb954b217d6cc5a262d9e8fa0dc26a670d0ba5d0d2e0a14dac806f9ef9dd736c520aad3540fd9d2259ec03fb7baf39d7f822230369af5a5ed4118a5b4f46a3e0875391f69f3d18543e7fc3f83f6aef0bb381c5b3dbeb3951038cd4fc568fdcfebf2191f9f5eefb0013cb392404fdf7ca33da1a979eec8d583e017dfc8828d1623edb9965708666789533857fb515daae9bfe09961d2b478ba5deacc144bc1f003e71cacf6c8970643bce98215e57f0d5ed8e4bfbcc6dd948d6ad5d0c56ba875310b20e785a3bddaf3f2d936d46532120279058be120c65d121a943a5978f80cad72c5a9d175d913061ae5df487740fd48dda007ff0b70fcc2ed8d28c330bf88e9d28319fdb919478759c518edaa4e07e8414faf4d5f21048e3b55c65f6aca2fc1c67c294f2f5f3b7f3a5dede4b9821599a60d5e184f24cf94d54abe7d841f56a0ff6c3649c8502fb12eca0361ec71a3aadee19b3ede5cf56f542a1cfe3ba6ea6dc791498ba85cb52bee55b5dd710051fb62e7392c24ae51dd019d830162a81041739da50cabc3f1100497636e627904a643319120db86062394fb135a420e4212ec96c545ded7b698d8e9160db0fa7b199ec85241277c72e3bb2b3e80768a719744c5d5d8835d90d403e2598173113cca93b524f4dfd11dd3ab2fb7bede4a8ca3567b59937db13cb9a0b49b5c869ce9c2cfe552b7b790fbc59fb5b6e3f02dbe354184c3e03bbf877ce730b7eb150accec4bf9f3f3e5b1370c9208dc2d73c67f28f2bb4f969dde952b03de93f2e5dbf2030f4e96875a968e32a3635db7d0eb5fdf86d62a90571be083078b2ce816b3d787a17bf35bee93b981a948727c841b0d7eebe9f6ceff26f8ebd6a0a1f1ddf747c7839e11acaf2d9e7ce3d2fe75fe52c238d03edbea788309df25ff7d5249e1bef3a399912b69d2614e953c67960fa9118ed69573ed502971240b9601ea35eee4119a2570dedf60e0b286e01d9cb37c0932fdf4f3462e377075b689ceb07d8a333119cdcaed2a5ff1baf3ace8138f81cb026742d2a6742ad2f589ac5c3b1511139f29dcd0775239c9d2ff63bce1a6ba64871d8dd487a405df4dd6245fc55bd0ab943c69ca2cc405da7ff07f3f0165ee0482086b419063bfada1e50e4fc336bad02098ec1509e977687733ac497935faf44446e72dda90ec2082ec88562e3ca27f12b3a485ed0cbf7f6d91c0de67a308d429aa83b5f063c915e54a46ddb775979fb1d2dfc7ed9bbc86bfe394914b8ea04e4dd306e5e30419bd9996ff606d4f0dc07e1e3c40c0ac4e0021d387c306f6d71333087bd906b061809aae68d50e5e71073264c8f59aaf4f9de7a9a91fa543894555bc865505adbb4e87faa712cdaef957b982db0a149e22297a66f62a4692c2fedc59acb29ce6ebb11dd90b1d62be0eca9aa329fe3f89ed002e90a51d66aa658bf2e5ece6faae26766218757f61b0a604e2adc88e6182af4c57522b0afbff1bf183cef5ce5c05c929e9f01f97655bd1f257ed804a363e07513923fe864afab49b11589e1f3e3ba7632385e5b018e34772da386da0f810429c4ac161f5c63852f0c33f8c11d08c810aacd5e501e76639695a0efd4c05f54bd48a0b8fd62a85dd128484bb6715533a70867539be6a748dc86479b14ff62138b6bf5b7de5288f89dd8fdf1ddc658e28637fe82a81fd6b37347b22cb2f17b43eb7bccb3d6e2fa55b49bf06b0ec7b3b5fb8e381dc5728dd080f04e3a377341a0293f43c757e2c64e0eac0fced417763a01916c0695eecdf8f2bb0f402c5a301420e039b8402382b3af2be3807f726351d64fbf149de406b484c9b210e3ffa28550b2834243197c3c837d126cfd8ac69615383522ffd4eef671d7d4851022b95c0ca73452071207ae23d0c7344c69bf08d260acb4438af644aecd7162797ff699a116e97455fae9612adeb155a3acccb390c9cf5e5decdc24e941f079322ce762ccefb76d66016151754f9607ac5e550600712d96cbbc7772244ead3bfca88897f318422412e47649e6fdd4f792c635dddd4c2fa40fd658a6571dab1bb07f63fa10b110b94d6b95d967ff0273a62e8013f16586a34298275c35c6087e5b469a7d8a34d10d78f14cd31ee27ea5d3454f32069b6c7e1c8522db3b6b92c2a947162699141163b9c586f5f713ef1d995e14050f04d0f92813e864195e848f3931074e5eb42d9952d01a63e32297292d25d35fb33a8b4283e491a5dc2c128ccc5ab9d8f3cc4d3d54a1987e2794e16b970c21c30d861e23a0740b2d0a41191be5c3c6762b00c3e8f1d54d42926a64154693d93e9c679bc755d8a5922c7af8f9701a9427a578416f0c7f9a89fec1f48d6236734c9cf39b537f5d77ecbfbc7a67bc8aa3509b62712ec3303c3701b450a81a6b5a33f7e243b335c15be1b41ccaaf656782118dae42590588fb84d94dd480bc4989346d5ae220126ad6d3da64916186af003186093d267ed3a6353359c3bc472144c32743998163aad807f02380c0583ce1ec0ebed58b99c0f25de46c2d41d08eeb160bcb3320cbf55599381bdc5cbfe1e370c4659c6816bff31a3913f3d464ad83bffb4c37c9f1950cd28e5f76659a6aff4ba4effd50a5ba3549901f8582dc90e0a00333f09f12ca91fd0aa9020390c43056b0d399884513b5632d096f24a254f3e487bb11cec75d7de22687d476d760ca92d0e6436cddb2af066201760b775d02e440b539da02616c12203a9cb5d27599d8a3ea8655e0246dc00e1ef907d29a964ac85008dd1eb9bd71713ae00fe95a8ac11a231fb2750d0ade62d3115785bb8e64f3bd7282e74f9c37f4dee36035396603a4c7690e233957dcabcdef508d4ede89d2d3df51569e05ad0887cba8365d97b0342ce3c88477bccdf32f6dbbfca205eb102876618374656c09ed82de15dc2d70ab5f933d92d45f05f57279745e58c3b4a5e75ce804cd8ad224b0605fed3c238b25536ad84bff75fef319459f4f3203dec981d6b502a983b404cae90c77d64104f6d4eb73c227798c208d3020598645b53845d26a52842d69b102ec274784473be718a9e79f083fc368242cbffd133c22b89ca3e7074dd11ca4b002961444bf62b556dc530a6fe54a3c9e4525e558c6e25e37c82d796e0d762874eb15443a74be9973952e6156780f7d742abdd742bc2a234de12057292c0f29f7b15d90aff2a84a0a3c92b6d140bcaa71312801257ec8aa05bbc3ab210871fb7e349440ca8728cd7b99f098838c0dc94f6f94402f49773019dbcff9a92b97004dbed4ef0bb7402cf8aaa241995134ff742357c5a67051693e98089197ea6e1cc321b7b83fc3218eacd5b3907e35cd73a5aeb19504e80a6978826af20d956aea140524ec16b67acceeab9ee7f6b41c4fa76593b51706ddd20f1f95bffe30995e141b114952a9e877b128916e2c189718e97985cef6614457c48eb011aecae37bed29d6f0c6d1041438b091dcbc96378c5807a3cd1d76db4a424ca4811d6821710c33649385c0873ea7d3d106ea3e1e8a5271ff1e8b8e9a32c00f274ae673328134a4b67e2ba511286ed3413a97dcff8901fee610356821b11916338b0d7c8d8da279db215ab5f6c16f9bc93a8116a99a78dede1ff3079f0d6bd77ffe66100e210f39b1b667108a4300cb62117c397e0b964675ef4bf943d39ea560f4c29d6f4c9985fe1afeedb906e0167343cd71af900041df816aa2ea0c8546cd8b1e33febbbba3811cb32ca00bb1923beb13e817314639c83691b126ae1b84e04253f6d53aa6fc5de6fd3a346d194708c6f522343089f1db2ba779859f7cf945a778696d4228dc9e79ba1d190371a96ceb95ebc3115bdd77fa0a4314f408c4e78f52bf374269af625a767a9dd056e723f3f32190414fea6f7b324cb8434a06d700db20c2adb4e7eb81c8cb8b4a46090622f061cf10ac3dd14fc1a0bfce7a17a647f10aeade295263fc914a6279ddc5781bc7822f42de27d1fda5966bf3433f619f9887d13375133255758f4642645bfe5bf0fc79a119978f20a2f8ad5d492c6dbfefdf69d9952cba8b19fa0a4c040dd308a942f0a4647576891f1f3fd2f9ab66c92dca26a3a123d4d2b37fefe2c64eeeb84bdd303f564bb79d884a53fb1e6e0622eb8b8d9919498f71a1bda94a42b8559adc9dd44ea051fcdefc8eec183a60f482b4d3faebe7e85bcaa8d2d554fc399b251911019edd8cbdffda15ec8750f51bbe67576c1335bffe505cd4faf88fc4c58145d47cf197103716d46b594db9cb15f73850346a9e74e8740537c58fb6de985f10b932b43dda8656335135664c10b8011c7ec8884f389421e84d4ff540417571beb0605c9e82b4d1e72ebbed62f6437dcdcc3f775c1dd11e016c1a0f4a2aeef0cec5fac70902f5b5c178b12f12bd13bd44a5a67113854b29d5d034df2f38f24ba684f60e4ed0c53cdf8c0aa7c4e102e64564b55772c45c9be5c97f25ca494f9d8b6d14fc153b3089d93e33ce38a7619ed8d6c53c2914456bb0f868eda644ea506da9c4ada52bf0d76f0e7dc5089e9d334fdd4f5f2ceae97e8691f3931df959c49d68a35c3a61621497553512e4c89a1f353a2d34573e4c81494aba87bf5595cf35469754ca32f1b35b5b07d4b7770ddbba3f8c0c61591871a7f3109617fcdd25ad8668efe9a858740259b086b87fe08ea68997bdea6652ad2a62e169b9a742be676776f40c4ffa461d7391b35dafe8e69e1c12f15762a020316028fcb37635c26ec825010f4f8486de85d9a33a9a2a2f607a6484f4a528b74ea950a10ec7112161dd4219f6964b816db9fdb4c71477fe53d5e4ed1842ced88dab59a9777ca58701b3f4e8cb46f8a8bb3adc65e8f651bbe01b80e426a7e570cca5dc094a59b1e6e5747769066485aa60d562209d732491d427ea6401ed4051b1846761224d785365c304898d507aad467d3e16bbc4d0e0b1583ce77d62e12e7fd5242a32edc43657692423f7b0a444c549c6382cb946166c279b7affa57d359725cc347c262f957d0ef17da1c2cff8c3683d006dbf9be627f7803755f024d1cf84c301e69d8a5032f9a428108d51fc9738ca4a7603b899dc4311a5d0430ffdb3e37f4873519199199c1f429a2e0688899870e841d31e850a51d6573b779e957124ab8590bcee6b1267889838d86cb680d29dffa2683953d098e035676dac474f5f9db1650e74f80698ee662711b0351eaf8350a1af219985d2d01b659572738779c3a412381c7d3419614a320c3bbbfeae4d4d9a350240dbe7ff484be4aebf2a5afc17d5c71ee82d58cb9119c8d0d562d9bfb92622b9c32c34544f1018c9496be3ab9bf6b3a0a96ff285830c0e1527baacf676cfa2aff24f2bef5064ee136b9aa6c0e0bcc862b4311ab653afdfadbf530f77431d007149c4f22192c91ddc440e99327371a6c2b9cbfad539c1a37a63b4a74824767e5a5daa9d77e98b837b22f94bcf1c4e592a9e20075cd77c49a2780d8ef3d9371df8833f53feba79bb1d5c14b77c81379ce95fe41253bc9966590cc793ee7f3ce328a55dbacc3d6d00c2048513914c158d60582884debad160054062566a4df5fc1d2352a79c08d43762e1f66a3b5122ee51f0ebd598ee0840b784425daef85195d9d22e0b359e07765a71bc5b74a23dade85045726f5c19cad9baaaf272f26e7068a72fb0445c6a3c40da143550c3fdf83162fa552db052859306c21d72cf09bc798fe284b8319d4a33ba519a6c378532d5f57606816e139cdf22e1515ab019a7af9c70bce185ee0ea1c86e03d077ab54c63461625cafae5db74b2d9298b58d0abac22d2ffe33630bdddc063e4fbe744a671fc64c1b5abd0151e4728c53e462ecb7e5791e39f304bbb7f5806de58b5cbd4d4ff002e4219726916d35c1ca89d4c400a35034074dede485e85947025139c5a4915c984735d273a05f7a39cfba026b1298c9235463d28776ed0ff58eb68825477bf048bffc9af26c6802c82998ae366a3b859b66d91cfa03e033c58e705f0214b58beeaaec5ea9ffc981424cd30f003abf19b3dac169075dbdd8dd54bc261471be2f62df65699b6ec9fb98eb70d2ac6602eabd81f6ee65ae38fc2ec11b99b20c06187bfa92631b817827984f5dbc9030f85ed44f38b24a157a3c072b185aebc1d18d527560e7723b5de0a82980503e437fddfe7bb14a1ee56d87209a7fcbad27b475466f64b39dec1c966b1d2fe3724c70806e31f7298414386e4ec5e36df851af0f88211d3790091450d1fab59abf4774bcb604b91b41f5ee787eeba0961644545ea1b8c6d926a849d853ba72c980576778895c756440c5a66bf559cbdf3299e88e19b3233e8ebdb7d42b2c9e62198357c2c3477f4c7160b1689d02714754201a8c40827113f80f08477177e7318894f25859790449fe74b082bed6c78814bf593df64efaa5bf226305ee4f3b83bcaad8291550e8c812da65f0def5f4b755466bb63b4e0b7801032bcd0581ecf123cdd4e0a89289991f648ad24a206a82e29cc2b45a35875baa75d446db097cee4c49d40cb9d735632482509c5054604128c9291c79e2b6b374385ad0eb6b8cdacb16051b3cc734fe4772a6ddb567681c94bfc42c857705d16646e2398e094601815efea74b1ccdf734d0e7c62979a39f7517b460572747713bb8249c1b2124e6299da5267b346f9c162f44c648c6367cee7e205a005f83ec5326416045701093ee4d471989a14016ba818a74006f777c7435a1233c4a593d2a96603604dfa91625d5bb325da6279e3a0d8a8b7d5b6dce112839cd2afaf690335c0b195bcf7869e825196a7bfd35869a92f7e59bd4833e76e3961299e1a7abbcf8bca7130ef5e9d94d8c1bcc2b5fd0a07d954422ff4f721f418d4599f1f12923899c1518154583ac131182859419403b783ecd853923c0a723ea16e56f7b7d1e54a2c652196293ebdc1630a9534c08bf19a7e15cbd138b07d63cd780a2f12ef513771b6fbb636b121f775fdeb55db8f8efdf51361434834b79c80cb76d98aa4c4c1621dc595dcd9781fc6388d752e5701d913ebbbb23830d7a94075b793367b4bb2f440c16dfade3444a8e0095d3d06cb07702e1b5a9fea21c50c6bdc096598c5a01ec34af04ecb8470b6d7dd93811f0ca4773f47e3a42a1d0e09d4797418d01d1487ae4c80a1c1372c2ea72b60ea87a7f19e8a836b0bc045bbed830d709a2350bf17eb55a0feecad8fa5b116df941ecec17ade576cbd9ad572747b18093337e6785b365704e67f0131013870ad387a29ef94bec7a324d8781ee37c064db0892ce6001bea4e95300d7e1542d6b9c342f26bc1a45b4ff0252bec1efc0e6209ffa4c04420d20f0cad9da03b70cc2b4a577c71d535571d1dd3ec6e408e9aac8b6d411dfc128f423e8930fa477096d0a86305611b1cb1793037ba86f1775d3b6210cf7d2f5aee6337b7023b8b50cbf64a2eff6b00568dbb819d3fad1bb801ef07196c3755b7d7165918daa9a489ff9c138e9664a007e287217d46bd0621c7ff4fbfdf77042deb58f5728bcb93c3a509a8f586064ca8ea1bc0e2159d2561a278c1e3c7cb200e4aa399ab16a0f82d9b0f661e4d738768480f1ce512ff2d4aea712f428bd32a4e9c7fbbe357c62f13595543d8175ee14233d36b60ae7fd66a79e84e21b745952c2215b01b2527c272fff7fec6bcfc1eefeb9e1c6ea9493ea3c0b90ea2782f6b02333a6b990629641abca49ad1184bb46a6bcd2a2b7dc3a2553ee69fd24281d5afb86d1c20376a0f54c16277464babbce4e9204beab986ea220146fa8f8ca3a8c5f4af81573a7cfa40d7ae79f885efe4a27e906691073859b4a68e63f20428950c92f130b37a8fbad5b203acb5cd0201370efc637c40c8dc719b237fdd80d1a616e954ebf4820a51af35128af21be8393bfe54fd80abff8e19632f878ae7de5136dca2f14f7f14f63349cce8cb9015b864768cdbdbb00f08cc4e4f5bf605207f78a4231be4b621bd5ada749d11c42793470adaac6ff13d79b4e37c75932c7ab792e53727f138af7f2ea98c58ea1030dce8a861855731d7d037e1a9b5ab35cfa3fcf1d5d76082012dd47ad026005ef0218fa32b2e8a52977c09f1f8786bad33476fa0e8bbaa38cc8159589343e46ddcb6f42c22733f5c0809a318520cf0ecaa2d258ccd39e8c6bf7f3aebbe1b029686a53f9150ef1da5f52d9b3423393741df66c58efce0418a14475d99188a662ac10144b0eb314d66439de9df106b83d8269eed70c0591e077a785a997bbec8c7331aea1e54b3f53c7bd8470b9525e5bfdff8c46d0961fb55791637a99de870d950da2ac84ad45e64756501c980c038d597ae08b6ce1e479058c5bf56f08afc63bb81607a807cee4b42c15cc771a7d71ddec9a27f2c7780019e3021fce9c7543e1fbf60d0be6da4c79fbe22974c67bddaa311645142458388c3c46a5c3bf656bd8b891f3c30f411b8462facdec8333a398ff6c6716e21fcc3fc42169635d5d7822b08246adeb5061856b88a2ecf9d3d0404df6b4b6bb9f8a608411ab4a46fc3605a0e4eb16aa103fa32e677af94f43c876fbc6623753d24b32f60979764b747757d546401f2d925829f25de26174332f852615f19615988c1755221a5439e5f8d6c40fdb511388b9771154c7dbb9dd0e330f23b5ae8be3826e40ba8cbe2911b871b8684a26fcb364df2952cd21b0069fe1d4ffc26e5bfa42c2b6d2beed782a0fd50394eee1e23a6e9eab7febd48c569fe5a53fb7618e2f5529985dabfbf09a59c1b50f8f7693efec4456de6d48b37bb943730513fd86c8183d1554c17238ce8c652a6386d756193cfe1d3381f3ba642fe2eaa269fada3980cf7c396542d58c67d3f6af18f1426a9e6f14d4c4cdbf1cf281393b3f3d05f7bf32be16ccee063034c19b98b73e257c7405b7d308a29b5859c733421d042bc62503531ba144a4432ec5813f54c45f1c6d85cd19bcf7a7aebb528f49efab74d2c6eb5a3b09f7ac83892180661a778f0c669c76dbe43f3799674f3f6fba3b8ce5aadd9e0833dbc0c20235f0b5c73d077a7f1a319aa7c2cb1cf24c7d646df7cc66deb55da98c1210640a9d6b4d4b669b70312374ddef30a4e7b04e18d4e51a5397c542da89f8cb9efa2d6cc8c75f5048214df72e5dc0947dca9ac218e0fd30c29dab693e80ff3711fc29b1dec13bd37bcb09a622e92b48719273ffd978bb77f6467dab799a3a28727b7f41672280e2605d1e058b582018e91512713ae528ea2ac8d51c12f25d1ae8d177d0a72d7d49f037c3e6658c26813b4ee5b9fa497f4ef0e09112ac627015649b8119be782e873cf78c98f1acf10f61395b06cc174aa5ce0e3040a20ab0e1d701cdbc5a2625283a49f1205642631f178544c8fbf843ad98f97fbc604c657701313af3bdb15397c0f7655caa8eb0690d133f6b52bbeaaf1bbb21156d2f5317d27c22f79b40b24e7a8b746bff726f7388fa991295008365464a1a9b5068d423691c1c4492bf02fdcc23e18ac9aa84b3f135554a044fc2b7b839fb4a674af07581f3e7b931c7944fd364fd3326278726279a9978d60e8b6d24da5929cb8a7d2696b8c9f890d3bd85bfd270105aaec566f3c4de1067491e70058b4b69e57156576377a8a6a90cbf13e386732c60c14d3734099c3cee65c48d891bf49cc1db7785d05fb636cb85b2fcd93c74ed8490d09a09c277382f4e5c6b95ee5f340c0f9e8ae8af15ddb796464c1dcd233b23b0e420896aea54485fff745f6885dba84137a040863cf4dfa96cd4e1e72773c5a97e872c365390ed851f4eb7d7c9bc9d35940cd454b07b713ac63980d2b498f95f5515d42243925f541cecc98da0a5edb9620254c62c252ff0c9747aedf4e64b2375d186d76c9b6b7309c61eb48a14aa43ea1f905e048ba96c49abfd994449db4b7f1d1d228d06c4655e1a2848bfe0a266eb75035eb695260f1985f852f77c7705beb25a8cd42694893cf6af3f94bc6d7a44304855e979a4bd480ce2d6f7b931dfd441cd800a4ee3c8b228c93973c91f21bc460bf40f5fdb94fda8a81a55f6494e1ab3937fa5b5296b3d0c4b9a5da2420e14641ff44bcd27d35ee6a07664a444a2810717a707e519383ec204b92c428a660e02007056cfa404c1b602cb628834080dd329a60be53a2d9cd16aa7c213c6faf6124a389f3f14c83af7f19932089d2f846d63fa1b925c9c488d1b044361b806ddc8ef9e299bdfc17450af4d106efb19cab2e6260410a1b4f8875f4d59af87916872f0ddf14abddadd284dfb3342822acf5161da67728cfedc19ef753aca7c3c00d6649d23e50b622631ec07eb57c8268c21f3d86f43d44bd7c8d3e7196bc00e4e3f53d6c1972ddf453d9cf73d9116a877cc645381b5d35995328a4335bdb056f31a345af904207a5b49f48b77744465e4ece0627c9e775ce75ec5a978eda92144e832c50718a923a6c05be79aa0ae54b177fa0c421c77eb45ea2ed1b66fc64ee1cac45cb14da2a107b299a955700315c17caff4be0cfe304126b01a1e5ef426f47a645c2b3a3415f2205b946c4db4565ad9f63a857b9f74a9039fc75c96dcf5827307cc3fab339f850dd5bb30ea5a0dd7fd76164dede78f42a7885030f99dbf415b0009a148c6ad8dd75b4503bc4a77c5703311b025691845b8463ea5c18be655be183f8350315ba8c0800798b192a04431abd9880b84c19df292d49bee2f3e36ccf10e7dfaaf25b9cc417c2827bbf62421b82223435f64e827f699f09efcf83fed789c009434c7288851ca1c6c9ddc314c71e1174610f1f417e487727492b56c298b21fa8aa4a6ca0da4bf96c921c3eba4ace2bdd88f239f28a6f80441c415ec7a185aeaa79414be12dcadf036c604d01e7327a688d6b83ea7baf15e0b99df29c96846825a577548c524c81ff8759930b32d7c8108f3dbf917a4a0fa2c299cd6953831549fb3ab8e1bbda9b6eb35e40615838ce2296a1c5a49a69a60f96c92121195856cc9d4528d97096b08cab6a0b34add74984113bcc55593332ca9c39a0456ec725715f669a56678e69c9066a280f817f26500b0bcd02c21d057fafbcdd141d2287751c0e82e6faf128db2b0b9d9a2dfb212fe8d8c4edf5cc68c40b7016a2ea45630b5316ebea34e4f557b24393f83864cfef89a1da1ac0e11b0394b2b3cd20861cea3e84cb247976ee299ebc912b68c2b7232769838f032e9b5119022c95e8b7aee70df32b3e9fcf1df94a55d131cdab97048ddd1cd48e47ebae36924ba93d02903594414bc9e3db5e2cae76a33e35d77a78300481ee93ef2bf04c894e8a49425821feb4c7880160df248c70ea7c7440a763389a96bd5be05c0941324872332e689b2c6beb72bdb4ff14e7ad795e5152d748c27568540e0d06d5085b47b2c32c557a193829fff0f2670062796cfe93d078b9edba9ec263f729de6bd115607ff88bb818cd896753db990f64062e50eecb7df2e9c7682759dd43c238d913bdcdd5bdb01802b972a0770998f5a4e00ac2da1be4a7bc92c52c4ecbe2833a9417f6bd0bd3de0aa728bb8f92945da680b25cb3dfa3aeec9c0a71a37944c1f49b2e96342a506cf687a89c3000846a309cdaa37f1da3de89acd95ac47cbbf7c32ddf4066efa7276ed909e3c58c7e5d90a61a4df4d7756f9c285bd2a69ff5798f388beec73a9949cc26cef8566b76cffb31d40a68ecff3bf68d020e0b5d3332e322fd65c2b45b6deb53bf605d0f15408d97044eaa68c25dc3c6b45f0d020bff2403c21da1876c3ab03f1bd16af342fb35dee9087598daebd0e8c9d31d2ab60dc6d3ec56c3bf7168fc46cf0322703c6f3679f871fb97ba1ef3d825e23b1520c0b04191a7decb991975e1c97a6779060ea064e8ed591e4368c599c6ac0ff7232eb4c0d4246ee31b71608a0a4f5411da245301c7d7c70a077729257aa8d9c5916f4decef9e6814cb8311e98528be94bb56b33d2edf8fb426850ea6338f3a59cf8bb5a9fe940e88526ad1c3e0cd49a86fa8d8305c5facc536eca1260e061446b4bc9c0dc6448a8aefcf46ac3a54f8e2bab97977c3f61f48abe5387ad109d8478843dbe21bb5ac71e4a17468ba88c69a4f96f467541c6b9d38b1c0ff6ae6c0a9b5128a31a1146691b89958e16c23f6f28f2b69f797802213a109dc2b16b29f69244d1ea0d08adfb45388459d076c3701c1f34f5666b8979909edd5b63bad47c48ba6a0b3e8a1b825a77d4b4c10d5b3dec73c5a2d438c28deb6e72c9fd21b17b1285fb2f523dd96f32be70d352ec48cfea3acf4bf71f4d5084d7a24103e4539f4c61b60d16b5be68e13d1cb8601bbb11eff6ef2929884da451290990dc3bdeef37c74e4e95dbe1349bf4bc7a858e4f9c5dd781ef95ea87b5b515631f0246b1c14a6240931e8de2ba891a72f7a4149efc8b5fde01a9567f4b308a52e338d10e1c09c5490dc39efbcb93a12220d53cca222aa386e72530e504aa9758d738c50e3bfee6d2e1d1344c40bc965596b69edf4d4d4743a8ba2f32b7891c6030c7bf08af3055bd0f2bdb714518b298b9a70fcc579f72c6b6499b63a101c2ced80a9af2970733c95996ca9d0ba1b28dab9b3ad1f2cd7386d1371064e0f88f9a73b12cea6fc98b258b0663deb5f2b412906274f7fd36ee92c623cbed54cbd94bfd55b8d06e49d2e83df9698178bae639385eda4499b43583a089ff83b3b549c1dacca11c67eeb6726ede3e57ecda7f3f7043e8b3d54cb41bccef950bf679d94c6dff66e7713b5a8883745d96a1bcc6724116c46456495aba351f01f417bb41d1efc6bb88f8bb304920d522ca4eeefa00d7cc28d243919bbfb93e06a2e6579ae95915467e9d8fa4c0e65d6ec78346bb3c159a0f6a45de2c82fd2c7c815a3a7266866c28b3760d1b804da60b9efc96f6760b77dea3e7a66db4f80b3143a7b78c27655f219937d04e11447e5cf3dc9cbf94812e384ac6aa614be8c2b99a2f9ce53e5f71695401bafb4f373b29b4e84c6cff0c02bcad7719a6d496dab7f0fba2162f325412bdcad57aadaf6a69ebda2f3d525021380112041c49e53a1c87c487261b13bfc421ddc0bc9b2bf3867ff5b0e6fd67c4d590c36f140d2d072452af31575a1a875cd818e9bc92e552fd47416a8f8e0ee5ece455bedd8c0372d88b6dafa2a9ae55397eaea047ef7e6ec1ba1528d44b06175388cae0429955c431fcf7a199af511a4e3a0d890378a4515d70acc90df1bd153809c7270408da4152d0c8e68b5e7d6dfe41b32ea81669fbe829a04dd973c595354a49e8a3330c3b9aa5a0d48e56f06451d656c63337207f3b2c2b8589ad56b1d006ab05d7bf799d8aee98099c9e8765f772c9bef489f88d5d79d6c139fa4d58242eae9cc62f9c2336c90a104b2552706d5cdf18e1ef76339f79e6074b12120d7a48aa9424b3a42745a05f33838d4c66fddc930c8eb7745c8f067b18936772ff45d67542ec6571d8e73801078ec66e45f294fea96cae4737dd5723167a7d7c2af2785755af51ac5f41ce820a873dadd04a7e8e4c0adbfd8a342182024218412f9a3333706831ab093d732b68e77cb3a4cd9d8ffc812fa759e16d2eaf469e93aa1f0edf4f32a58ba449d23460d1abffb46d5de3818585a4cd2d61a1e0174c4685c7ac62f76ddd915d6c043f56523e5c3d2b77129b5177c11db80b42f25cd9057ff7a719f054f2f12d8e60d148a5629610473ae59cae786e93bbb859e5e337c047d149e1ba755c8b0dca88073d0090e66be32bf146dbaf7ae0abb9c5dba48de6623310363c2399ef8ca954a0a246ab386dcd959ca2ab5ddd138caa070cb66794139f743186d47c9a3309f5d4e968a9a8d1325f93f5eed71bb7f1eaf47582dd2e20e47ac2d6621437720991c592ac87a458456584bfac98372671eab90ae225dc8c72c0a521b86ad282258120ec861331181363360efd45268550284818311a0f699176a62c1995d9fb5e2a4f7d7f4e45d1d3474ec98c6cadddaa88bed7496436c079e3c57df959123ae215230bcdc79913e1a081099a8c3676ad6f6fe0152245d24ab024aacf3f708ecb6d8b89ae47a67c748f15cd274051c74fdf01c6a8f3836365e41646abb79fe1849653674b2bbd284157572a42ccb3b81311dbbcfa432838f55f554c172edeaedaa9331a9566953684553c2bb08cf67b48ffb153bcbfb8e80a9749bdc8decb6c7bfa858f01da956fd94a103b3061450d4b4dd4a5a366cda06a12014a6ed174177d73f8227b97f5f2c09b92770e0c9126f844e2bc4f59856b83cfdaac6a609e6a326a6707aba9cff7c338777ae8e153ccecdc85600311b3961b7f4d1fa07458a9f61a77cc4539ccb86a52b403d4e582b23188271617141753b03b53c803c1ee0c1403d1404fe6631b43549ca41bd6a853e40b76c1c1569aa7d1604175f3c67f1c9e69b227fc8e8bbdc993ba0bea9b6737f8fb13981d5b8589a17d221c19a5fe23fe1326ef521b11cb88c74e79029e9e55fb985d8c256d7951d20372a525df8a0349ae559a43cd1df852af4136521fc42fc8c3424fd6dd99ad82ec2cd7a7478b2f7081ac5526b6bb3136e8baf91df7239101abc87fc6a9aa1d2e838a00bb6aa0edbc1347700002710c98f6a19188dea363194ece4524ff6366abd99b3a2c0469aa9e56170874cd9034a6463bd2cfb78e71f367ffba7c460520048f4b80ce4bfe3bd2e075a87cf24c89583d4c8ba62cfbc69217739fc9781f0bcffb37172ffd6545b34e1a24a2b3dfd7c82200e5d1b01900c70a9b67e2c667223d8f01c409da3620dc1942d43d0ed59e47371914e97fbc42d87af49f3366edb42515905f89bbd0a9ab53fc4e34a15ec31d36cdea3c4b7d7b3c0bdeb800c25cc3a75515b953fd2e4aef2c78fd692b4d1c5635f19cfec1a532d614f154924b23a8abb92f43e4bc3822d10e17696c1c82b0647c11538f339c9003988344e31bdfb0fc54b86786ffd72c4f282e082b1b0cc7304e564e4f6e31be9759d2dd923adcb81e46f5ebcbd3eae5e9fd0a98ae2462b1fa98f5043772f7b68c4726873e6e69a662f973fc8a200d39e5a695bade92fee4aa95865d723f5875dffe2cb0ea03f8087afa725a6504c283be654e65046bb912715b38c890b91fd9afd7f63e5853c9799d7585a85eaacabaed1c982f712d90a6322dc35f710d92c8b63bfa0d0c14630d07628714e6655b391c2a4df822a08fe42c3ae979a455293ea3355c79f049a233b3ba87cab803e0297decaddd9bce0f7a219107aca13f1820d5caa0969fbf20cb31b6cc351801febe369caa7d460571626a3eced8b913a709bc32780b50c1e721d2540c09da95580d228674a9fa7acfdee2db92f750e8e2b75ab35df9253236dc8e17bdbc63e37d3f750c78a7824abf1d67d1e4512379962015a5dbc6f01686ed68a43b400768db43e253442a6606cbf463b1dc0e2c9d6943ecc6eb896dc3f0ec2f8271916d4b01efc26121ea8e043b67b448ebab985b90c4b136df8aed39db16437a98c17209f00e54e3e9a76b54977ac6ef851491e65edb1c3daa9a15f3bb0f619d0830a14512f90cdf260e4defbd6121435ff5919a9f85b92fe6b268af7bb85927818df022c0e6ef2c1c6a3c1921d8e7d77ea9ca36838bee54326fa17991678767abe9be0d6f4d12a4a4e8540df9d37441a7f845ba8f2223f85bab0ad65dbf1e3873371dbffeae21d5f49e85b259ae5213621b31bc25b98456dc8cd218de2eb043738c5f63a9d202c4d1fa55d438d90b8c835390e1e09f7b40223261386f6b1e5a21da8ee17127268683353e858eea02172597acce9eba578da2fea1b47a909bc02c46030563fcf3ca7ee00b6d6b2e93d284286421283714cf01192ee426b59aa406ea941c1d87dc2b1444f58de38d74abf348aa6635b315e472c0b54d46b1f5de77fa7ee1ced7866f7cabf1b36bfccf1abcb8efa66f87977b16cbac6f717902edcc77ccb0362ddf37ab95ae7e861831554c455ce4a14feefdf2c03d5e0426b0107bbcf0455304dad73375127cdd45b48c31a22d0c2361d3710cc00de96327d4058a88d43a1ea02d76c199de45d8f4efe8e25baa27f3a5b1371ab63ed3aa8fef9198a35af79486f429223949d529a4fc619b2ff1b93303a93d1e159f6c2be8cd778b5e5d52bb6e999902fe10278665d4c450eee9723d140fe5bd8ed50c93f29fb2e35143fd6eb4a6d880902f3d691522f8776cf4610ab357eed4c6135f442095c783ebd7439bc7da28e1112319541f0b15422037ef0df63cb8e6f4505097f3c4ebfa2b6ee41f8566f0e436ca2505063998e547f2698182b8fed33d6f25e8648e58aea21f358ed29c54b3b1f7ad70ff3355506d6b1e9b1b6933a6d0b2392efcf137eb590951504f19fcd41cc8e997f28a4cc8d45821aadf172d54fd6ba0c005f2b855ff0a7252128cd9a3cf2a410d09e371645e386a14735c162312bc8981664367a10bafda6aae23b28e5bed5bd57a2d0115f78a7c7cff48d69bf95bde5a60f53020504077252141038097a041f85f8eaa4ec9c5db7bbca68039357069d9f03bf1b8aa5c5703e31a7f1a099909912579dfa789a25e2da87ba743e9f56f9d5694f440d523649b47ab113433f4618ef0cdd4953ff19697d9cbc7f6c5d6e0bb5329cd1b4763686bdf1cfa6391a5e040720f588b053ad2c1c01cf6f24197aae2ebad353211af112a445127a55c3f83c8e0af4a6c11362b2ab78f4eaa4d4a85c50a046c30cd288c82a0fb8932d16112dcd2582b0aa5d20505e32bd36a8ab1d320d85d3ad8fd501fc320cd86c2a4a33533e7a487815f2a9b992abc66482f9f63775aa1641bbc38b7a6f362262608ce4cc746da9654223412f005575be3817dde4f1febc75944d9d9d5cf0719c66da86cc9a11616c95d6f1cd80e23da20f4e3a565c34d9197fd1b2abe79cb9ba8882ee4f9d1ae98e2c61e8e487cadaab3a0e08bbb0623c1f5e916fca1dbc443e9f12305915cda8196575c703ef8b713f707f3b08f54fa67fa54c7db906da5d39a36bdf733e7049b55fad96310e36227dfa768835307188c0ebfdd63f21754953cccaa2c02617104098d82bbec8113c4d2abebc5d67bead141ea797f1dcc55d0257661ebdf23f4b2ecbb99166c34c946bd6fc26300a78b1094d304ed8b4a86043921576e69f6650c8e91e541014d61b3005a9099a6b2e76c5d6524878473eac7815f38dd709885042d008bcb3375527667400e6d97b8021134df334386f32dd2fe862733811be327317e0d3a8601d54c5811a2663092f1af4fe203865a5f6b1555fa01ecbbd467b9585a5f5ddefd8c24bc2c38b71c04e0243f2a13476da6ef88bffbd2e059b6961837bc3b8fb1878a314415d59e8b806b70593e4c81b0327f99519f155a21e9778d03a90dd458042a6783a033f62b6c1d670f089b33118df7cf1b40b9ceefb28ffa37d836d7e22a3a1fddcf7a319d9ec7a29291b35923115b04e60ba1f1a6548c3347de1c1bc44dbd8d8d4146aac556798dee6d744eed89711cc93c5e0f25eff1d3b7ee489611cc59a13829aa5e0c7038910f78be7482458a00f62b71d863efbef99249ebdd42222a54fad5aeac9ebb80954f9ef2fd949f6c5ce06147ed3a4cd27471f61c8743ad766337de3f451220f4bbbaad90848e42a9170909ac48d30adbfc60985a8bbf4255742ceae6161e8f06d213038b28b1235d20b1523edf6f9c62f1cac2a8f91ca30eb28e765f20721b9c07db7a93417c67b41eaa2dabdaaa984c6870d34dbe5ca631a3e105ba3c14762e7df839df1980f7b7f3a2fb3ce3e68a6556e957f5bc28f09630e689348d23d7407b138233dec814a6513b04d335e4fbb7dc1ca29afccea852ead3b874e65c19de299132140fdd3fa353b19449eae59f6f69e46bc2a5647939078ae5b5ddb61245f4263cfb1c28836f109947b2b2c1aaf5dd76db99cc4805c039616941cc74cd699d0498c067b51434fd48e1eb32f4487360095df2cf61d22d2fb046d3983cb5e2e25a7dc6cffc297bd16666bad619cbf06c11906ea41519e3278c059364d55e9b449d36f605a790d335d4303ff379586f3c57fa7d4b3792308e6e7f1cc6ce611d72319fafe0336997e1019010dc7b8fce125ccda26677394ac1d25925b0e613240b2d0fe96e42f0fc680e9fe2cf49998d6877f82390bb5d1f09850570ffcefce80e0d178c3638d23d9fd0dbbb6a854a2cc23e127b7363e166eb63977a4e7294ffe0258c839dd1368ed84953b99481562a40697813991ca81d1b5aa49a7a74e13ebdaf94416edd59b950db5b7ec35722a99b3275f37236076f80f34fca359b4285f01acb5c9b70681c13dc018f184b95e741737f0b6a832a5ab3c45ae9a96e6225a91e265e74c1d9e3fbf0286969f1ee07d5d6fb76aa47c8730b589db07e6c4c9bd821d36d493ee4106cd5c0dbf8592ad9f3da9558f5f7bfbe83102369ddec66f4ce61d8b7a0414489faaff5016e5581175ca5566ded8af6b530ca1698e013c1f17ad1037f39c2af758e5cd9720c8cee7910e115193eb9b66302842f3c35187660d546119676a5ed7386bb424611200da73e6033ec358040fc5440f1e8baeedf0b733677d0da50016fa671ea35d6519a9153f90b1d15a245c63b253b86a6a3c458f4ed50af92a5acb628516fe949107ca21df1d04b77864861bbd16d51119233291e6fa73f29e6c414af9c270652209484909b12103dc4dbc7735fdbf34c42cd0347c247e7174b60185e60d7d867bd52d85f024c9f174ff7cfb4ffe1b07fcf8adafeb2acd458a076704bc5ba4c7a965bb1c8a280a40371e8d22b22990b42b20271b72cd0ca8266f32bc5c58294c6f6c567651bbeb349467064d31e73889a25888f220ddf4d92419c6f344e1a317e7e6dd5a6ffd091015e258a7307c0e06d4fe5d835995369a8a2eee7e94b33c3aae81c28bf35075b9f81214c70ec02fb4b6890d496b1b2c06182f6e4f250c99ff8fd51f09bf4ab22acb4e4d69fd889cf47fbd6d9eeab1093520a707cbaa47abcf8fedfe003e8dcf0aa335b05d480cade43c6498516ebabe63902d5c1801f1ead6706f6de03af16fd1f9334e13c1e0ff12af4d654083f64a42c35c8c5722fc38a09ef30ee7020359c4ddcffc4da5b26847eaf47c0e7a6ba27ad351dbfcf9adfd38512bfe31649e63929c9b022266852fe30cecc1fe300575a4e71e5526a15ab8c8f7a64200b352a67ad16da5be67cfefed67283007d81845438bbf7a4f0d5cdee0814fca0633d8b5fcada7340c75abff0079a972752803bcbf8b56ec4bf129169473699838121c1e56d7e2ee3d57b02ffe93dd10d868c8ac4ffddea99c7efc5fadfb7efaa158bfb77500ad72a449abbbd772ee2d7a39a08487d7d9a217ea24752d8440e2441f5f4e79f4a39dfd9dfa736fe3b693fea4dba058c50083ce711f6dfb21b95ce51b1ae1c9eb561e6267f514bbca1e2233c2af152b3816a10f4027340924a6e4b2c4a29382b52d2f75fb6a96c15b30229afe761e13838dce82661110d21822bfaac56fe34e8aaf883e0cdc94c170825928526b069157c67ac865416b4d9f4103cfe6606c2793b5229011f5c22f1bfdc562793a80d9580b2895802ea2af2d93ec0cb2bfd1b7ef3bd7f6344d5cc8dacacb4af7b7e58634bfe20e3ff028a7bd67ff4c02f8c4c501c4a00a793e44c3067bf9b9d94cd379637f130f251f06e4bc51664a2cfb9c76af6542d883edf72ff131c60311ddc40242c209490e4b55c311531e7989263b81a1ad34c5268716f5f123eb6296eb95cdafa3f00eb6d95773594eb8cc1b0d76f2745f7bfa78c7710ef1c638b2ec60868d3c82bd06fe478ce79d31fc9b88bcc7397496bd086defd1cbe91914635593427801cc561cf3e4ebb4300ad8f5a51ac7da9eaf69e513f89f146b26ebe94cadf6ee541f5d11de5b00fbed70cd59da4e90c22f152feb33c299ef2ad25cf63b45479eb4b548d6b823a21be7d8e97c7c867e5006fe66c6dbe0ec4e9f95cf6dadebff173d51928d926b3ad0dc53a08d4b0c8aa1164a6a7c47f5a779c230c377f25d7acb5e02ec7b85da38cc4bf582aaa74d4e3ea56bb275d65c113a7ef6e25298801e5f6021e2cabce3e00915d06014fc9b47f5578860636466f27d7f27ff2ee9557bbc98cc7d17818afdc1e3a13feb3dd6d5e3c44814942402bc87c53de53ebaf943a28932f0dd8b25842b455bc339c1d65b4f9b1008ac6520773b8c913b758fe91366080cfcedcf84359a512e49ffcd4bba87cf6c372267d70889b5d54a6fc121458955473ce8377c84f80a0c41985e988cd1f8c759c973c74805d8f6063e2075cfb4c6f91d1c13d1114d5bfbfe77bcfedde39a49f91fb1288ed564caf013a126a75b10a4c0940d1afac58257086faadbdbff0ff62575ff98e8a97e2aef3789e07d9c3f4a0e40dbdfddb4d26cdc4b3ddc7869bab1ee3fac5cbcdd77b52de1c6f4d8feca8b57fa50bf12c85cc8b8d834c226de76ac5e661b43cb10109c64c53c936992cd5a17167ffe2c1ab13b8fae4de0bd2c156aa34326388bd879ba8b1b5e742d734eecdb7aeb86b95573a859423a38324dd38275086114eae8a994998be21de7120508f819297cfe8f0af5502c8793c615525ecaedec0c67a7b0e75ac0a29602b1f324f73c1cce55ef3c743388e1e1fcd5230d75de23784ee75ff78e6987c808e92c259b15f06bbe258b6a235a0573050e3a2a9c7daa5144511f2bd295246dfefe4fc5f2634f37001a09c0cb60f42ece4b56a8986b3cb248ad482c6f0d41ad28e5c3d5cc40f36342362b1aa0a0743a7f42c6c817a24d0ef6cc998276b70117893b2474eb8d96f64c18598bffb0194a86437be7fe7bc3739d2761b85d62f571d92a50405331b5bcf3f54cbeee5b573d2ea96d9c87fe293c6ffa710d6e4ffcd0d39a7746bceef55cfbba27fc69b378da221655d9d42a5747ece6f1e45847fe91655603bef82a22188ebf885fb45bbc2dd788d5fa3264c4d15bdcf6b467c8ce476c457c6598358a985f96e28e750ac7f672b5eeefcae73c6c5a003ed382107d7b7003d984c183a7ca3970e5fd9b40faafe1c0765d1fc6a7a466d087fcc9b214fc6c1af1ecfd9c472f653eeb26b818520e0521e1700500a4056f6b4f12f0a2303a68fc75b4007ef10a456694530ca469f46537e196e4b8061955ee2a3ae0e23c4916c889ae4514eef121cccb3da92d039fba5de1fa4a8dfcf1676a707d9f46109c89696625608d5b82d9aa87ea2abeeee5f9ead6697ef4d9726d88789375ce46dad10009fbba395f253caeb6fd131866117680d33eb316e8afb3752908603635055c95b21588c843b79cfb2d6fdaef305f20abf5bcde0ade91507a034763dc371bc31b115173450b37ba77a51bb12809e6701bf22a9d2f96d8f76847cf0cf4eca44911014c865e44e193e978bd51c2a5a1a0e28605efd40d673c8231c08c9116ab7b09f223ba21ba810a29e69e90b491bc65396be57011e901c270e4a0d57b3d679c10ec69dca2aa886ba587e92434a85d4cce3f414364dde84135db6d4c2fbde5c9447667b5033d133b3cb906dde618f7f442fb1fd438eccdbd36029167be88b4ae328a42ed86026631d6af0a6606c70d528b15b9acb8eddec756f92554679b1ee9951bd744a11679c4897c6f2813f2af239a1edf6cec3476467268a042b3b4840d8a99a75fe645b939fc32974b6e5f729a9d6f50c55913a3c2dd7711af5cb1a4b8162696853f7bc41c02d114548ac9260c36046ba23b256819718bbd48aef3dbcf5bd17b761b79a1728bc85d2b97f849162babf117bb96ba87313f3524d9313a2b4bd1ad4acc87b7560317b1cae8196d0de9e385705c9956cad456dd401f8274bba30c26403791c874f1f50e50d31a0ea69c3a1a16be6a6e34fd4b7b7c69d3f39b2151eb148577f4b3c6754428d1e82feadb129f05787b12b5af0167001ce07b78d7f277a5612d86e47b09e99ff403d339762c8b1a29b920a895f9b38336a40a5541d54730034014666cb30bc5b3ce1d3a55efd8bd79455dd7c2b922c59c32d25369d3a972c4d8c914cc4525eebeb6f2f3985c31e7d0d73b1c70d7d07f0cdae58c97021ff377a678a5eb31fc4f53fec0badbbc9ff25d760a72f2250cf4c04b3cfd28e4dc91a9ba2660502bcb4746439ec823104fc7369a5063687a9f05333d7ebf0e781a3cd2c60aff44cd2b1fea5e396db4c8f4757e55bc9e36b7818031b160d0287020934c099f7e61b37d7307ed3a0e9162cbf78d1c8349d947a77425ae799b78dd4bf046709d8c326d82ba56175d1529fba17a65d266e3cb8d5ca71f5f35b9efa5286fedf21e2777089eb07a3396977f13f003a2790605c083179390e601ab87503e5a2e229480acd10b719d138fc4eda252d0b74440602dd81309eca2477ee88a2ed2e32988dc3126fc2a94d0c0663d90fbb947d7d29d5d6ce147477438c1283a0de3353213e1e14d0d1805145bce2d18c2bab1fce001555abd63c1baa5e8081904f6ce69da4cfa627c54e550d1d440d6aed2c5c6c5039516f29aef897782738456a078f75d6be4b9182cef3ffe18fd8b6d49a84b74806a05b95e3d2778f19f7634ab815cd672f513356e281342fa49d55dc757803cdb3c0943659158b1636bb6d70aed97f1b59f4416ba4e31ce48926e41243ec0f0728d6f7eda9989d36afc4d2963fad69ddadfda1f1399639103c16dbe75704fde77cdcf2b1c7fb1c80b8d2226bd5e32b712ce9366b6ba7343fc16b93fa329265e868ed3110b1421608bc970c4e4fa2ec8302ad72285748a8b34ea57890869a7c6fce18b2d67d6d5abf4b1a67144cf882efe31a0e0c28b272e8f5a1365029dce92630e2daf508a3b2b981c11e7cf87428c8d82d8fc13d7b8da80504cfacc8c5384bc6abc80ca99fc649a7bb655b2c187453996887a3c16dfd9065bce6acc2b03b4f3c3bf6b9ff11dc2cf145312c3361266dba31030bab2d003abf7a7a9696f600710bd30a8e19192a59c0119bd58285416b0f70e5f81eed12e9cc8a88115527d16e90d4039d84ae211de0fa104fcb87b3776385921e4f2f3e63788fd373c29ac3e086e38cdd82d0bebdcf3caa835210103a105ed4edd2094a712ac1e1ae398c349337fd6a3b0074fc5adaf7e586c9c6d9b565882c225d8345d172f283b2996fa29c5927ce0de1505e457e69e86766eb32a199aaa3ef51085d25cb123dfa7ed0f4ba87f4b7f00328fa6efc031583f8be8d9094b5a63f57447b5f2df83f4c956c4acdecc151d43238aa0586476d9d484d0cdc9da06d6b991be4c9b3bdd040ecf0e452b318517590caff9d9441c3bf26b57db3e13030303f27fa98af50fc2dba291cf75fbafc6af00629d0e9fd514f52b945f93be4a8eacfdaf0c13e69000fa198cc877522a30215d0815dac139cdd8283de3733ac02305feb96a7de254b5f135b53a59d6c15035d1ed83c67a3c5bdc242e8dfbf6f0c35f756dfc6f343088427a977098538d0ed4b06153eba758cac8b8df38f86f6fb08c8a11de4895ab1733945d79efc23544b0cc63ba9455e19a769fa10b868273e5ca9d77be638228c2d09a99d0fe652521b76daa72e261f1802a0b1261b7df310e114ccb6e7da36ca04d4ad199b416f61cbbeef7988a5f146fbe2e660204eb498176b13b8d71141cf8fa9e8e129b637260e52a40c87ce567b523abac68e4e804d9a1e4b0f25b2cf74e6d73eded1b9ee8e2e02170d47242bb665ed9839ad2443063d0e96997d1396ec73d6579485d65520be4e97228fe16eb53ddbe2300a0c684670d3ebcc8d4042a750b349de6e7ef67e88f621415aca9cdeda5c4e8c7f14c458b0c7fe446ddfe1bd9c19eb68430ade49ee2de59fb76cc52da061d1126373163d05e5cd4646796964d64edc7d5f628209568f8c1ea2b92286244a9d3e02f7993d9116982a051fcfc2f373f8cdc1cad58b606937e5805bd7f9a608932499d26f936487a30dd28d1d8b23832fb247ef01548495773a9bc40f36039e4dfca53786e3f5f3f6c672042df80fa7b67d547c58cd97db49d6e6e851a6aa21b90481fd60673cb377314a1e3320cb96c86d536dde228d1889592076fbcbe7985b063322a06ae6f3ab3aed726efb2675662c2a9970d0cfec704baa3db470a84fb5f741de6d369c771f2679fa42e4237646e8ef7cae91eeb79a8ac6457f6e7f4e26b583c28f07ddafdade9aef75adabbab931d29b05ac846a4c6cfb91083a6b4fa9bf0f4e728448510aa836dfc336074a7ef63ebaff56c15bf5a2af94a464e19a0c08c501c1b2b8965713a0b78fdfb42d6741145ce5193523df4e4d1a45932ca5528ad0d1a24a6961078ce766b29392785566a119be4be275220c2b29a4f8566938978c168aad18c20eebdceee69f2c82b40a64eb1d5cefecc563031d3444f7edb01b7a0b35c1024decb7ce566af3e0a8efc7c2878424c8488dab5901f77b971c91d55235335af6ea467505ed5af37df03bf19ac9778acfbaf8f951d02ce7d92653e97463e86c7b3d2da2eac4ead1830778fe17088e3192d06fa73fa0cdf01da5c2080c75610f9e83c63640efc5e2cd2e94e239bf782439b4c7838d3c9fe9b4b04317a80f6a4cbb141104020c181be90dc49d4ae30291d88b1358afe19ec089fac4770c0a0597d7b8752d7099ccb7612281ba7ec658b750fd2f2653b6ea114c8c767cfd218d84c1351cc374671db214780c0b5e55fc2b65fe3e8d8dd624caf17b4068e924a74e2a89aa1013381bef0abe0d029781f12fdbe5f95330a4ba47505f6eedf5dc28bf5af4d80a70dbe529c091d6b0d0b060bc0ae90dc6ae9f4438a6f3e1513f6f0f02fb213d53af32236c7ba5ed58bc45baff8c9b6eeea32c2528d42c508e7aa681e044ce9f60e1a161657cacf68d99d7bc49d376be9ffb295d69a54e5e7f153c228e191de565ded98afb7193ebb473e9a2c52999ecdcda22e1814e52059ae2482fb886a1a8ed2173564034a4eb5b8235c8fc47f2d63bcd206f24960dcb20771edaddfa0b0ffc890877a72fad1c33929c87e6589547abcd45884b1c38760f23d3e9fb44adb48676a2547a7d14b3e2075b8fdec3f8df1efdd6fa08a55c7b6f597335732ae6c5c3a7629e81f332237c435da2c0a76e77950e5d98f19b1ee2df296bc9dfad92d9ed0568f93ad82e27178eec7d19399d1a9649c416f1a0db9a909706db1c4f73bb37af9f11eb392e8106690536c7c7362a27f6d1e3efa2c4e45fe5e91104e392c42b63f03bca5ed0abe754a2d64c19a1b310fcaff9437329a0602900ec5a18131ef2b0a8e69dbffcbdb86a2c7ddc9823de6d4020cc3405f197f8965a176caf7533d51c19428d1b8145dd07a596602ae315797c389529d33b12abcf262f179742e7ff0e47c69cf89c4a383f60ec055254cfbff9395e0bebf20f9cd5c10bcb06412c451d047cac0aea9994cba8577de4c440366e276189a7c8d45c4dc1d2b3d1af623b2d1643aa1549e91a32dda6b8494f95249325bb6de3ff409a7d911c1874434e2689e9cda2611d9818aac2b5e0f7b08cbf5b90099dadc5db5bf7f57c85ff98f509a6cde7768b041f31fe8c8a8f15a1991b1ba9e1a7301aed6ebe7a917f3716bda5ba89951ead95ae7410a2f3c641cf933fc9fc9b9d3fd01491e5e764f60d31c3cdb814427a16f2df7afb681b21785e48a63c9537fe821d47902c61541d1fdf641bd4fc730272b54492f0dc88975f77bb15bdede2c81c24fe625cc219a71de2b97c69e8c1f2cb078e29b8175e3b1b770d9187ac3c4a6f9a0dc4620833c701ae042a125191da85754bc6c9fbd93ec8ddcfea1c373daa3d95fe6071d50703dd2db4c5f6697478669189c97b016a28c7a91984f852bea69f10b871a8cb31a51a257f0e78506624a6b94eea7ed281037b27bd88259d8d6677c52f3264c169003d8085e7323af98134de7c3379ef83d72db7d1390bb72d579fb5450bf4b37422db7c18be6522daa6062a925e687130603437abb4db874ee39f8a6d5eef78e5348a232aae6a2080427abfc9ad8a7c63b4368b349e4f0349f3f91d386d3fde910fed9d8a891707ab043d3fd30b899fee88ba3dcc9cee82794d7fdbd830e93d4c0e89c6e9a2bcbfb524704a937fb229ab916ad2a18076644f6bbac6c8f845947aad517e03d5b8399a445796aae9edc823f4b00c22644e16ca7bf8dbdc3813a7a308e239ff52c19f9ebb361f58d639abf033eea35d60e28d5e190055d2c68d2e510895e57e235902db0282072514a528dec138939baacd6cdb1779e68dbd9afac302141b335fef8a44f887396ee3c7f2763fb12c89f38480142a1dc445a58a157251c4e54d20cd7ec6f3f62e24caf90bf832b42b168d6c4701cd0dae410f85f1f9455cb279fc9c37a0d5a79eddae856deb5e2b8c6bd71ee0ad857cd4e1a35246d01563183cf5b6828adda37facbdd75dfa214e8919ef724975038d530366892ff0701566c15df4b27674c0e1e50b475894585abe3d28bfecfe07847a49f799fce610742239476f6e8117bfb5edeb2b798f7e102cfc7ae1a9012d91ac69f2f836af70dcb7e2ab2193abf391b28817a89adf4ffebac09cccf3e5990cbc1072b238e53960ad537c4367b2269bc4db41e30eed3c6ff209f25d0160ed65cb7df825bd711006f4697d955e4f77e39d4186207352f3241f9fc1458c4304f212beb6720f362dba013173ea118ab240e3d532bbd4db02b542cbfc7117758f82eaf507df3884689706aee1ca642a4b4219c087267ce2a3892146e3afbf63e4394d2e359a52beab28476cdaa168dcc1a9640ff700278a712d12c7743029b100f9bbe2e5a3e0038ab4a92202d435da91b8a323b8b67927f40acfcda420b5434d8dbd3eb18435eb3c35afdc8e598540a83417782ab611b2f90c7d8059548985300f5f595798c50dc5befe0414f41837d25a290d3968bf0a664226be420337d8e42a9b81f00e23a609a78c5649bc6a1b7c3795b634c446eb8a3946a123d2c569a940569df9e252407b155637f0d4862d9968a3d961d66e006190f9c0ec6110e232c439fbc8b23ab6fd03ba4bf1fe9da71c6700fa59a847dfe16fbcb541fedd1efd48e9999ebb2dd0e9917a6adb8cc11fd8e01238f5aa1d75b903c23c68ec5b0037804bca9b593bb21acf4c91513e8aeed8fba6e74be172c63c94d0d372de3f15f25505dce26a5fec0b93c076535e4266a13ffce103f05ef5e09ba8f385e8c13fcd40a60e8179aad4bffc3da78421d70ed4ea5897af519ee68d9a4d55a7e191f503106166834fe93c95985df7fc3362dffd26740c493ac49238b9e7d7ed1bcdb555efaf86d67d40007a8944e63771cd86e3fc48d89eecf21d5327e2fc2232ebd45d8d6ddb51799d07d340ae3e54927702df9a28b7728d7950f398f638fb31887849ca3313bc8a2887e59a01ad06b24e1891348010814a84e83e7ba5c047f58a633bc041fc4c838af68507f360c577584948e34ed8a879120f0720db9a5a2c6b2bff25a8b96d998f05053da5e4cfafb3cf1334bcdde3fb885886550e2efa8aeae77475c553561d14056bd80579f4da0d2dfbb0a8bc4da484015dbe9c6e4943fa4a1bb8da04e2437830b6cbd1937382c39b6af7379a32e6ef2cb76bc186eb30dd83e1f08a1043e230f2ac5037bec279f19ad4a04d436776a9b06b5a965b663eb471cf5ccc9a6bc9cf47538412342d8b78326a09bb271907972a03ee907a28a86915a3eccd6322fccbee4532bd9338491d42b8bdcfe61f4699ee604a1c8504af99ac50d2beb1e5f1be40eec799079aa268479ec10eaabc5195b2b8a51510284e313e4cafeb8c512cdd6d3970834ea834913b1469283917a805c88e695eddbfac8f3ccaa6c297507b7b9ac6eedd63e1b3bafe7a9bfe2d68843dbdef01284bcd805142b1606e91c1a72ddc1674546f06e1fccfa2589adcd06b6475c1442842ee447d22aef05a9816f4768c2936482ff211d2689945bb6a2b7509224788d6da3fef24f4e5d0fcf0dc6d100ebc4d649ed4c729448edbb6932b9f6697e034c2406978f55de09f0a0de3cac98896e8d11a2ebfe5ab7e5e5b79d5dc3672ee1f10a1b1e44f2aac04b4d9318da3b750909ec2c20a32017febc7ab479ff10feaf31a2c38f489836d43bfcff6fc9aa47fc77e3b80116df8cc7b53af6b94dadbd11b820e5d26ac5f0ea18fead5f079483b67c0d60798b2a1d98b9231ddd8a92be1053d1b63a5d4ad5439e2e215c32ee0f1c2195ff7079e016b923e26b094715f4aaec6d8630df4af05b6f4a7a9bf719de3b778666c2a26952d5ba39c9ce4d3c99e60c1cb43ce2b911de11f47e7cf279bbf1e3ab5fc86f81b7c9db245f0d32e947317483f391d0025b361d97c78f5753de1ef05fbcbb3cad89b68817af49815d144267bd08664ce44544407da62aab31d55316d66a2059a5815ea2270faceaa8135b85bcbcd31380d9e03562e8c17fae2d5927a7fd571bc67d92ec971b101fb4d4b98c17c7b2b3214b63b4b4f03dabca1c61debd90ea018cd6b614cae745144a865b1e4196f8d2bc160fef27521b59950f5ab0f2b56282038d214e04cbadaa79bb541df432de07ec33a6ba5a21315cebd25ceb56863d082315159ab4bd8d1c6ce434d96c86c5f4baa2b1e24f53530386782cda8d7596118003ea6447cc6d07b23c5043b8405e31b05c6bd1be55bfea400dae3ba027c2eeb1c3f381596568f78ce904693dff773fffb0881909325b5d9c206ac0d273fdaed9dae00f2d0f8c85ec0a642173fbd53f3701f56d0bc930544e45e31c456b8f705fb3f7d1d00199a8a9855c3cf3a84462912dc2d638995e97859344a6c3055d7abae7a5b42da39d12cb27e508fb1adc501bd0ab5f97b135c1562abed2874994f269d084666d0bffcb93f14a59480bc197251ba8d8397dd27b55b37647df56674389a25b95e82b197afa3ff6eb61e9b772764385290a26e489da4140580c2afdd11f8f941ab92119b8520759f4abe20691b31ff0e30cb2880eef7a1641d9cf13808456269cf85b86bd701ec49fd2b95215aca9fdc95489868de1556502e5b2195444f7268d46bedc8168a426cdade63eae36609193ba23dcb59f3c945b7f25d4bb2c7647cfcb948a733f068a88d54ade4ed2e1d99d5784fd5c3bd3d3137eedbe80c6522fd862028f44c946b8190d5aa7f7e284b321cbf154c64259018c30d2b8268c88f9c5f5f3c85bc2a12fd1023e19f8c1ac639cf18c10658647af6fe244a74dc8f4909598d54ddb4927563879656e52f50337553adcdf41628d993814096ec81bba0f55d9d592e7e0b97d13f5ae848a39f68d6d71fbc1bdf68bc92007a7772d8d76e206715b087a2bbd77ce28ef56f51474b6cca15b9eae15773379d2d587c29ce48d9dc5ca4362e95b22d75174ee50108eef20a726452d8d7101a988c497bf596003aff7cfe434becbf3fca9ab75ca2696aae63d0ed60dcf7176c94306ecad5238d09d0835d428fc9485cfe9fdccf8069ed4c67d3dbd5dff7c071770eb61cf86edf34f5dd124a26f6b24db540822e4379916459cc772d0ea50a5bb3f1f997dd4657060063becf2fa0d723271d72ba9ac07a94b4d5617c09e9904c9a8f10690cd5183b69657a45835d4f659cbcceee8de983e2289f54a0b039cb0176d19764371096fb0175b442ba882d952631d793ec5c03517693ed58ae77845b8b059aae9cf00810db53fa2c65aa0c4c03d874c25619d0a770cc12c61f9faab083916402291100f65dc385297790a496f9549ca52964e7942a67012b92749eb94e7e2cb856d759011cce66c670e61364d1602a00df572156f1a36fcb7c83b6ad463610f41df0169e5b2514f1d8a0d5ba13199dc477f5fc1821faa530e3551b6754827b07fc41148fc1b3d4f49a385ca745559409bec8875ba7894282ef4b4290cd06b36f1e32db016e99209d4b3e21990a6c2615d650c7bd39f51da6adb03d49858b37b9a2fa8d964232b4f07c8c436359276e3530cb4a91efa2bc5d81f9aab759f57fe0daa2f322c91e1f1001e17b9f8fac343dfc1da9ddcf022e9217a7e523a26f476b2d06d60ac83bb7cf60d9c740491b7a44f7cf8f2ab60416f429386a4c754bb0eecf8a38aa8cfd3c8426733d6c448f7715b516b8bf0ec16fba049017a32f78a73ce05f277d28e4afd4bfe427098982f06a53bd87548777e0357634c611a0d5fed2633a70d5a2ec1869135a10160b56a1ea6761c453e6e807ec5c1b202d9095047693f3e6cdb4c5eb4da5fc43f1c52bb8990c84fc59a827943f944b50eed47ffd0ffc19d09c31a4454067ee386c6f2c54e2c6353eb9d96491ff578f8c979474d7843d74fb0ebf11671171a6c1694fb179646b8012e244bc1e3c428816d656e0d0338428ad51247db50ba348cb3a97372bb0d17a4dcda2511d60f632ae079197de1faa0f4cbaee558b371bf0396e69a003d9fea513e9b854e5ece92b32809539f21839ad765e9f70179806b6cf2b7630bb49c8c835a6590fd1bd97ea3773d17ab36ac680aa0d07dbc8111ef2fff651213ea1926fcafce98d273ba6b4089c551d21c7e842345aa9f8484652e167e4e475ae0cd85f05061f4fcb59ad4c48f6ab6e210d756e686070fbf83d5ad44d19f6b5873c1be4771e17ae8cb4d73452836b9ffbdb5322d44eba74ed52239eec4aa3699fbb24f4f6cedf7458aafe5cbf812f9ad906e87679945d4da234d7920d9be2c391589c89f177b71bbb2ed8c3354a7e1cf57e974aac805ad41b97c37d439130d205b9fcbad6d3fbdfcd2b9ad0035975b659f17ce01e9b6d941111b777d689c0c70a7e5ca00e7ab3b425798e7121e71a51fe96b611cfe592c82f566a8a9fb32b5a872fa8427cba3aec768540d3b592ab91d7249d03b4caa738c43e95db890c524090045912003158a48441bf0e7f32083e406959c5da65235de47ebecb87a9be3202662bd11eae77b13f921b7b23464bf2f448bd83531322b9e6addf676899faec5f8ca2b111c20ace4c5cae393d95d0a77eb4cf43be00d46e9ef96d7a42353323408964a193ce694d5a7b533629dacbb23ea79ff6b96ddd9d2ee26191d91cd02f0c296851fa51038eb49ca90bc0da9009f41c5c4594c133d125e3b1a5d2de686215e34d884505bf857a7122532c39aeb1694bdd2311f359a19622a0974575dbd3da1f88ed0bb6f4882419cf5beb25c3a89561988d9ed47e0cbfe3049147637511658cda38a0dc4591ad19a92e4be6d9dd5ffbb54a163b6b13455330fdf9422b6d5b67435a59f416ea0f8d146763aa79e0ef9a2f11293f44eb7acaeac6a1d79552fbbb8315ea886dfb7245cb172aaab9274c085436fae4d6e11d882a1505f2f9627d87b4743d379cb479b8446d900acdd64f0ef3b8446b0c6b330b185def3907fb5b2e08a085370bceea294c850cd773728b0b86a90dfdf2d215bb78960f9a266a29d416b4fc3a9e97af2f2cee73fe53fa6a9c792fc5842f4387d744042070ba92f7b1f199d878991f189427d81ca980eefab7b065fda4426aef9438637b2d84699a30fc840ce929f8e9bbf17a33179b3d3d20208639c6fef3fd47223fe06f836b6ca9c40f4a3ce291e19a6fad3fcc8b4fae8ebdb1655b08c83a1432121ed055dcf5985b0836edeaa6daf76f84eea01c2e2b2603f7083aed02b032698a1915cad956c7b9ac14092e805be1353bc19a7169b84a8d5cd5e5f67e1af35a0017fa6d24da4af367b0a3f31c922748c9d7e88a42474cb312daa43986cbf733a8fdbc030e1ae86976fafc3c5d8ed66e66660a72a51374f727cb3d13fa14b1fa4e83518d34a291fa72c4b3cc0272db4a3dff4e78ae7fde4a726159f49c03ca90b0e1ac612cf19f5a684f88756b56bb03a2c15cf60bb4712a0684f37e8ecaf2cf2850b2ea4cf20a61ae30506b0d4dcbff7c53b8aa8a9a58514f9e7f5942533b7e78f73f10376393c87382987327a102a232014c6e533f352f4dc0008eabc14cf74c7e0b65b0c8efe34b09b62ef8dc35d191433958a5c2f7e5faf472cf44ed03e4a3d0059db3868448332f96166f0f3af2f2bb6a54bd45f5c140695f019a8d2af62058db04d2b9bffe127c9f9f3698d693f6d26724ae4f56e0b3fad51caa56739db87b91e169033ac27ca3061aaad20f4c6245d0066714c2a01ed6c90c6a27cdb8272b6e9cd90b8d151e06a4b8cc57ab76cc67abd1599b922263631dca6899a91fb5943e5f18b692fd9d7a4bcce8784512c632b00e4b1b2702763f742f85f02a1b22c9bce0768981057fe2448306ffc25af0599e3711a3c1b2079a80b9fd9a3e81ce09398e53ea40e655bf364d6c0a7422b14aa2bba181deeb0a2be75e98357c6175dfe2acbd6a11a68875426ba5cb730c6e3adfe2902f3f6768d125de3854818d40e6486aa9c04feda9e35cd4036b00a52fb9ee5a95d319be2c1c03bfcbad41cf12660a8df15502678d70b64d588e005686965ec03675050f83aa4e039a8d5857d3df998bb10051653e6eea71dcf8bde7d56c5ac0c55602e594d6c3b9fd4800126fc4b54ed668fce5003105fcb159d9eb36536dcb91ebf4a424ea3a7d19a92d953eadb547400e99160bd0a456235e94aaf58b882e35ff0e049a04f3c6c6121f562c965ca684a5f991c6d23c93fa35873d77b0304a90c1d850e51936bd02b5b0f3280e7431cd0f3a0fcb72d220f9bca25742190f857ac7b4b1381039701fc62af48440725351d060f5b5ce972f2bacbdbdd5b9de3f201a02fcb5fda83253d9b2968c50789bc25b78c34ca609e00f3063d26280b5a02e279c35a231e340f64a31699b470a4a0f2bf36315a059b5eaf29dd95910cb48563320a15c783351c364c5fda75efed6a83c781fbd623128ba3ea5c8098737fe35dec8ca91dfa66d3ebe58e023a788f01bb76457461ae67c1481c4f024f24aea8c6c511c4c4dbd12f4ed8ca1e41e53290b5c0517b7492f9921f24dcb622be631d89dded542689fbda9c5324d6a8a1cc71a4ee36b6edfdfb1576cc1b3af56345df61a8bc10f38e483afcd6a7c86621c62522f93a5efc76c8d7c28d3bdd2f55622273b5c018ef1af07a03f081d46229b5c68dca1f7ebf168b9e5e56f1e9f87238872639ea24b6fcf51d8d1f07d5e852a95ebe40ada2d186fc662bd17409d3817847cfbd7df391cd6e0fd19e0bb69e28bcd4e5caaf720ebf85deb39c0ae7f7b4cbfce1d81e417f4d907aa81c55ac090101d554e314f3c34d5faf44babb8456780710312e1f6c92e17d58384e05f7d3dae7c436d40e2db0cb2d6fe9940dd45eba70179aea2a2a100b3067a3001887782ba8ce559eb496add833d4b1099ce040f07ff2091321da5272af5a4a5d50cbbad87d8e9e8cf3df25c9599cbb04ba8e5f6fcf7f61339778c100f0f72e34a5922b897f81747ee35b011e8d488b22db64dd2ab0edbcd52d0a8d3dc00ec1fd0b8cf0f7f766459ddd4ffd3c8e828c5c2e461cb53d1d508cddaa28e1ba02e8b6979784cdbd848591947ec90be53baaceea10b4ae68c6527693900e7125464b7f4f1b40e2e650e17167553fe8bbc5c2f1d705ef093c9c723d3abb8d816dad2735d18faa48c1dbe07606c646cbb5cfa63cef067ba1eda638050a21ef3176e020e23e3c8b7c387dbc3e2cd22e801556faa9569316efd203548d72e991d07551fd2f4fbb133605d60ac3ea1c860d4aee4fb86fdf0ec6b84301c041701a4977f0a9b0b8d8bfc4865847761462a5a8fd9d46fc672e4e037aa8431a07b4d58cfb920b13d1b8e6937a6526199e6f9b3f0ee98c5878304749ef1b79c654006278f5a9d04957e26c19a7f1c92788a8b2a0cbae5ea01fd005e4c5d5b79e6bc0b8a4eb18d6a6b7e028db6cc9e8635ae492f4d9d0e72a8abbcade329bd35182a5af1addb368ac8bd24af7186aaa7fd33a9a505eb5fd8403d8f18e2ae009d0b7555f7b288283869994a227a13a7282084765cd3860d77176987a875c96f465ca914843bc1140c40299eee7b064d3c2920f97c42830085dbfd4afd7d7b5aa109e9ddc10bdb66cac4db3c773c501c37f6c9f3acc8ce112e4fc2d2921489fad8c617b3ec28397ac92b72d82c70bec18b5145bf43487d7166fdbf6e59f64f13d810ac0485f67be7609f8232ee413b1bc498d4129ce8458e369b2c5dfea6d549269138c76aaf71687f9c6e21c8299f7c35484f6a72778e6f2923a858fcec2f49e78313b7e130e06f7e6e6fc5fe580fc36eb5fbd28c8811bf8b1b1bbe452378a25ab50cb50ebfe425be4ba707e1fee26d8cf210324adc48d54bc7e2ec8ea1dad764b12e1d619197092214b3ad28619333fd1d0d2cc781bfe274795372e28b718a61eaa1b5d5bb8830dfe981021a2b925ad90134b5d777ccd5b1bcd40313136f3be6858c6bb0e92e24242a07ba0f46e1421f0ea139a20917b6eedc5911c740fbc3cb3c27829df03f066886d36d1a4817c5d955ab97ecbb1583c88cb5268c50ebd18bc8696a66f22bb04d75971aa9e580fd5d0f09c255dd5ecb62f8683feba99438bc9fa82af7952713103dfd34743f13e7a67f17e83328fc122e92d05b749806e6fb9e0ee3f1085e3b7e316fd5dcc1c287fb2967ac4775c5ab66c5bbec4794bfe28fa4f003ba423b0682c746d70685981c23c47404617d5c275faf2db947c199484cd54181550ad1c74c3bc44e42a132fea0e3afc408fc3d7992e80670e20b52a6dcefa2969ea9ec8397b39c79f79b5e14ac4941e805ecd03dee345861c2f6f099c27858231c87458a797958455fb31a46eb7377b22c1b222c2f3a974cf3a5513a5e11c754a44ba853549062752c26d039678dfd18f83fec04076508a250dd05555b3fd3fb10a9bd3b36136aaa9a9a1ff49e7bbf45f7d9fe79de772b0e8e276052392dc4b513a44ad4f0055de604ae82588f9033f35b24831b252ea8ee20e297517a6a1ab03461972f1d809f2c49387fc91886a249e9c3a63637c96341e780400c40ec9fba9d90575a5b7c19531d6bc428df6e03a135e21f0e757bc5788aad9d000eebf7575b6e364eae4bc9cae123246eedadf575e7932875d931f55661e3fc7bbba7af7f63777c4ae2aab792624b22775fa1498fcf487621033207e6f543940754dd43b8692586dd70ae03cbce19b0272b569ec0598e6e5e8d21db7c9b1eb214d803e53011be70d7c9bb096b8d7762b114e503ce67b571adfa5ab666a79f6d148c6a1d9337f50baef9b1884f24a96777e5735572d5c171354f88c02ec8b822355000d916cd7b75a2008ad83b265f34017119c38949d2e20082d779a478652661f65955b1f13f74859ff16104b043278a47c707fd04dda5e70e942a7de5c4f373318740cd04327412057062baa4a5722dacb005af07d3964c9772cd9c0c40a47de663119356cda3f0ecd7a109a516c0093406fff0874a55af3ab8be2c9a0be8bb1bbffcae3e539f86addd3fe82717cdc1803a02d1a6cc63fe75a35ef8211e99c993e7fb7b8015c76370b0ba2b90a42cc0cc2c84a66b98ada870ca3d6701035d905a46f901a8d1e8adfde26c14470e473d4788338344c4d4317ccbde0105eb108684a2469b52c231ddfcbfa02f873eab93aad22e346e1ce2e29a0624bc44d19f16e8c98612b2de666dc80f00122705a3fb817ce9a938f23b0f0c560c4bdcd0b09e00024469c638730e3168e3d5be9a093019c5355f4ca570e4899da5630446915d130d290ccd604a0f7864537a04d42afd41e10c3866fe4c6d81545e5d685f5d14e2310ef4f56da20952c12989654da6891e8aa95b5ef0e18fd0ec1a0af1038d275104d247585d625e3bbb51cd345f21dc66c70e4a514b2be20de059715cfb5dedf18438bdfbe2b6b43c156cd0114b1b648cea0b81c355ce7640383b7372037e707d0c31f2e2405352fd152ff34e0573aaf35f0b12cc3399bd1b8fc90fb27d39db0d28f551cd79452604fb1c0be160ae9a9a25c08556c6843ad9703dee2fab943be4c78e3d221fb2ada3f68dc67e11737c6a20fff85ecbbc39a779ea5bd81e393b249d199cb1a118bd2a6bb9046ef55756f767c7377d1a4cb27b5ef5f513eff4d664c7258a665b22829d363b6721c5ba09a13c9b99f067be995ddb72320b8459cd68aafe146ff748582ae31c5205d6f35221c5fdfc7292cd5d3093f6f38812d434ce84cc31f3f35c3b86b4ca45fa8eb27b94759b7e3eed32c6fdda1c8066af65da31594ccbcfd8ccadc636e34d90a844aabb9eb72a0db5ce65320551537662cfda3db248814ed83dc596fb12eee58279cbfe81404d47f95e72aa2b1ce27a3bde1c3a2a4df28895d824fee80e9b530d67a827e3c27ad3f2bb5503b09c9f5e70d846b1242dd3689b77035ae3179d0e62f59da04274750d90cc435c7370c98ed7ff84de9879f307949beaa4260a21df87553a163e1c06d0ffbc01dac6351e5e38d96ff546e1acb19dce831627deb329d0c0539c5559d98553036ff3fa5a9c172a4c4662b5f9d60ac3298cc87a154654f69cf89075a29f6183d1cccd4b171f03c086a6acab4896592d689a098d830b405db0982fa985353bb70566ef34406f614987225be4d6673bf5201c929c6f704687186736e3c3eacb3e796846ab8628c44a82b2e77b44f346e9d8b6c6c029ac21e78825b0a338939e391f25ad519bcecf60a07186f9a00e09ab81f475b5f0850d0bc935be093fcfcaa18db8454f5cf98edef89aa76f13810a8a7b9ca083de3cd69f60d9bdcd81d7eea60f3b9367f9b650515746d0a11851d1daa486fdae1ec3805b5fafc6822cb3dbe7fd35603306230d3d02a020a43104c204dd87f9b9fe595bfd5f120251d9b8771830c960838310a7dd59b72c108b3fdbe368fe177c9a7fcf5f7c0d22ae7a82f7c6a8ea1ad83939ff36bfa50591acf57ec71c0c37e6cd75b4b85c6456d66be7eb9513dcac033c4011ecc36c4eae54b2bf5b75a2f0f7d0986b2a87d02665a25450491aea98f264551d945b770a1b2807b0a84fa70f700554b86100f8b7f8914f6853d358ed2736fa401e541a48e87ebd7fa6d0ab139f33af3f908f9cf89826c803909c8a5913f274eee11d3ea0bf44fc04b78ea29d6414432a9bafbc3950ea479d0c313f2889c03bc83e5473ab79395a1f7a59155a296e006808774d32011d5fbcd5271b55c0ab8c141dd013d2e00a8fde93ae97a97ee09bbdd4dbb3c0af3be9be17fe648ff8c585ad67aaf7b1d5ee9c8d61b890f9517d335a52422337fcb8d7c8c9e452a9a1850fe7f225c682ae305d3947af616f7f41fca5208c9427ede98963d276a5920c8692a6bba052ce28cafdb667e840b92259106b1d405065defe3900b82126a6850e765064a22ab1f38de10bb8db0c93f4537fe5a6271c05ca299fb60e7301af76ba2399bfebe90f7f8d985c37e3e430d5d3a6d7c70189b2ff25f4b0e70ba247430cd748fc1ad406c748130906415ed070d18889948c847c603c6d9f62ecd3fa7a41188edd156d7774a74829feea78b38668202fcd2ede966a990fd1fc5a5cc0a5b80020fb4ab3dcf58ba198a3a7488f0ee07abcbb5f1339b37bd6eb551e5a5968ded0bfc11fe0986e179919a844b37f3a18f6eda2adc4587d9fead99a68f12b6cb552c1b4e2b5c58b9050a9e052786700ce62b80a1183e341134f82a90d0008af89bf292ea58e91169e00b38b84702991cee9f36d28514cb51e9577e2741956eebfaf7ff77700a78bfdea917c9a0b15258fcea8044bf4e884e0e17a6260ec320133a27c76156ab296a1b9adb8dfcbd9762a891934ee8813de9b447f5640b6a8f29113956db928b3597671ae9b13d7aa3be3f0b012cf6a8e6c736518d26d55d52f10d0dace818c7f1f1a7bed6c030b8145e4a6d1fab3a5b3bd4121328596acf5cf9fb0424330d349be224dec4cc002b6f234dd24416bda0ced06b40fc501cbbfba4726caed353ca7300c505f8ea95e6a47ff3d05781c454d26955129675b11e67042b8c5c2e6b9f6084b4b2fabf5a409609739510f646a6908fe9d1c669baa6703fff75641a66a86746a5a4bfd13da6a67905085eaed0480d999b7d6a949a73cea15ee8bfc05ff027ff98dcc973db15ead02d2a415e5baacb33f00e5aaa67176d5e5cac416da7a9a9a3035985ca39b0dd81b4c53a662309191a8f189448859ca297f7ac1f0fe52477aaeee39691b7a397c8dbe2200b94164d26fdb79892dde69368b9296e4fa8fb3015c3ce7285d4889102594655aec3efdae028a37f62e638a2b2cd380dd12123a06de9f98d0a9434434307ec239cc3c04c690ad926ce7e27ed657630a8264a095aa9c07d0cc60b0bbfae3a8b525db1f8af811b2d715b22c49b6beb4a0898e5520d2ce03885c0ee6c3c7639f17c2a60e90f882da8f15ed06e8f6193707e7531c431d4361a6d4900a28631b7b5304278214c346f0c5aa16e460593cac72ade6466a4a50c1248dfe1d36000ee8036c2da8036dadd2284c6aa7a047b2b276f851746af95e3721e4182bd9bd1a00c0e504eae50b1d4864491558e4dd6a9d26ece1222e2f34f8b74f38e37cbfd0e16569d0ba06c3d4a28967860915d00c58d5bdc249612796deba1947e5c29dd0f0f19bbd73cad9c735ef4c396076e1a1d74f4ca41bcacd641df1ab051ac781960c20d74cc7daa954897d6068ded26c3df16527904b014904c30b7d86c255bbf1d665101af67a8a387be1d1e599d7d98659e2acb13e01aad8a77683c2f9e91f8771334dd28bb9594758540faa161283ea22a0fce4b2e1172a62aa155c880035d83de1d9ba2ca06e4db5863599502b021acb85e35f57c49bb0c3b95d6f0ad5bd7ab73e18868dc6fa3a2fc0891c990da4a021052e9c587e3f8ed5482dffe357fac162cdcc23769f96b54c3405cd85e928b228ef2871f25ed67d5c0b55fd732beb72e4b9db352b6fcd20e12c98157adf5209c1e9fca96fef9f2a3a8c4e0be3cd114fc0dbc5f441344de439f25f723297097a784f6db4cec0e9e2a3832a407291a93c96032ed8dd273af955888f404f518d5f05efa72ac6e4ec28f54af126e96a4e0ad07df860759ebf788d83c7a4614c7051d4732d008f7412b78dd8a2cfcc1289bd5781c3638aadaa1dfcff5fea3ea121a43e68799eef170a19155466d7dc8e6ee9cfafdf67ce21f97d4cb5d127e3a672bd316273146d90837cda23c0bed04ee3550f131ec5d12a5afff8d826e5bb526dfdb95ed5a3342fce069086e0c99da23da7c2b221b9e2071b969dce71687d352679174f8be23e0671ca7c17b92436cd929e713c21cf076a197ded462410bf6767b74e3f4460b34180ab2ef8be6f09a01f88f7e59278ff933079a8a7cc20c1c1e57a909e6dfe22f9bd35bf070b15de4cb205d7cde6fdbe4035fc4434c926587abc7c1d9676f156b885119670c3477b48f018614b0829c2c80078bb8507e3399413c74e4fe9ad22dbba08fe5054a9ac13c90c3f72884e771240737b291c2ece50b8e6140f59eac628e80339dc211f7aa5ddfef4f1f24d19152cb1b7556b399373f160193641a97cb48b1e22cf9fc5ddb2512c6cc0c3875e4a233a2fa00081e7fd683d23e6d19f9ebd1c2f79c649b322b588e3df8b9cb9cac19f954c0f114321b0ea3263074534f3d4d9633b19573eefa90bc8c865f07359637700619bc1d30cb2033500eeed2e13815e6b6ace004a5ccbea5ce7763a7fb3f784c902c03fa5ff63bf150e66151f7fac1d6087e9f7c2d5193d39c57d1a861953ea07a186f27ce233feb459466ab3d187853f7508ed7fca69de0512aca52ee8014cae9979f9a3920a15c59b05fbdc4bea17b7a661d9c44fece7ca07668b2105eef24d40c8bb41db986c66df13de4bc8ff8c87654e275ca61fd8b6f6e37ae284879b72bb1bd4ce8c7ca7fd50039485332dca28275f92f01ae2058ad071a14cbab48f17e817730c7942375c593b46bd36656a72b768bbf53107803329d7f5afb02fb97075af3b7ec9aa3d1d6620291b4a476f6c8d633fecc324eaf3a4c966d1f136861d5df43b7607e0fc667cfab582c4234958cae034f487075e7a2b5d58e2baa212a4828b7ad1b77a75fa2209053923c317d640b4939dfdabb51df5ce2aa504f064e8b0f94085725abd1d8f11818b21a9941c6dfeb5f6974853692d0ab4eceb4199809e60e75c346db1f557e657cb0acea202f095de6ce000a16b68368ecffa2dbbc55c0a878767f27f52964158c724131178ed6a8455b8625a997c88fdba88f1f5a46a6b0af099741f18681e6dbb3e614ee587053f1af42ecde4555e496e03773e4632fed4cfeecb862a310cf8e536041422a9a95bf201b3ff45051402b2b3b9734bb817f13d826697b3413b413321f5024a53c383cdf7b0585100a323f570ead8b5ff017881ac8e15120f9cdd444b07c73dfa3f54b2975dbabaf51e8222cbc16d281d7c215de90631ae231b84c4266f3cb1366d06e58c21ac053f5e36bf07bdec8d0b252294e94f96464e3421c699a1b545740faa5fb7ce9a1d4cbd8a409af356bf17183ff6c2fe17dbe29104ad8b4d196551b024c0635a36c48b5eebeec1f9eec10b2b3638c7943030559a5ae0f69e32b1f79ed63d1d3f1901a841b7f904069307ecf3133f983a3083405870d8918e75750b3b902c8859183ce16622dbac00f0bb4bf185fc1ad03d354571529b805db5513e9bebd27f356e14ae5c6134952345dd46141f580b3daad7def36f75a19d0842f1ecc6107e8ea4cae01e3bde36fc3d03956dc32535037da3539609b2403b06dc92ce6e636ae8953ccb59774f6eb8aaacdb954a7c1474d76fe427e2cf11968ea272290aa803f119779f33258ec6df5339fe9b62eac8790694d0d657ee185315d0bcaf9e5ba9deedc867ad50e745f9403a9ecb48bb061be57da7f8a5e44bae94bde7f573ecd00655dc6240c87dde811d1dde36e0561dc810519b9d54f5bcd8a068f39050dff98dee310550ebc5088a4c0e50db7159667e4879adb66d452821e5faa61aed0678c1a5e477dd06c489be91ea86f958575cffa9731a19256cbaf69e4617225b103d79f15cfc7a644f96d47aa53a6a5c9cd1417bded65b382c0b7d888c9f77174b233a8377102c4d57abe7889aabd95cf353010519d5daa827798eb882f89fbd0e893dc6659effd7f89cde04d5d08c73fb1c45bbd61466676b2bdef8f1b05dfd7ae2b60665b6f98daf0610c6b6af3b3bce4b32d9f60a9288524844d72f011ff6075140b8a06d69d3b67575f20261811634f5512f00b5cc816d64f0abe697733d4a7e6033043f0437a998ab9f4a1df61a78443b511bb1374bf0eff0de66e79abc42b0d5266d030e5409fa1c2c352eca5a431ee6d9255588281366b5d84b31827a1070d75632295548466ac46f07bc486d70e2bf9417aff579ab4c7f970acc70c06df1194e637b72a8f4ad97c94dee328f23c7505f69c8617975d55962f624de66812f652237a94b46e92d82bd9ab71fb5a48d957f6c640692dfe16106509f77e4e6fa98bad59225715ac79875a7a52c15bc87439757507941122d997ee92bdb473116f79e10e33a20313994d7ea7c9b2928b024c4b4305c1ec99aa1b83f36e313861ef18ada4897e8e7dcacf658acdff7c4a339b72386b1d8af723e97d0abafad4913caad4864ffe1646d61ee1f42a48b9f5e7eb1909dc8ac284ca3ec4e33b03fa2adb8b5aacda5937dee8fd258f14dc1811ceb385a3ac5bc439d0a370acd19dd4207b5154232e8b8a707c594b9b422f74997da0c239a1fa584bee3b85850327dc7a81e6ed12c09b6938f5670a5bff2e4ca39ed7ae2de3fdfb02a7317f92c937692c7334a281ee1894a7a84e25010d4d26de788ca39d9196db0a539dff9d5806c0db2dc091d642a99c644588b0f03361a7eaafb75dc6c080075d94e8d979d85ea888a1b8f5dd9ad6e86057148e248fb7db0d8cab57022bc7b12c1e14417583d2e9376f27e60723a6499a8060458ec82520a44fc3abd45740b35bc00357c5a425314d043567d883fefac397ab41e5be9f8d0a9f9bfb0aad6ba5322d9858b75dcbd50380535f0b006a31698d443c9fe44ff3df842c46868740b74ed2ae83807d595ff1fd6f5be718926622444705147ae4f6804dc25a86dd700aff0e70aadb2cc1e7600661f299190d8a48b7437ee67e03ed8a4e6afe8b3c10624a4ee33f3e90d1981917dfc7595a9fdbd02daa9110a741d37641c1d7348e62fc379c410fa17458994eeb0c041336cfb9c6fa2df2936832e8571f782befc674d3cd7db89707ed37032783f533019503c91dfb922d8ab75e6aa831b0a1dcd231c3eb219f34eec5378311d3c95cc192e9417a3b77028ba31c1e70a1e81cfa2584b6aab211cb6b47744d9f759786b3fe1ea6ddd0c9ea64e98d12060c0b8d3316a737408bf902ccff79b0791bc1592978cac6047c88a08c2fbf1921529537499f60c0a10f544aebbaae5a4f3fae24d55e0094cee174a21c05695f7c6f769ed2d782c624afaa8c3b49d7f8bb7967c479279cfa6ca823ed8fa7d2e2bccc20eb606185e997ab8bd7d967ea651b0fadf333065ff756b8b720f2eb5ab8a416fe879a9f6d59339e44bf2def3a8f92c93f618eee954e27025927848c4cddfedf7807b56b14b6fe2702996bcc343664543b3143221b737a4449b63bcd045aeb55198c8be606fa9413028e350530c52c63f47833d110cdcd9f043287283b8baea0c239cb839760d3f65406f049811edac9ff92ae8ed4a0815fecd125f1de627f65bf92ff183d869823fdcdc7ac9485efdce78d7649327088e6440ff374bd84204d0dabbd32e842e1af4c638f064cef85f6899582451d55d3bd30784ed14376b0c919b7d2452cf1bd70696e01213a8a6a2610cf85e7a9511f30860e40197618a8fdc13eb22a6469ef076de7ceecb6da406d5027e3b300b88550541fb3f554a6a02a48b78d8a2b45b98fa7c310268fa8aa3028af26676163e09bdf839275e59758d16e89d8dcb0f2b99e3dee1ee8502a4ed960f12c88363a04a99fc7a6e1910686225759f611563dabcfb45df96ade4290e5795eb5e7bfe767d43eb7d06bd5db763a290a7a5a027b342824750ed0c344d02d95d8e037e9f4f917e98ff6a522840d484f582bb98cf59a5e477d6765721c8435715bda4d3b35693c472a4905ecf04158b002bfb406a26ba1a4b4697b7eb8a10abf77287da315dc4d8ccb72d93feeb2d0c328a6ef740c116d4156fb244cf44b072b9a47595fd90b9bc4e648d79d412332107333a8db7b7cacec3861dd374b658269167c3339c22db4704d3f71bf191386840774315699dfc5c0fb23e2d49ec5ae08ecfa4964fd5fbe8a78ed36af1fc22629d739466235b81369f8443c57da73ea12d3082578db6effff935dfb1ecdba23d433f26d221a5ddd855e4a31b50fdf624dd0f32f68801b29c35ce33418520d67ae571e76abe27e9695140ed8b3029f8d3028e41e6feb97fff7725864b23e749de0c886749e7d9e76cc3f786491b69a2265761f062ec7fbe1dd44ca68d6111f7a5a7f232050e8e7a15dd22e615451872bf944df7dc06112277e8879078ca1c00cd94c06835326a8f706a3c85665ef879f5ed52440a1330d27d4b61c6b96144086e41ff619b9d823ce8f9a77f99c08cf5d6d725f971e544949729f350a0995d7b5916b7b5bcc2f3fde135036d8e490d4814cdbca7bc841c6f48ef6ae34da75052a9a26874c7fc7ce015b9654c5ed49d2a2bec7a7b9a686e23c5cc7a91e1f3b67313cdcbde15ee588dd02954d2076446afedfd92abe1c563e13e7802ee6932fd7e4bac1cd9f12743b2c6b21d1f9edf1f38da38e5aae3d5a1ed5d3abe86f21eec09ee596b509bac3a6dfd4b726bcea79c85d62849ba53de84c8a53c68285841fd2f0c8b1992aad54fafa56848a261f2e2234bb8752e5769f2e92957fca01e539cd7d90b72dd3a95d6a2b35bddf29ec7d1a7085933ee85ce526c8674b842ff98fcf859bd749f1e46e98c79ee9638d0c0c7c460fb20d178a9fb9846134b14772d8052eb2b81ab7cb6cf4b7e0184ed194120bef839de6ba465ef6801a31c85af1eb230f77ffe39e5e6e88233922fb8ca9eb6c97564eb86d2acfcd5cacd63ce5aafc88391aeb47dcefec668e90c3242300c09fc13b77f80c0d0e3227e6f24ba3a3d049819a86957eec0542f86044aacca2e045a6d20c8722d2f2e32d0e7f41c00999156ef5e9a834bdd6d4c347faa03bf49ecd2e624e6180ef686c337d96e2ea273346fa2db2aeb11a65b03f84befc505e044f623eb89c5c0a76462265edb945dd65a91b66b327823d9dd5157b01c0f2b9401e2d1974ec50293a3d022c1b477e7b32c6dbb0cb1e64fd156b17d66e369dd93f7260faf1e30ca38b5ce7e26e3ae2e2b5c27fabc49375399bf2730f6d01a9d1b649d2573ceb75813217a0a3b64552b78fd2130c258a133ad235a8abc12e57fabbcdefd6fddd33555fd8d01b0e4c020ebfb1363a2d78253ffc3a7ee229e73ba7b77b9253077ae0a3f271238a5d37133576c7b5a690c0d598a874007e73ed6d0ce255c447ac393e801eb3a0f337dfa9d9517a7a661921ae99d5606887d7010fa420093ed7af42327f9d4719e11f1b10b010a14685f2a37a155bc56c1bbac119a1ed0ad4640bd6a629a46fb18ceaccb52b63b4949d56b539c28a543509841b469f7f00101c48c89c58c9202b90bd9cc2009a7799a93af4e8b7304ebc356203f1e1b2108a66ff5f5ce7481059b0d33608412d57a085bdacfe16a45028211c3a3a8b5c8d61af26c7945140421267e83135c51a10e834050f35a2b804db41b0bb0b5b8d0e3bcfc62e79899fd5633c8dc6a0cde89937c44a9619b334d2724c4c234713f64896c6edebc66610b74ab6eebdd1637ece95fb7882a2740ede222186eee099af43207d033f32bea86d775c46d96020ed9c47cbb28340ba979ebad0a2a16b96b4f65dbabf11b2cc98fbc6a0bd80786b0ceba92a8571f9f13a8f22f5ccf125c8c5420af7a664bcbc88401e4340f58e49de446b0f5116f736258e83f220087a39f9f5dccb045a7fb109297eb6f2ebc76360e8122ccd9d9beb5e30813b6404b80a3bdec1ea64dcfe5c04f3ce77138e5686fed03056b2ee3ff3db2308500f83f6bc0b008ee35344ce0ccbbd604b19d5eb1b8e0b759a2ccbf5f365cfd560ed15b968fad661691ffae0d04b3a583cef22d0a8ff95bf36697f458a339a2bebfeec81d795140bb9df5fd8b83e75677f24303b98922d9fd31ed31950ee0c93a2560181aedc73566d77c46c932fb01127f95215830ea04ff53c861076d38eda62b34424962b03402593677ea3eb8958bcb308aeae354cff3e434fabe00e2739d83a995d07f195e71bfac9c56fc15453cb86caef01cacbd15c13aae5aed17b5db42e3222d39cc07a30536c300fb0ed871ddd6e43f92f27d84e2a87b63b4d915d728c11b8bf3601e0cf4e3200e9d8516abce43244cac237eade209ff3858807d9025b57339adbc83f32b9218998b4f4988d0f4293e4dfb4f20ece587f45c856b796f1eaaa6d08f2e60d83ddee1f152ea469b9c84adfd0c07b21a8956aa3d6c5adfb63f71c87f5055ec6101a030abf738580dad5a85c16dde158ba16ca36c2ea0f12c7f14446fe85580a8201bafd1fd34a838e50a8ab979c592261b8998f14ae462de9055cbf7b589692eceac141f570cdfcd688326591dceeab9f0ba5f08c1bfae342e6bb6358cd8921c9d14ab98e3e62c8c89500160cf240c9c79cabcb029a8e8ee86e2770c22477579bdd7c93f6f011a8e289265e5cec87dc234552a01d4daddb7cd65a0c3b44df99bab7eb0005e6a84ffdf76537158363ae43bfb97afe206ddda0098b422cbf374f7e89979be37d7f9b9e486971bb569d4d44f3bc416bc7fe42f70e6c1417a0dfcb5098d681388187917e5ecc4f74aeca58d217e039fd8e7a6fb3aa9cb294248785927f7c04d3ad9ef0e4506d2d8ebb13faf950b90357f4081b1b1557c124f1644c5c5caadbf3d9af88117a608767ce88889d6598972d3e8a128b8abce53415f3022b6b52761bc97ca45cf4c5f5b93ae6e3667163d124905da8bbeb526f73642036ee2c103cc7909894542c17fe75e3a885e920c459d3d9595d8ad5ab4fc97baef1c5687742dd98c36e5df6575330ec740d5ce006fc71967f46408a924f8928f3676098a0c4b85991cf18bb69536c0e17e2fd9a2373b99f290944b3f73a7eb6ce75c24af5bbc85b7c683e4d27945bb41ea0f59ac590b1a8ea5c6cb2a5a51841b88dd4437bb93e84296c400c85c4b7e5fda405f1d7f2315c5799cf75fd541498322e15c7e4c187bae135c54dac601e55b0d10877c163df958b0b0e1c51b6a7eff94bc35f78aea83b0dec08ef396b91f7f02f32c6574cbdf596d33cb55938416df4778a926d1701fee7f6d6a864adba333226a24085e9fdb510d8570d93e43ea04ce59d753b11013a9efe6fc7512b841bd4c42cf165442aee5c26fe379b64c618f6174ad9dd57b8ff9d831d52322f25b1bdc9324b22084a7238935f57fbc4277bbbab286f4558a44fb56bb39dbdb5e06918837dc2d5103a4524d2c1e2c58a2f5e68c6bcaf436eaff622629f964ad870a30c0f757dee1cc192bc435f3a9574847e28a43659c0fb01b9ff6b39a64fa9c2a32726d94486575b4febe0dd351d8aca1a8ccff851575e030690944c8d72f83bf902fbbd056c23a4957f3d1ac70edc296f022b5b4845b7b3e921fca649a3f7247366ba17c6eb691cf69b06f194ae4eb9162f1e5f25a1a986bd5aa7e0ac3ca63a1ec7edc7e73f54c11ea0b622f739b3ef527467368ab3642ed8a01c00709184b7026315116c5c1ab86e72803a7e3f895dcf87ae7e7132de340b6a3943e990556025d4bb7377af304e7bac545459a60923de061dc251c5e6b67888009d5e8aea73360c67669d9aad7b6748dcee9e0ae67d5cfc65ad3c8b250016867f41e62889368f63c07a48dfb83b72ab3774f68a24623e75d35ac018b6e991a2602462a6019359bd4c42787fd1d713e0e15498b678a9acff9a7b686b6615434dccf1933e211aa22f8cc72ea9a56131081d00b0961a9e17166dc33232c940ed88c8be01f618b4e8c1a7df396f2ab9de6ab8f8019ce894c91a1bca52e9d409307676f45f04bca71e9886172602c0a9b56692f51de9acf4a3f5bfb4f6f7870d768755f3c6d0e65f58e58be5b260daa7c3e73ce49a2c4ba4b37bd2a108f3d895093a093b2ff3749039e585400187c22b718205b2d2da7827471761bedb4b638a421354c8ad4032ccfe5db1067c085c34bff361a93521050006f8ceba0b7d4b2bb9f304d6a4d4228ce77a941b5bc2b750669ad0317d79e03ee67839f71928b31454f70803e8996ca4954d9b04daae8d3f024031082da6398bc97ce28f07ffb5dce33463afcc4f6fafee7211db185e7b94d2b84e710c213d10eaff20bee99ab5ff6b30e1a596075b891b1ce35b6803f72d5dbb442d6f5a8031b4c8d1a328ac2b42a3d7d974c1fb8f3b33cd0af803833bd0a6a4466e623ab6f54d1787acd5a90113303d023bec2e38acd0a297bdef2b810a477f05e72f0b5ae9503a59f233c2e66acecef96d4b3b8d0f9f103f604e657a873f611c6861c754115283a876e66ef00f3abd91466296fdadc65f3e11d8690b7bfddec2604e2397b44a2cd9d773312ab010b59ec04a0642aef704f7044de0255a15ff84c4dcf3b30ef7eb63f387e406ab82496de5178c960cbcecbeb899b6a19eb2b9e09ea0cf636dce58becdbb17fcbb8011223b70a6921a4ffd9ae594e8d659a2904fc868775fc5a1e24ea4e091759597268ac14ba61f85b008dd6e13a076a7d44fd289ab76886872665f46fc2dd20c25db3d7414fec4ae33e40b1bb858af59229e4388e3e7d715aa68ee82afc24d886d18202478acc2854975a600aa9cfebb5f74903f0c59c6a560b8b36cd7bf7f133c482c4b108ff04673977b1aff48e6b41041791115f4e0750dd4ca6003be9a6b721dba1f669350bca687558468af259557e8aee03070f1f36b59a5a719aea9531a998948bdcbb33507818472c420c24be33ccec2adacab98ef4d9485350e714f0dfd660badce61f2a73366a5744e6b2bec9caeee1a2dcac76f854fd1b6aec82822b46340cfa3190c8a1b7d7fad57e437afa7bbc23c2feff6eca38293f177c8a28afb6a82fb9835d64289cdbf726a055a7e8796eebaeecb5d1eb8720dbcd8c38c633ee15f47fadffdce9359c364f5245b83e40b0a258daef8a46d671ae9811f9e46701c4fd0794fac0634c3815bc0d5702753cae2c9638fcae4b420e4128c873d6b47501458fdef17c6de51d42de78290612a53b4c83ffa38fa967c7bf87f5221f4ec0e3cb9d4b40ce04a4443fb74c2daf28c9df893cf7fb8a0ef71279ad6c6218633b46eb7ca3296020a653b1e550d1ccfb11485a22567cfe9c617214b755d656c0cf064ed4c4e65798372804a6796b35b56a4220426230e4e0150f695a2123f326cde7def0c993f07a62090fec11dc0fa1cbccb9e52893958f6199fb7d9a90f3f32f6a5b27b78986c165445b8051948221477487801779b636107aa7d8b7931be660e0f10c412b6e55333a4a0cba6610a1f3d84e76d7ccc54909f190ebc475f54fe500c18f13f94a52d8c568ca4fa15c818fe9fad0c40fafa8979dae2eefe7a7b3218831804fd8d55cf06fbe94534dd30edc8e5192a370d9286229e648ea037cca7917ce20bf2442df00764ad162a58d3ab2ec77d3d92de45c46e97fd0193c01f42669bdb8c4a60a1ecca920d1a8384bfb503ec9f5a9c28c153fe268ee57dc918e4b3b8a7ab6320d187f70b435f5703eca0da2f5fc20542ab0879e1edc0f20c10b47ebd6dcceeebb6dede21bf1b2e69364612593cbe317d7aeccddfa8649d2838c2bd3e922bc9789b5af74573cea0b28a85a8eb9b2289ced93b28498536a52e65775d581b5d2774b05e5f66a4442ef76b882e656cbf564af71af182cf652562299d463ad3bc96fced681d510ba3be2a6c6839055ea966221a99e58261055d6fabe3fcb632a63bd6892e70ab98ec9840836849ac8340ebe8635640ebadab6cbd56ee35b4dca134372c247cafe796500143846e3394d77ee9ae73b6739eeb5aae7ef61738c0abcb231cea8da7b3ba5cce63b21f25879551725db68aa5909611d29348bdbe8c2ddcfd6f7770a35d1d9c19393cee4d8f8ab433f4bd0a66bd2d15fc5aa1135ebf61226ccff5a76d28447db8fc27de8459f53a7653f5be58be930781d532f48c16247d4df0ac94a23cf5c03d686e6a3fe1e3e36be03d7db05964c3ea5b5fa0d3dfc55929f457605c09fc42d04e9ee0e3861d761392590a1ad40b87319adc52486693dc076303ab104acb2a92dd11342c2e5e2d03f2b63a8292f5b527b6c8df2bea8b7c1026e75a365347fff6c5971fe98fb9d4eb282eeed10e340220a853249a11457b6b04b0d2290a6e55d1eed60011fac298f4ff50dc9c28713cc677424013d4b5a8b2139823e3b0df3ea0a688082f9eaf2970c14062ae2c4cc04ba21d54e51117b07327346de6e182a61f3d7bc2f63a5a81a9a05974551aa7609cdb6284a081fa916ef4aec03bb41f597cdc4bc5545a8b683c6404b5ba37bbbb29c59dd21a31c191455968ebfdcc6af224ec32be950dcef1658940816eb2dc90dd7984eb7844a790f2beaf35e7c48a74180e127ba88f8f61038938c3cabe276b394e0eda86201ebd813f6cdef35138401b446c2cd9dad1c9654a6a37c21bde11a5b780ac3c02ba3d65a6cc21e6f542b9bfc6b925eabf7d9ce73b3277a0c07c9bc7b7d75dc6841c2c9945179c6881420c625ee2e1fef12d2108825cc0993de952d65494db764e3f4c0c150c69464bd4f0107e06927cb87e1e0e5031317beb8185e53986d001525ab87a395bd40773e71e85741349e00d6e7de0f9c374a8a7f521a59999611e503df6fdb8f6df5c2f98aea05e20047db77c04e4c0f651beda48000bf9fe69d317d26c5da936fc4b369c6b1cdc15a04a0261c8bdc9769d738b052599002ef2a956868af7ac4c5ffce625efa55c961f6ea87819e7699b385d7c65d013bc52b23929239135d147034dd6ec264f640c225d553118ea17d7612bc69cc28ced5394cbf43e259f39ac25cb91b4de9f4ced1717f8b58ac8006616fcc6c0cc754d616cebab38edf872458fd867e5c02ba0f3c889a9b5ec24500eab15b2d43619e112bd49bb4abc6bf9407422362536960db0ff9ce54bdc46c0dbbd42e4426b5881c7a0f767920781ec3b99ee1f56b548db807cab9c6d42bb8b59620b7c1eea76cdf123583ebf212e578d63251f088c95b9c3915959ad73418d85699d7f2941f312a5f420cce466a45a1628b9c65696aeaa2ffb5cc66f2f4914880a5dded67f102c05ff580d78eec49b72e5c87dc8217253608e148b2ac7c3ce8ba384e70844690fdc2cb566eaa32e9128b39fd1d42e619ffd9dfbc9fb33a76a1182927c1175d9c276c3ee8bc778b5b2585e0bf8488a9c6889796e0cda6db3a50e4d520bcca2c72d3f08b6bda25998515494b7744e51e494ce0fc825ddd3d7a4f180ffbfcfa08475f6fdbd86bf1286ae5c1c556cacd6eb09e1508492cfb5332ea355cd67401c8f8342e796fe15eb1b1655ed22577a700c7904406080a87cef9b15cef740619e026eecbb1b19d55c34ad5f3eb73635e90251030fd819fc107884f20f048c2dd6ac0cdecde46147ccc787ca09100710e2a2c295859ae378187a680180000316fae751e39061cd918c547182cebca7e6eb94b5e50960fa87bc0ec2013a70978acccd67826a8a51106143344f07cd21e930afa85cfb4568f1776bb00280b423fc9bf148c8638ae71dfb68243ed228ffc19a5ec1a7661aa88bc80f5694d87998f43ba3a6939c5c119e5eafdbff9c0c44dc63e21b59b9f14f9c971b1cf1d65fe1a16281c74c4743abf2eb5f6eee368433eb7de132c0b5e4be5ce66893782883aebe7adae7c4b24a17997e269eafd248801cf02e82b68a0c4070caa38b18445a7ed085b34efb135e8e91fb9bc5990d6e883a9ac059db7d53af6fe44b7d191944bc83be016e55a4a7247f19bf8678b5cc969b23edd3f81cd17d81540bc9dc2000a31becf8fe9216ceab594bcb4ee01e3bdeb35e30d3b0742b6299eebbca4ea903b94f24c9cb3b015c04044765122a734943669a071a6dfccf3e739b38b716360ed0ad422339b4111af92eb59667e2b60fe5d4eb8d9196a04b43b3ee7da54100fe391aea8ec80f56da52c78033b59d6f7c6a45314fd084ef331d6e705780a58a8b30dcc482e7c0ee3e7f54541c1c57c9df6eccf2629d01faf897a19c559669b4e047df3ec75cc8b6a529c02acd943494a41e30b82d1c879119d080d1b6ad2acf661c65d9fd4ee791bd9619869bf7cb5e859e588d88181c95483d38c690dc58a181f8d5e0b0609d83c9288f748ba6f177221ca68eaacd5b666473229c17b210db8119bbf489106f27d3305591fc437911a97124b229f5d904c51dc947c28b666948af4e9c799c8ca1b51a05ff9394d451e5882399e99abb2ee688c7bd2cf758b9e3b020c5c4501b4331935e13560ff579545722de2cde0ecddf49ac3ee9dbcd36a380ba834fefc48890a78a1922dd1080818ee085c2152f71090b4af5e4c0528cfaa1f0211885a35bfdb1f108317964746260ba3393ef485d7e7f51accf1501b7464a28bff65fb41acc9f83e9f48bf06701466cec0c7a5f786999d3f7ca92965f8b2ad8e132a376aef62d761b2bfbbdca9dc63fc0903310e1f4a6d0c1d32b9d3f0b83da7fd88da645333bec66c933ad6aeda25ab98c531846b7c14dc7dfdff5bd31e1f060bf1b31374305ff8a014a295f80949dd6918502b3d2b00eb008958fb3d73b1d7a665a366e36dde3f76f35f4e1fa298893baace6c64a522dd2bce53cf34fac844ade82e469b2c588f02aa421b50410986860690907ded8423c890f525fe41e909238fc24ad288d1debb650efd21956663adc373c45201a74537895ce7b9f454a80c77f58d7d2efd26aa3e58137fbca7ff781414dcac5f58b93ba379eab36efc45dd4d63884e2550809ae1527396ff983b157abad5d73e1f4150131296df3f06656b57adc7311c2d66a56c28e68c23a0073a70eaf3d0ef98055b941f3f05ce546e58980140409734b16e7b074cf36ea5543b8a95c9676aed9fe37d944e53c87580e2231e77468037e16f37ac82840dacd9b6b3a864802c30144d7b962711cfd2aefe18c5f8c28b89709b5bfcddf1ed68b45a14c0053b41ccf0fab1ce4ecd948e17b97b55985866a13d19d60e88cedcbcbef32558420a3d9b054fe33de0971b02f02afcf92102884dc205e37ad031120f5d8689ab9f0bf2f31b3c4631c4865099c4b5927626e1c86c2637ab87fa323c976b495af5642c331aed81917814615d11e48d6e82904ede15bcdd6f1a7d2c355ce37f37d7a1374711af05fc5191e1331089dd9f50e3087b4c24493ab201cc5697ff163587721d22ad8bb6b084b3cd0b688490ff56c6d735a43f681ea9793fa52b573140c2d4a3ed7f2721d34d0eae32d910420aeca1011099a65f7a2d7b604faed9ac8cd9837b7c86b25d81b32185f7dd521cd718fedc6e7eb7756fa9c0118398f63eb72b19ba4add22aa6fd50d605802a66214ffeac3b9618cfe08d981195238d6923b3a4f3a535deb104570c4caf0dd05c907929dd5abd461ea40ae93f830d610aec4ebf2571bcafc7ee238f97d7a215a85cf2a85b328ebac3e932871ef0298e224ac303fb74a7ab725098763321b792b694fab4db413a2882fe4f923c29cd0ece501fb8f83224fbe55586187beb582208c05d499f1fb7909da08ac28891ac359040158f523c2c969f7772a4561876c88cb8d7527fa8fa57fa9268a0ed8ca0d7f2b35056e668dca52a154603830fe19bec794ef9dd511106c60add5f3593f4abff7502647e949a3da382fd378c3462a333769a693f80b1ad5aa8d72e6bfb8ded3cb702a898fd5105e18605aa632b02af5ff7ae01cd53560e3b288cdf4f5e69a587f6e5016e7f1acb5f64e15742b088bce76a651213efec757a48731f34643a448b57f2091fda83127d67dae468e411adcc40c4ff990559bd889e75a0328fcf0280e5c36c713575ea4c74d04bcce7256276440ead054067bd437df99c65a9cab2a2608214173a3a7dfbf695f236821cdd84ababe91c872f4e3341a5ad4195bff0f9d1bcbb5150c917569356dcc7af201ea0c04ad3bc63a0ef4bf00f5c64818789d44abb572eb3dddd92c163077d55c2ca23ad5a2a7a5e86f46dede55e95cd47a3fecb41c71a34dd93816d11fa1d60faeb5dfd5ee17a011035ab63f2a378c0c8e0581fc1731e4bdd2e39c5dffb44d24563fc4e0c5453cdfe280c790ee5e8a31a83092ce09a8286bd15affe2875b33517cd97ad7337c9260deee5cd7f3ff21d3b78c193081dd01bf443ecb92bd5b4406f71ded68c60c5ed0935d72b2f68d60991f0dd7fbfcfb7ca221f7fca1fba0bce5a4b32cb34b51528b4fe98ce10b8d26147fe9d706a9721026bf6e61c9018c392539129e55a435cc1c9249205e237f02916f0c94276d3ae8667fd1950d6bab2feeeb3d0969213d8cc6be1c09901e0448b58735cc0fa2efcf713c6326d893a3c75bc1ca85305ccd900d3861bfe510d4134934897d005c43f77112bc71868ac141e5970330a4431f973d436f723245138a6db8232831e893a0ce28547db6ed0229ac4708104536ec9dd7e5b62a7a59be0d0085623dc84358024f38ba92c0f5433a64b10a6a6bfba7e6fb806bd3a08031eb5794ad8df52e3fe9690f6397492a19658d2a6ba7ac65e94f4062622f9b6155f22c82a20d80bae17676b9f6062d3fe97fb231d18062ca02ae80228d7cf5e1087ed2b3332fe463ff27c063357ddc24ee6dd1248d6f1e1e2f03574119dad35925b77dacee4d2d6a117fa51a96021d43097ae7e5f25a1a98bcca67c437994cd5ef3353c2366bee6037e31eee9790ff94bbc0a8620e4c924f7b59fbcfe2445d1aded68719cb1b2a8464890d4389272b10bead64416a8d42ca1493e8b5d62d2fe526922c7e8b11a42babe6d29aef1acf13cdd975ce2ece4188f86ab55913200219da0b61f41fc36756ac8b6e884b5da98bb038e946a77949d126aefb3a2da234e9c808da89c35a0a29f4d6a960093d2978138271d33c7d007885038acfb4695bd28af185fd0e011ddb01b2784f12f5f3e0144bbf0701b215ec6dc6fd639afd561cb19a06900ae6c7aa0d7f72ced6302fd55746030b284700f5e5dd39bb0eecd750759df2ce7a281a1ec7311fd284c48f7d236eba7798619f74038853e56caac068fc76f5397d7e012c66b560a34917d1362a1c4d5094b801ffeec6c31931121a3e6baa2376998daa6b8e3f8ca722de37471e3ccfd470686e9cdedb781eeb0232b22df6b0b87fbad355ba51408d42f2655cd6c5974af6a0db439e111db133daa7e6a23a2b3d75f88a2e4a99aad53467db69a2265920bc43bb40a27d626e322b09e2be5e90db9062f6b6ddbe290ff6ea6594b667529f4e26c25563843d0c738ed94369ee03fc6bfaedf2953bdad9971e541051779593b529249e3ce5b9dd1b6d48528120975fb4f989ce1375320915186f1eb8518fb3889e7e69ea1718dfe96d6990b2b504319a211cd7c5702cf48104acda00bdd44be5f16879961ced0fe7a1edb696d438865bf4eb519693244b36a730bf5a9c4bdf1b30c2a8fd64a0c6dea28b0a1bf7e04907ac0b175003ddbf69480569c9e96445298db48c5925e39cd4ea12298a682c6c1dd8f32fbd001e7a3237c6f1ce966734628653d8c5457d36f8c3a5e08e11e6acc54418d36f8e2109649a5fdb8b0408f1edd8fae31b63efb8d2711fbce5463ecf3d195f245bed9c8b78a7c177447775d864021f2545be447274d7912f5930ed0324cce2e24502aa31536144dfe400fdaa1c57ffdfe1c55082442d4c29e612708bce55420237bba7791928bfadc6f0bdffff87f6777c405b48b0744570617ae5b1340f12f41621f52014791d591c3b6ffa2f468f7bc84d09e52f30931e6364c8f5e82472fcda44909d3ab0b02982eea8d8a6623c9a0342a5b4bc4b85ba52b6432403494ad96a3a070adf9b65ae598cf854312080f997f11d1505617614cc21ed619c1e51de1a937cd19552d36d0a1f26c57827b0d632e14ce7b1d731c4187e40ba60b38ac02c37e3ace56d2f3ec9a17791b2400d6fbb9252315983e5caf33dad7ba6ff775c37edc966ac972e43f18e1316e2be8d2e7ac8d54a9a176a93b229e7c0e7b86c10441c9e7b2bb7a470b0c01af5ca32418b1cbc173a2f01da70a5d22d43c6e28c721f0d807feeeacb3949ab6fd6ab1ddba4c0e6d1f19fcef5e0f8cf42c9b15165b04fed36311500520805cf75a0210688c025590410c482145327db960d0f5876749465a74d047374fa39d252ca50c2c7c1dfe115f9b7a7b6094802b7813a934482e0a197345287bec4151b651fdc60027b48eca51b89fda3f13e988f4b025fc43b0176de099b5eb7fd9eae61fbabd2f491f877a85df6a056bb7ea1ff1e7a842e1919c6108e008dc27407b02a8589946b784ed85c4976b168ab6dab5b931899469f6fe1ba899360318e72f0a4607a8e778230e8a7caf0ecfd45f85b38b36e8057c798ac6f5dcd008bf389f6971d08066031eed6db2041818644b1e35476acc7302b696d28658cb78c1dcb49c40664ee44ca67343dcdb1782e2b65adb10de919580e2a235047368869eab5a34176dc1a206c367a8dcded4a5143fcf91c3fd772a528ef1b23fb1a76f431c6636c94b4a4e35f97ca6b2fbded9020e74dcb765193d8be78995deae239ae3fca7369c515277a3b1e8903b76a604531de154a30b8bf516c0c144abf62845f638bf7eadea9e5f0cd17d66c7fd4f0a803f144cf2bc4cfbbd8a797bec245cda2be5951a1cc37418921b981996a61f55292b979dc5b1d4e8454afdd40d4969d6a54ec4fb0290d465c19b53ee024774cc27eed229f642021f821f862e491f11087b600706b546bb7acdb6408eea8471c56b3d066ac157c30f21bbadffb07dcfbdd8ccfc9d3e4c658b9644aea8dfbf85a70ef9f62801a011178bd117982247cfa42551bfbf60a6d7982d104823ec46c0d4b8be3f9ac0f3be3071de54cfe54778ca2e5be823e77b406c690bcdc5c507eaf925bf35e49ddc2b9964bb137a7623e178bf3bddcfc0c98cc7583be556f8174e9eca79623aa9abf0975ee657628da381b79d631ed432ddfbc273896508b670af3d228bf44e9759d4e525de4cfa359f09284fa514624e3e9db2a166509ee59eefe991375fcd372460b238e91032c6cc5dffcbb1d475ce230913b619aa3fd9deca4d0eb9cda96ec1076b4ad604142fec7b60433cd4ee2e5749fc63a8fad617dc7d55a4670333f08cde057f7ba13597d50097451bd6f6ba0e7b8fe1af2a668e4728a747425045965e560566e0047cca072dce2b364ec4cfbb2b8c40acea4f2d0d81337807e32a934bed1d4cd9c7557b259accf56b6f3cc821d2ece2d791262bdbeeb8261dc4fd1912b54a5d0468c17d37626a1f6a8af6dcf9df6e518028ae0fa1054675832acfc6e9750397e05bf70d0cff2e2af49a7ff28a838a278bb9a6f75d73793df431be440ba1403ac463b864ed590fbdaaac932787f3ca2cdca524560eb69b2e4800f5e46d471f0040b0ca5d9752f9d085b062629f74d1f907d9635782a505c88e3458ffcb98fc596584e723bd4bcf661195877a332fd55c390430878d51c2848a17c6b642323d83110d202b3bab206a8283790679d4c8eb3597bce8b41ddcc9f6a6490d286f63cce0c35e4d23914f19dc502bca5f6a9f585a844be8f192275564afdceabf47f6ff057e4b3bbe7391417e48a57a2eddbe9c1fdb80072fb8001c41a68e4f4ea9891c61661a7b17d867f78eb8231601eb956afe70e5f9c287a04899bfe7453259db6e178616f1af6e15740a85896e647f704ba6d6923ff0660eed89117b0180690d3bf73da8daef5667c4e807d132ba23375605b8df92a9cfb394bf1d8b7568d18637690dd06d2a7b23e45b4bd4da2a2e10a382f455fe206a443e0cb464063a58a18a81b2692bde07b624146335c25fb4d296aef3ac8efde3f059358391a1ebb7db99c45f5015f9de77bf6e71296a63627f18fdf79f7b33dd61e233ff02a006d63f0a37b670fe32dbafda579b20b1e2be729a4fc6db1abe6f129ff064f02927719ddc382debdc06c01a0c4888c576184c372a90432e3f5eb77ccd8db42a112852e7861a718ac8421462953058c4f7fcc12b237b24d28445d212024c9e1d67776c0a92db5b6964746bff376cec653a064c5fef32fbdbb026fbbe11950ebb5cde1a51599384b586fb38407067bf9fab00074d466e5fb7bf82a8d25c3f676cabc37271cbed66d967ff9a4674bb8a57cbb128284af949e8731e00c25d1a954e402b4e443371780b3a8071271076af2a00aa465a2a04d6303c604e85ae925177d72271a322ed9eb17c21f5228f25d98b4f33ba1bb463fd8f8985c4ae334eceab9df940f7cfee5037057b64a3f2a2d9187f00758bcbee7da33c399ffa2d068a4f755c9fec14957d0b00c16b6180e4e738d7a3ac19a0d07f8246c8f5e80c2a57f9e6ac2c841bb7db8249c7e7bf94ea97f7c2898e44d1e0fe72cfd79b24b6e58a77e0c59c687a3d6a78cb182d9aa62580a942f1956d9d78b3059e7bca40c9de24a9f0793a9edff17e9aad24247010117ef1f0933f935a039a96634a18095443a09f69a02aca03892ceedd33cddf73a1c1ea878fd56982072b623d2df69946875b562bca9e2c0ce01edce11c412db81848c227baf610f4eca67791cd6aeceaf947fb5ea7ceca036262f7324f6d257d36c6017d4e36df465c50bb9a98419abbe553caae47325585af6a991274abed2538f0feadea899f430994ebd89146ea668b0b0bd5d2576a26b7ad5807dd13643622397adc9ba73a25b1606d1901f461001f18b0e0b03375a54de025c59f074233f6bb5905a8f71c412ef204834f10c3836b31bcbb080f5549c94734a88e8fb486b1a71b40e6a5050cbb3ec72325530298c9544252ac90e62e1d6e798753eec5891d10ec1689a41e2e6e4c3eee83c2b4affcdd9d1b56d07065ff80c37dfd915a237d955665796d9e85cf9a43e6e086e577aae7addfbc5d4d4b1b5cf9803cdc0dac1f3f28aa3c1a9ed9d458eb1ffef6c2690860c8a23b1d4bca5385c40d0c81d0ec4287dd2bc2ebb3421149c176952109de9e62a50fac3a7a3c313e30ae83656c867e41dcdd01a038ddb121097871cfac5599f8b5492be3281ba79a90e45169250d2e1e0d70dae936a912e33f865cc087b2ece5d04c82ef1937753aec55a350546dcdd0ba9322df93920bd42874f44e2502dce2a26a7f53849e8e2dcd8cedc783f8969f9066118f946ead9645601be3e12014638099c9c51daa8c3c217c0aafa5c2b45a166f0df64a38728c75de5076adce66757551eb733a4e609636e525905987e9511548d69b1613f476921f2bed365a813dc17b3eb6b283f80441d5ad5c971beccc073fa4155d951e5ee94dfe3fc8ac4e580f633315338fc74949ae62817a7dbe8805faf0ff608cc71eea3876c75ef81df40810675544af482591cecb12e2a0b1830325615fc36470db690121fedbf28951fca07965dabaf963fd8d278216bfbb800c8c7552c8b172e2e9915d542f30e8576bd17f210765436646a8d33fb98747286debd88c930d4a40600cadfcb8390cf3396791c49b659949d987c7280763c791542560fc105358647900224868a4e4edee2cf025b4c42012e9212879df77237c256898b1f1db7b20d2a9b3d27b2a3ccc5c8bfa5565ddb73117a8dda976da3f63c1305d1fc26430041e70439d7e6dcde61d6f6614b19753d6cdff3561e144144ffd0cecb0066424537de274ce2b4fd568a4504964edb8013696b399e37f0ec725aef418d538e1e1263cb4a1cdaf0ed2f95cbe5612c56a6b600786eb6f718ec7b2746e45d97560ca0b94e921b86b303e2458375d4d06d4fa05d5eea1423dd42ebba0bd57fb61321e89a392c4f3b9645e901d204a286e1b02117ec4826a3105c78c23ef77c42c8dd1faf6b8ebca947d15788e47e47e7aa8319c5d8d247a2b3a18f7652a728401bc9ac2f2e7124f990a351d503912b9de4665cc1ae77773b6dabb48cc74147dc08f4cb272bf4ba6e31afd81b7bf20967660f8e14f8c7d1d4b4ec43ffdb6d500a94c73ea33621ca6630fd69355fe8209842c9de97aeb86e6d96c8c0d6ae447a10ad3ea43ebff091277a976bd9d92ac75be4a85e3aca7e8f2c730edc7b90d72dd450b28162cc1d8195166886b99da23be5334eea3715af84720c3436f353c6b8681218080974c5067c394e7b384e345a0ff640b5d213a4cb0159eb6da665ea850c0a436d1a5e8fa67edde081f193656d6b365f6644278549a7d195e10321e7b409cb071d94c4039f90fd7a5abaa55abe06bea9850c8594da4c6c9c4a637b2e239b7477b887d792a32483b00fdd8c8d40b82264683c0ad3113d77b481f8fcf010525f59b2ef88be042bf626469f194e3f19af5d572933e92d5b9eb3dee7b9b3ce095dd6e9b781eb3d452753dba7eb3bab35ba7f69bf8613c098ae5bf8477dee9713b2d1cecb003da347b6d240d4cfa5d8a52949dbf0df963b0207acf1236dda56a59f03d941a1bc9ef833a59806e4fbee2817bed57c0233ee45d8e17e8a10e8e777e2d33e49fc5f9a9ab9bcdfc18bfc15df9c38ba3695b88619b810ecc00e918d27cb98e2c9b7528ed52791bfd6299dfd3a4b2e40eea172a2246b77c06e5f4c730026acf7260c868d9d604487987704320dac79b7c258dbc30ab50e48a1b8318991b5cc182468e20454ff069d0d420c49b6400ab2bc5eeacf1ae6a8a3610d3da189ac887301cb60ffad4475a455a0d45157d926294fd085f191492c57046224c5c41d17f4a7c1b17f93237120cd4ae361d601ea2d24dc8707313e1bef1ac5d789a0bd07babfd9d4c12a69018c1b4ec317cfb2c1f0b0761f204acf3099623ab8da4633d2900e41655f26c12e59ad7f0bf27a640ccdf27ac5cfd7b361409c2b4c942156afbbb8b6ae1f1ce6eda22739902f009ceb2cbdf346199bb80ab38f3cc1192fde9a628f995a8bdbfc6172a9b322d5c0110542a73f6dddb2d7ca7ce0daf87a8ca62efdde4b653dab246a88c8d93c410034b98490204ce88bbbc11b361ee03b1fa7bbd49c6f80815e5be249e6002f109e11e5258010b9acad4ba3b7f983f2c33418feaf14352bfe6620c7c00fcc2973fe9572654949e45227d3a5eb50b34d82be3998c72b4e5287bd387d9ba499aca97c5b42f8d7b56a36f4e8190e70c03afbe204e9c97491995508138854f5ef1d6de16e98b962a0ff5e91f7c6cdaff17a8fd074e1156f5a2979c65d90d115c8cb2c13434db12442759bd76d42a5f2c5f066a5839ef77198037e804c865338768027b933680fd431de60fe44635aeeb3ab49ee37b68e9ab2c3138f1b9dec6e82bb5189b7a72ff3c37767c1db0df17d08a573f8227e7628fdfc67ef72483d6488f288ca32f66fa6c83d129cbc32fcf2b8c31dcf11eaaceae28106220863864fd0d3503c0ee3e50cd14974160063e00e48753daa9c3002cd273a77525cb1dbd0f03c1b11557234429834485496374b5017a29b3257a0fa3bf014a8623c9080fb59a72e7d79b559c0f5028a19718c47381c9ed19ff3f2c195e67e1faef6485dd167554e51f52c7d2afa1cdd05675075d9c268ab6ebd997f45587cb838daec6577d91a7b5639a072a042380631cc3a936e306779675c89e101da682355ede5714e6a9bed206f8dab0bdae5e3fa176f80a6d7d3441bdcc6cee32616780fd8c886a80570ef95d8a0064ed131e0ac2c834d6a401d434b563b3030dfc5f33ada3d18373d3bf7c8b1190127556f57d0e33e691b0dc1d166a34532b0e58c34deff671c0860bdee25a32c8ca90137cd0e97f9a0c58178d8bed2cc3a16e21c6bcd08d1398fb87e72bc986c624b7951b827fc5b7d4df9f143637fffced92b20a64ad9cd30c66c5a741cb4510962dd2dffd49e9f7525d8acb0849e3a3075be707951fe3be7b8067f80c6cb6f703c5448a69309bf75d982304d394bcf8028651b3944c40d1b625dc09ca235fce6982bdb90c618541d28cf9bd72092e54f87a591188f7701eb9aff392c58b61a1f9037042d16dea18c92dbfe72d7093cd3535c81e83c3bf31554dad55a506afc17adb15e394c3ee7306d17edc1a61d0184199a5ee60ac834606a3dc9cbd34f106d70e3d6a35b0e2125f0bf9417905e1393d52e9f0f2f1ab5e6b05fedd63de37ba85c99e1be72ddd34dcd04294ad16d201967ce55727076b4be71edb5a1e87fe540474ed4f9e988d9314659b346c6d2e9e541ccd5825a44cda1884e95078d57cb5b87ff108ec933951de67fff8c2bcbb6160c8bf8a4f21ade2b949674d3b4f41a68f4c35769ad22e975e84af6075e25f5355e4fb31ac405042c05a06c25185298dcad80831751d481a7d9b12aac5b99d75ac240a97257efa18f859e703d0358b02e84c46a040c2f5a6e73c9193bfda4e951d0b9dde6e6c727e240f2243af810fbcf54b3927919c5cf876980a8721a2804859693bd1327f493660827e664ab05fe73aa13a405606429dfd94b51177f7e5e598a781fcba7ae4a9bf8a515908c51ed19c89f35aa8bf752a9caa8653562c9ae0b4380bcfbc524615b09724a0f2d3a41d48d56d1d01f4e8a25d440b62ce4352d6828a879d12e170a751878220dee4ea0b981ec96b4d6159470500625f00ec199d4a7294de57330994d4b04a9eb263c304c00ef030a0b58b3595642971db04516967a1d463f13807e9c6fb649705f59fb0a2658e5b361bfe43cd207a9d089550e20de606704f475bfddbfb11565e04f17c0b0502dcbde402f874f6faed638026b578f958602df40e19db5f06878398f4455982b9fa24282bef583089c582ffec46636a193048a4c5b7d197cf4e08ff33b1940588ce167d8ec87242d8970db1bdbb1c367a46914cf60a438f9bbb30606d32baece98f377e00f82c3410c76700fb62f9d6b2a76e74e2d4998ae4d6e627fce8f126adffa777ffd3da20185dba2b2a242bff3d86b6454dca40fc2ea72253ea852b198ecb810d6bdb5cc1ac7d40e3ec646db687acab6c2e4fd1ca75325caca319cd76b0f9094d4e853a1c2ce14c20289de48a472831cc8d6482b0ce73c0fa51bf3a0cf3f690f0135427482811d30532cfee29c0d243a9986ccd729469f9ee7814d1b6875708919401b19cc7e966e95fd65906a72483cd1e191dcacc3b6861b972719a8a0cf4a3aecd11703e51d3e05768275e47380d6d9bbac0f653da3c54e0ba184105569e7cf2ff38444255a7d6ff144ace7d4bc5db1bef4a780c7d53c0ee3f5abb0e5c85e059c1e4d5ba220f8fd14babd37fc1bf3b6e05b7020af82a57feb9c06f32e2a35b5e5a839d2326285c4e8821fa96e2150bfd8fdbc617d987bcf5c90f85a87c7be280241d83b35483e936571fa7954dbfd38460bff6a1c5fde8169817db6d4afa900556a7ceaeddf3bda6738d9fda9d30ddbdda0b19353bd0947646265bad1972eb9a754293368452ff5563bc0973034f9e25dee8baa200f6c7e01de05c33decec2cf49fbd9a589d8c92ec874c893060f9e4c390e1c72614a65bbf01953c20a9eda44e341f144ba044b7e0af26eefc68c32757ad796bb309e6b5f9cd3c57e3dee7618018f6443bdfadcc8aee402a312899ba25c09798e74315dfe9556281efad5b275fe40deab6a4756d06e475a9af14061216aa2026cf8c355385da94c963c2d6b07a28f540ef6455f4f3fb3f1630f4707788220ab9ddcca1e69b4aa1a15e6e71558e931053236511287a566d0940f8b226c8236e4ed5fc33ef801c6351638a93200545209c0f43392015a7b06efb1caa37fac7446f79bc1f74fe0b7039d72d99c69f22ac4fe3751327c267c8574634684fd12e54daa42e6e4b48220bf844a02e43b7c705faec12726d3a90a4e40be6f84cbbaff63d6cd1ec839e274194f97fb3527ac030d2cf0c021dcca758aaf9b8202aaee12282c1b001ffb99937d5e4255067ba3e9552d14e3620100eeff06d62952bf3ab133c20ee61e3cbbdbaf658215aaf91d59029cbd1f4d3a2ba28ff0b4fe0e30597f0f59d872b00a23c590e31d99a4364da374a114ab0b99b24788003e900736b1c27c0cd43ba6431cef8dd1b1655a960ddbe081186bc55b140e71f64512e7e2fc8ddbf5384851607abeb5c36927b9c6395756c265986e5462434498b169a9c048988a2a5be4e230573b3364bd62405a4798a3af26940774736fafeba773f25dfabb78ffb7736a42deb014b52a9dadf253c314813e39761ae8c78bed09344fa3f93787e123547085bb3b8a54e78c4d9e49060358b7f62f68811a4ac49f138362e9b88aa9207cfc861de96c58b0ea00c070402d3586d1c48df14cea1d6915763565d822a844b62d81999dd1b36d0c106ef1540e9368b7df9442dd0889c165c0b54b62ac0bae3e9c4efe413cbffa22304efef9c8f1ab555ccc0aa24229e4e706a871a67cd495943037762408b6fcef36ee601c1be7b888916104edf40231867f4c4b0ad9d89852865f921cf199667aec2d36e985c809f3d0d6a6041c846e1310afbc273f823608aaa70623d4bbc3d0ff6d9f4e7251f71008a9340597ecee04a79da9189e7b704bce8e19bb97a2c2405d5c145ec2069032f2606309fac4056dbb5a53eee50934a95202e4707187bf86051c068f33b35dd40134d9460a0c04484bf8fdff89935a4b7acbc342bec77470ddf7cc3078fb2ed48eb6d100fb5bcf7e4c01fbd2743764c0f88d7405c975e30f69bd677ebee3f9e1af0c672c4f0e0120ccbe0c2bb485df44ff7f338a0c3aa4f322fb17981c5c8d0b23c1c20cff60edb1595dfbe41549fb486780049ae43bb06b1250d37ca327e36f6b87bf625be8f70393076740996237c97fb699b77c032a29bb184aae525916c097fd1a60243dade287749f6c394b1754a714bb88ede6096505bf9a977e5019ec764fe453f3d66f9d3a98ecd5a9eb737141b62faca9c79c14c758559db0f4689b2fadd624d59be516e57c7afbb40a1d6182bcd4a7388161ab764cb202c675053c2fa9535e1a86aea53414a29c48d916d0492d403c60ac661566e0e0949a9cb8b9dd749b0c1aab927aab380e9c613e290c3d11f429a5c8c3b474fc8040538ecdb13353bad9e8b981272f21cc616b58d4b37fa1adcc96746f1f5649ecdc2a0bb2af59fee9c3a4d1ce17581f39863335d8bbafdcc8dd16f06b5200aa3fbdf11962128ac0edf0d8e9e8fbf504260929d3ce8790ab41d1650bcb25ee75e89702d5c44494fc5f52db9c7b6d93e56a40fe624f81de64e55d82f241de7385238743a0832c706430c98f393b8c5bedc1d3bec3c9e6ddf0f883c95184efdfe404d2d04ffd4f8ed54b7aa2b0afbe20f9c85b3ee59155418249720e592cd6db7edbbce6d308c0791f42a3843ea1ed90441446a4c2a71087bdbb24be000b91e99c0b67a9f5ed3007afb6e5ed39ef757c716db98dee100d9d1835bbc714c3cd00c9b2b53bd9da2e1ca00173401c94fe7723ce76411ed64cce61b66d3101026ecc6fc0f093b2f69841e15486f132030f11f0e1ac0785d4fd90bc74cbaa27eb982e5fe80c2b2bebffc411c5c2b24986ad4256d87b222cddad73dd41c60b786191b9feb2c07b4ddefee6931a0e6565c4e47627b3d062adda602426883673a7495f538d8f252857671532b162ebf640580117f25fdb0e7cec060145e6d9196881d9c7826b0961c928aec6a513519bb0884860dcf9157d95492965de3c3cdc051632e9aa2b058bc00ea6a2aee2b3f3b28da5a42b9d78bc38bf2615fb75711118e40729a4caa48f4e8a52b9b3703c5ba2794c5562412238c9bc498cdc5ad3e2eb54b74ae68b98c90cabfcdc1c92dd85a9cea6f107d5078f9926ce08e6621f374ebdf57c57a3cadc0846f1cd73fa457edeadda61ea9fa45a6476e3addadf18ef7697d1ab8930308d9fa186a56ebb495b7c9c08a404e5c5d8b1fd3a32dd4b3b6fa098d850674450dbadfbdb00393fe161b4875da0177ccd49ecba8bc596d864d54b1216a493dc957d55fa1b227249368ea0945a91b81f0bcab29a4c15cca0624cdb2a80f17205887c7cc41fd20d4923ab3c1572df798f3a803c2674e4bf6358f5681903cc1086ee6738df795fcf43fafb69057f36c890487a018b76b66e8ec8dcc490f3c229767f3c9c9e54a02b8ba1d3df9e128ac665a1338ce8ccca721ea77c157d97ea75f7a4d1547af72f07b912875b167068eeeed20fc5bb0721ebfce1fefc60b656f6d22af7138267f9735321a83b1c073c46d34e876b9d11c96dabfb1ac793c0663a89df4a597266e3e773a65dd0449af816bf419b6ccf93398c7623dad47862479f91cdf8802ebfe51880a3e80a480f6e7582db4b8832740087e568847beacec7a5ecda5e5efdb35d39b8ba1215731111d661c543bc96b1f8735727dc509dc14011c9a5840b181426e796cba62b9a64b09408627d5862b789f9b861b959c9c516a2e476519cc78385d2a309c299f4e915d3f3c892df73f65bf1c788e251a5b6afff19562f7ef8a9e01b28b88e8470377770e125ff3495774933f7e5354e63dff41d91838566d709880d9f1c0e2ee4277b21d06faf362145758b8f16a32d1f2a5a9038fb491525d9f4c5ec49388b09e5c7e291d32c5ff5e8fe5c058787f25c979fce947b74cb4b28efd080cc395d47748a3a081e31c175921a48ab8da5800f80d89964a45dfdf6e76309fb1427c4541b6161c5ade759e3b3fb0fd3eaf205b4575fda52b8f19a023b4b3432d2ab38bb4ca7f42ae73a300b5a33754fe422c110d4079614c0605a2e428cfca2a85ba33f1bda6bb70347d3b1754cb079a9172c855802d08e62d32a8daed57144ad0a21af98d9f81d721d66f3cd303f2fe7e433ff3d357187c71128d3f1479187278348eb29ec870972b767d24291249207835108ed580d0345b09b6ba013268c93b7e28766a7f6a200f49a52f9c255a4f2c7eeb3d6a511d9aec52f685372f3792b8112329c71fce372ffa6275c2aefdedd3074a7f6604014672c0d7fb63ec48b5d82dbf828cc81256fb288ccc8679a2e0b16bea17afafced6ce2f59e7d79cc4e848a413974a887ecec81974114423ff5d593b5eb4f88d6add2966c479f3d0792dd26d4cffd88f372aa6cf17eccf447284f955b6577835b90e2389bf78e19deeb299235198fd9a28e6cb9328cbbfdf6b76354870e38892c532944b320cd2005a6a8aefc9e882eb1fe577cf7ed66583b5e39dc6f13e8ae0a8f43b01e6f642b89bb7baf269c94878b0b6499329ad6f3d978c15c6f6718811a979517dd0210a31105066f607383966dda9ef49ba281f5bed9743ca72e46c2ac893a37727959e9cef62647d011dcd77e5f7b415f5515692cbd60f6f9fd859347347dadb24c6fd21d2013410cd3b4b2af2df63ac804ebbf059288ca2be8b1877c1a4a1b749ba5f7b1c58ee5f19737f9c637e9f6f9104ee0ca1c4285129c18c8bc0af7981a734e875d8bf956d0de6623bc9cd33727c421e3c211791b2a798177bb9a6dea22a0843ba459905663df20751d851b63812c184d80185e1df58218059fab2845fb3082c8473dda97552ba841362b1340849cc90b1af6335141e0d674da54280c19320a97ecfd72942778030b901b4cfe99d5e3ab7a12f9dfb5ba4c9a914ccae5c7d75ee8dc771f92a5287918f923e1a5a522544bd5a58b3379f1219693da9df093b1ba8b37805be04606cce3b9d764cd37bc43190adb620694b9fcfc5ef47477e9167a789d34f68411e520a80fc46b6ed174ddf7323e18bac4d05fee3a1e412f32ae0c3d34602c6506b1672e2a979ca82f81d980ce287d742c82e8b7f23cd8e1b31c662a124858e44a042cc0436e9345953508afb4ade35f198388d8a321941e8bc3e6ed3864faca18ed0167c198ee5bb180a60f5e97dea347933fb0beeaf21a8f69bcbbc3a73761d76d1d99f401f79813531e1c303353b3a03f364eff92cf8748f900cad7708a797d2bb7788847afc32c1f4c203c64acd71380fbdaa7525ea1d7a4081341c4432127cfe74a52597a1cae41171f81e33c26ca5b2e10512660047bd8b27859ed5b3d11ca0c1ebec54a73cce3e811df26c24b8011b7322df7c2cf0125ba9e61777f931711b6116e56e15a8b94bc60f122845414a4f4d407d0eb49c03e7ffe5fe1f87a109825975d19499ea1c6805ba4d724a98ac33dd960cd7e797f3e995bd3595e5707d1cef5a8b3f65c5486152219d9a83ba85199d1f693b2c0d4f265f02c205e93a80e0808f5dce4151ed54df5e504c394cb9bc71729faf177116300a210f3bb21834f458fbd2043566e85c1bb4cc12af64db8679848f5fb4b5ee8179180f1e02a5cc4bde049e349604869f977b27110c1f6eac33028a04a84ef0e81ef2286b471c1c6ac48e9c0f43b5cfbaaf3a715c10d5cb862561e62bb2c224093f13af00a37e0ad75fb6cf038dbe9a3dad27994c5e928ccb340b96dfdae8db46a671541e61439c34b1c63420aacf56f30573306ea0906a7020dd171079220aeea0ea4f6bf8b23da3dac989b52574a6711a82b322249d424f9c06c860a06c32069247bfc64fde860cc120c7b8009135fce3607991d852f279afdc3a3a129c06d18eb0ecd30e4e8ade1993e33dc284ee9fb5decfa2f3e4e4a952b696b1574254a3ad4cfdb9a754b527abe502d2474cab36e3d36ac5bda0a467195d3c1331f50caaa9fd48ee0fe086dce448ad0691d671d473597bef282b57b7befcf469c878c34cf99872ec9c20c2ccdddba1edee1d17401b641c8462e5849cded266cd4a25dd87ef2b7f52291384b8205a6e26b89e67845919af8b944105f1983f2ef4aba6746220e2af50321d1ce9b9474626fa3c10a62f38a73aa94698843156fc07a5e13a37a4368e3b7f627c843c663192012822f88efbce61473a81974e86256f92852a9585cce5656c614b636ca9bca305bdbae4cea3211cd85ccb1680aa4d1d1747e59a98a4b6337072feddaf03756ae682dd31b784653036b4556473fd7a18afb31dd628e4626bf244407c18fe62bf4fd67533492f814d010cda04f30d0b8297408ae493d2348a27cdddb1eaedf5535184067271f62d46b7e5015c18e838466facdd78200058ef188429a882c82963b6a38546c5d14a1cc37527c30797bbbb890fff80bd325bb1f6f52b33cf1994ea4d13035d6ec17c023c0f94a2901c3b6f61e50e5b9dc663d1ae7017ab731169625d6be98fab32ef18cfbb09ee89e183f29c8e5bb663db29e0c994dc1b9e5a5f6997da745126a2ebda6d0bf004dd02ca99e81f1d223a65c40708a175c397efb986b78eed0dd3eb0b93ca437b3eb9403f01975bf29c561118d82996fcc8558ab1fa136f906f2979f4cb45e58e7c02b124e0cef07e5dd46ec7ca79978cc483f593c8b334805da91d13500e74c9296f69d77e2c57bb37caac28f33363dc6a316984d80aacb0757e224012ddc31532912fc067b5f9c5d9ec7cc1a57468dd8d79a14f47c86add69ad8efd8e623d70a93d1e71da35a97aeba931c9d262dc538cb5e78f3ca9529d32319c56e9f768c8e9350c9f41528ee3330f9d23d7810d2b56be82ae88ae0fbdc1e15ce14d4bd5a735a8ff49259e92cbe27de6b7b8c5225136ea71564ce0b2541d615024668e00b2de3b08df61fe77f925e68d10ef2d87a1961dde102526fcf536a2978a66a000d8699b09a4af21b4fa4069476e428a6808c7bab2c10e5d37e366dc5fff67cc6888343483b3e0f22a301eebf4087a5274d799a479f1639236f3bf811246bc020d8ed31e0dff437e0934d3d995da9913eb6338e8e9b6e30372f359fbb7c186d6e8c3932398a922301a1dfb906a88639fec8048a2f58ecf729bb23b078728a67996ca6eb80c554c9be99c0a5f34087bd7222759668cc3a3ad35d2dc7c8359cba820a7d6a1a105e780c4b0b30e091629cfe4bd65cd4a816671cfb417050be4ccdfab5e385b6eeacf99dd789fdefecd914fbfb8d451899082e621d1d865451e18e9caf94d1b98041e05036ceffbf10e49136568750952bff32625250cb1aa0c88059b41a5ecef6f23c5d307a2fec8bc365fd53bae1d4ade3881449c45dadfa188f49aac2b3fa748d98250b2cc7c66d530a73d5a46e4f98a3d885cbdaed83b4c1a21f4576a50487ca64acbf86afaa6fe8e9d2907a3926a3ff1f2b20f491000ac54b8550eaaa567340b6448b0d4b3e7a7dc846a4ea4ba6b0a4a1d6c2bd74be4cd1b3325186f87ff27f3a3bd6a3d64ad725c1b17a076dbf0e6ae154f31b35970e6258211b79749cf8593317032e52efc5c5f607ed85723000c44c9f87dad5076998c375992f1ee48991f7aaf2c9ba10aa73e63a03d342c58caef1e4ae877568202358a6e3af1c192a87c969e41b481aef60e640d67aa66985f4cf8c5abe5423671da77c22958c06b2fe137366d2e720403e6c6d5168a976d74469dd013c77d5d21262c6079b3e9d0c49a5a6ee31f2c681165ae5e1865feec7778209e3252f6101311306efd630a128178a2a4311dde7c84b59e1537cc3ac76f2089bab935212d6cfa869e76be680759168bb9365b8638d223d8f3c3d473417837cdc71b299368fc4311e7760e0442f29bdd69093409029657e09dcf679d4d306138a5cc69ead82f909e4d349fde0603680dba246c1464d0f1511941210064cd40243ec9e37fd2fcc97e18a47d3bb876ea1acdb0ec1aa55bc6da90ab9c3d5904d39f38461a8d9eb27b549face99116708e0f7b7110f0a95c7c7425140287adc4ac81a4be9ef0efdc097bc97edd34207482c0cda7dc106ddf8e40d2a37ad5579946ab0546cf40487743b70122856343da294eca639e6e0e4423baeef3c062afa9e7916402cf9c6ae3edf58293f7e632ddb5d5f2cd0f47466216cb320cf8653ff9f91d31609d749d5ad0515ce2d9106a9a5d7ac6160ec2515ae3da66d35c81a9c594e44504c34b0ef6313167a1bd4c28caac77cfa7f07da58ba08ae37246712f679c05109a5aa55bceee985d2d519b30948ae2483599963b7790fd85db4d7a578480b74ef17888643d6128b88a638cfc8843de4d9e7722a92ce74ddc14ca9c80126d87d188c3dd10e36642cb49353340f37e6d44f80f299cf1c1f5a4fa13f5244b84f86087646e8eef4088162f1b0a36394ff34e73ed98fbf27c9d9c61eba710d2bf00a8fc5ec60e5ec7dd289e62cf8c96846d7200b10136ec3f94530e6dffcbc5781266a7c23c736b9187a86d6e415050cb37aa1013a0606aecd0b035725c17e8998ced14b27011a53da4e22dcbbb499841936a5a7dcc35e33c3a42d7afd1ee3d8882fa1d8d92a4e31b86542dc50d110c14368234d591724fc57c305647daf4b1475b594bbd1ff2160d1b307fb18965f5414a36fcdb322c3dbe9abdcb668a8bcb1314ea6799dde285d99ef4d91a1cba458279395f30369f87e560794aab7352c5cd690c1aa80772c28bceb311e7b86c89e4943eb91a0e989a5715e885979432f19fd1856f0930f8e8ed3b521060ccf16edf77d2c024d7043136210566a83d6d27b394937c305469346b1dec9985b5e73682b69166e1302b83ac3f620a632c2994238b69445c3a1d5bef8a1330fc989f3079afbbb74a4b3ba7b36a077c409dd5cd8abdfb71e825835a548f34aaba32732a5204d33bfa316dbb666b193ac34c4e5caac774dbfcbb90da42e93b9b4c652ac215fa9f77e5f8a5d65685eec92827a41980db1e6bcf3e8f204c568ea88f4953ee47e2beecb33ade3067b73771f98ca4a3e20a1815c0f847380d710ef3d6b472a2a7dd5e4495b368d958f5a10fde9c5cac90dffab8b3b0be6f10eeed94031d19328360d9832914620aa75cf5ee66295e80fa35b3884241a5ea35dd2b28dc4f8396c63a1df3baa8d35b788387450b3bbf9e0b784f8da10b94b348219411cd39ef8c13a5ac07810e85dfdc6d5ef3a44d1d4164a6583c1a19959ee6d6a5749147cc79a996f8d0c9383a6710cd99ea0b53c45cdd313cbcfbd066ae1adf46817c19b500d9b484f6fb0243011b39110cb6c0e50a0a8c40ecb5a8641564d6a73fce21f6df1228c3b088b409cfe1679800dc115a8e06895944d7b381f7db72e2516a6bf38c3934907361f496332ccc614ba3248c5a42a68bad0646a0bbd822b1ed5a00f0636686c680764a5b065cc94989eecd4527bf82a4ec62a340d2cef39165c54b9c043cb6ca1b8974286108d96e2987468650777f90b900837232fabb7903ba61fc32f89bf3e030c6c5f722b36a6bf9c75fc67ad8c52950efcc260ecd1fbc452a393592cf07fc60b18cdcd4befc3a403bcd9f1b59f25d204f90d9bccdc5f562b23d2cd6f91125a63e035029f7e013408260afad89f6037b9998e15f21016f2ce208bd903b471db161fd90bcb3071208fd7c4c492620c8efa7ef48a3e962424d4815375602125dc7a5331f1dbe9322780e3a4e11a83ae99f3da9755344d94f51a19a5b7e4465e9391d39a581909935955e7db0077d6ae8373ac61fef54b8061ab295ff326596838ed0f4f1670dd095fd6ecb55fca348c3018758af536097a2810d23b20b24073bb86ad8647010cf88ada28d25936e69ddd49bdcb67c86f8417cbcbc1f12c955df02b73f1b91cbcc909edadcc7c9ecadcd3892435a0946ccd01481809c74370426cb2d86234efc5512b6f093ad990aa1410e25b3639acba5ec369e6a8a9f819b5f7c7cc21e64e08a24db42a7beb958f2c942691cd470c1026cb457677efe21a1a5fbb8c95e7ea3447c3ff8d09d16541db5a3e9a8f2466ac7f17ff45f4e57442f6986e742ca7ac221acd86352fa65f32c566c678fffbe70e013880411b590c4311f3f8ecf62fe57d0954e6086783b7e4d260eb0d8e6cc08f51ab8f7292f5e778ca5694be08d78a1854395785a1b3c8ae7bb18de8be530cb40016d5ec4b98f7eef529470fbc66966c8494391857aca0ca42f95c8fedae388401643f48899ee48f23890d9b09faa6fbd1d11b9f93566552da95338053c6d67de5bb9ffda1c3eb414068a8d00386069def6f03c75edf631c245654af540a221a87f9c556f1b4e61b88fbc84a4d8502f4a3191585ae5d1828866223e99158da18e1f9db1fd50f9f59bb52acc9eb48423b8e0430831b9f4bcad8954d40d0e7b34f02a732860081016d15434019c20d5bbf098cb6d6aae86f5e1c3aa1c17eb77b00161bd49ada0a8b30a143a42d3df9a9958d96b4a1a7206f5dade97564e1ce140de1c7a364ea2547ae1e47dfdc3d4991887e42c0b95d79fa18fc35f62b9d2cef65e59707983c340c0af74534490ee62c5150f699b862fb6c12682ec6c38c69f900843ed33fb0f3e2343d2fcf2e0b975db685677682219911cffd7fdc931e1467dc65bbe05bb6636ea88313c8d2842a44fc58c5dba576f79662ed646b5ff62f6a7a2010a5f3e7a2d1bf282a9e1c20072ad3862e3a2644b26a14d37ce8911c33276793a34bb49a6496332bb0df95631118dc404cab18028c4517e42e27c7ece8fde70dfe66962460838d78789da35d25677c352f10233a0a32970d66d37b1f9950909f4781be7c7649d6a53d08f275a8093741cad6f59740372bd21c040d2bb9634786e0483da301e58789e0c6aa6453b1e7569ea07ad0b454495bf8b986fde8b55de0e47bb34e144616d8c8bde71e9fc6b6bb88b2b3135b57b758a7d2cb830c8d84a73ab6a5e703ad4030079842ef252091d69e822c2ac95ed1123a8558ba8e99a13a94ee784dab7d6bd80f2fa3131e438b7141de8decdb1a10de8c7212567b1f8420153217a2fa65ce4fdbdf2784bed1544469c110f80fc5d4247362cdbf21cf6c95a74b77437649bd5ac826d2236b8ca9ef9ca1184aafa1f45b50b321c04088e2896a950e70e198a0f26461e5709909255f159d956c429fcd49d8ac8373e66690581f12345363c0152d532a57003f7a51b995e3d936b4c23c2a4c74747c57631bc9317605b04b59e5a94ac1d73c260aefae4ae812c1bdce23d7945d84f9876308e27fe2acbeb30d52fa7e5fcb8f8d610a5a0566407dd73c43c6306c1bbb4536b47774527cae4153ad6bea5017aeee5f7aaf455168d3e0caa2b632990996c45f27fcbc144d50486fe3a6e798aed9dc3d65e56b46b4c62743502537132d4bab8ac4a0e44f6faca50bed4fa5e136d499960c312940d0754ba35ac0fda18ad3108b7cfb7ce38324e9194394e3d560279a4763f050e0af99fa19c603b7e8a72add622d7fe32750ee2ac3721f2cfa9b4341ad6f1f2e31fd2f7fff645078ffb35537fc9f269caf53d69074294931067a7601ac2e661d38e73732e9ab5b5bb0818a4bd27e1770b09ea36f49dea344af889886abd0cc84af8fa5b81971b29835b203a846f1f50dc136609202a4b96163dafb5cda326449622a7e0820a099a7bc9e36a2e182346a52fb0635f181aa6a8d958013ffcadfc6833c0f0ada3bf4be43c9f35110b6369acd302a248ed9284f020b61132d49fec8312ede93d8332aa0d533c74e4cc3682a1050241c1b1fc4862fcc72138a7dcde69590cfae6299df17cd9181e021f0ede3e6ccbe8487d8769e59a46236fd136057c0073c93710b2afb2e5e14cc15272c25190c043d9613766e241ea98a57b3f483d3627a5bc4f55d5c41e4efc996c61aca3b3fb609f04f02303a2c4627b745d35dcf8406054127c34bb5ab885f38198adbfd9ec1562795346172df8fe14fd9ddc7ea945bc3a3b75a80983d4f76b128280e69e8a8a08f1520d1482017cd665a715f8d00a2bff2d1e3ab2c7cebeff25bcf370b11b01a14b388accbe33a36da673f399adb7ae717b1f919d999aac503971c449208cfd66c8a823bcb93afffe3b351b45956884ea099b2c875d9159fb223578b2b9c3517fd16a0c47f66dbea39cfb89fa2de8dcdb5dd4af1083266383b058479a560655590d8cd4b983902aa7ce060a3aa75689bbc8981e9ef9aee6805163a4db83029e4c2d70e9240ee97696f7aed42791c93b4496e53df60565c7a192d9f7e2b1365d581690e09b217e7e6e13b08d029f4184952849fda90c2a1ac2ad35d1e55ea53f0263ed13eed48187c2341ff74594753d2b00ff9ae32747976978af027c36db229a1ed84e3d5b7f220d95b453589209b2418fc027f843416e78eb47e7a5e05bc8e8c4138c37b715faf8a697d3352f64d1837c70e48c85f3ff1a38ea386d1c37d05453b8bb7c5100c4bfa2159274da5d69ed11e59f2f90ea28a1135be7b1f296bcf480463b346686629e516299ebacc3db9d03b34e0710364109516ece0e4ab37dbe9b69b39b9a236caaca2b9168bfc5666b79f8091c2280ff1462ae6c09e7d5def69a9511fb80e4770945a22d775c4961bacd12e069bbd73778a5e773db7fbe11957f40c0ba524ba8215799582ebe6c4278885bbea34bce6665c230c0440b7f849831a76388a03aa573d0e9d51dc7ec835b493f29044c4c853b85bb2e4a9dd7279eb007b03db2c274986d13f1c75af9c9002f96112bb24bb0935319b63de8e6af88b08db46c69df4a18db4cee50074bc76401015eead6d376f2ed97fcdfb8d8dbe10d9d54032cab66fb6c47197ac362ce90edc5a6cbcc0f885dda3f9699e7c4c39df4bdb136ba885660ea1c4ab09cd80d0d988b86cefaec6b888adfe3cd3301faedcaafd8e43e707e229b710e16e9a9880ca3416e3a024215e3670624cfe236ee1ab04626ad438242b52636410e58bff7ab1c345d82e8fef34c4130c88ddae1d9bd6d759f1228071ec0a09e6f948012d59be8d47788cca9ab7feb10bc34dc9de124df344043ef7c59c039c2599a8a67b16bb0f8579f9ab8b0779a9a59e653227a9fc4549857b30abdd2322b00cc8878fff79d982084d1d245fff178dd12e50f13815da2fc6a81705b5b2b82cddfaf8e2ec7ef04f076b9289a40ea9b5a4f5f82133814fcaf5a89fb6c64c096fefb3e6e026e341c94a45600f74a4fa6066abce3ec24619e8b17fba4226a82c735d2b854d42ba12cadecbfe37a20ca1c13b8e6977ddeb34b51b12ca1b4ef0e176602c6981d4908733c02fba3690b98f50379ea3822934805b96f379498ff9e2927a302eb9f40e4658bd0f8542becf723f337648b96aba559833ca2faac36cfbc4b63ecedb9a93b1de91fd9a553579f16d2a6a9c829a42b24062e3835fc6bf95e6997e1e944d52a3b365d1b77d7cce234815e8dd0874e1ceeafbb43aeedad6e5265103837b3ceaca3e6d8dd1dd8c62515d477d0a2f6c68d630375452bb0333c84a542092d8b8368925dc4b4e1bb42419f4e5e94ac83b52686a972ecad81982dbaba1b1a1a098ce7263a62748b8be11d40d8316565e2092cd9adc4727fb934899e8477ab468b1018549419a71754c2a87da105adf15db7e7d23e1582af79241cb1eeede7d07f5105a7206ba652dd8bb8bebfc59d20b632e8eeb16405c5cfb25766749b3c3df1f21dfecb77ed26beb92d273e2af49a12b945a487de235b0a17cd418b90d532455d3cb3bb3579b8e5899164572ee1eab63da9f3ffba6be18dcc74c160458b46047bca83d7564dbc04cd14823a48b550253232e3cce0e3566b238b39f863ed6b8231287d826fdd68634160a7e5b529e54259e76affbd385f977f97d254e0f182ef683a73d2b16adcf3457b0dd5b3acbd47f5bd9aefc0dc8b3a6b22e669247bc0e09807379cad6c06ff433fe07284affc1c3c91d68c1b4e53b85a7acd7cbec773a9c554093f59954544448b16ee9de4272758372f8ba25e813ee45821f2d4b7919c905a95e7adb2eab673dd7a7140c30ba7101044de0374a13fe0628472c7e99584f1b5746eb39a6bdea67dfc282e9cc0a1a49a1d00d797d7553f276beed402071c1f61502d2c1f8b66f23e5e5f0b040ea61453e212d9828e2d4a38ba5255dea98d401db6b28fe6241b4624cc0f30e3cb18d95e2946329ac293bb22d30002673e76b8bc5d2ddb2740bf2ef08aa9f444a4f6039b439a25587f269fa3a8b300b9021fb0301c8f0ce1931a0803c65ad21ff7ac161d37f2253238110891510b74ba399f250404f0e4f9f0ba3232a8b62e5789e53a6494ed6248a79ebc9e4e71fbcac8d8fbe44df393f367244cbb551ad3bc5ba59db0c5bcb528757b4ddfffe39180274446196137195aab5ec647255d66871ed7b5fd8026b7267ff5854ca127a84741cb567acdf56e12add41b148a493e82ef68b37d304e10558d5b18768f8381797a581f880e08ad0b4508fc41a22cd5b725351e343655bc57085b2c087416b66dd2e26a763ab366d8bbe648adb400f25d5ce5a1795e85b0547b5881180f648e96556956954563ca344ac80a23d7d0142e09f9e04532da2ec49f6376f403873d7b9ae23d3e09df2f1deda30b206f4b7e767df7594c7c7510a049ad2a5ddd7bd8b1aa67f0d00c45490282d810d4cb4a4dcbb99699310e84976af3bf7a859905781224d89dbbe8470e6e05e45323bac398d01ecde98854a977f13f1a42baab58641f5c0fb5ec92e7dcac9044b2face416e216be1ed7cc9823eb5afff4741476979b318dc7afddacf1e3e882134736b1328b23084ed39cfbf29e4b4588cad4cf3d573319453037619bf293f104b64b8940ff7ee22a17252e5a8072c97da7ae11d01cfc3101d289e1ca2d1ab9c94ebc76d18dddf23ac98f91c4e0f6ab19d69b4e20b48aed423a41f8f2bf2fe99c41ad7f31fc1acc356f8f9c03466ca6d3b0a5e03ba4c64aa61f8bcdfc6cf082636d05282efcc1820309fb3c3fbfeebb2340be72201c3e9b2b3fd5b4ed0cc782a070213083032a34e970cf68c54b3c659dba8606a5bb8e071a26bc3fa649e14ec567ff1a6ecd70940cafce2bfb89b66a16ae462b1cd8d71d905f7f4404f1d5e26b277cf6aa681a5050a17c8953fa6c53b80c4f89a3666c7d7b33cd681d3dac96d06dc7436eb3422ecad012375c3feaececf035aae2ba0012cbf1304e94d5a83ed92c76af0ba65f07616a215bc3c4a3ecd1f24d4d3388854c6b79133fd0706b48f91e57e67ffefe8bc72c87dff0387746620623c04aeeb80e765ec6d61e51229ece6ad40d621b508b019900e9dad82527c91baba77a84e51d45327957a82fc81d6a3f754688d21a1d4942ef8cee693112a3eceed30cef8c2c73dab25fb9bb32a6a0a6bffa1c59e43448d5738673729e96e3ffb969874a3f33566b55057f2334efe6fafe153468152c5fbb63f363770335a8db62b23eb57e4bcd69ef209ea4aff09954d7bd559c32b33cc02d07be71cc9075ad868bdd14cbefc1bafa7bb8212decac3f4b616df08c6926ed4b4f0065296c6cfbc8631b0b93862cf50ad89276a66e6395677fdcf6ebfed40de0f189f606a1f543695bc5326db582f7cf186a03ffd43ab68ff2a9f4e52bb673dcea2d19243b7590b6ef17e72b106de82ca5a66220cdd62d5699d647986962afd3857d6ab806baa5506c7e393c094bdd84e99e7358d1534ad8fbf05fba06a45aa4534322a55b682eff66282825ea537957a5dfc18f8ec1a3ee5aa88049bb981afd67c3fa8f66de29dcb6ca6ef187dafcf44a3d40409de14e327e7d02870b8e83c27bf61b57a9a1d034e382493f868e45343780d52ced4129c0662d20e5cf763ab6755f96f9296a616d7022f192c27f1ae72d9ebb730523b2c84f3e6ada81cb7b14bb8c67a78fd934c7f24252ff749dbe87fd74b9f0a77290e4ecfe417652ad2828ab840343fb65575f20a130695eb9c7c535a71a7531a1b016d136e4dd654dd4e134b02e5c6a8fac7f60a4949fc6b540f9212b05d2e712cad07c734c3f61263af070e51c39f86f3986cdd984ab96fe80b30c12f54ff87c7b78d5350873095992ad0f98356d60628a7e4930d321fefac390105053bb411b0f5242b80b323cf656c3fb5a27faa7c3c54b7ff73910abf773d54067ccd0eeac7871719c1bf36311090106192c79f0e18118449525a4a24f12740eb737fc1ab6d895d5533a98d7b48733989a62700c871bf885413df5e1a7326cf303de2fdada422129f74ee014403bc19bc17b78058ba174fa80481744e77f811a8416a70a13df365cc7bed40c2fc69618b0286cde988f9d129e7f1c5ee9e3b77dbd88d3b0364c812565911861f31d0898541517b2f58450ebaa8722d9e6580312de44ed10f46402807f442097bd23ae54891e06366fcfaf4da103064b3059dffd0fbb080971cac223f059e0bdbeddc287e311628798bc2059aec03def78476f9cb064ed4c38db80985f7e7922249aa31536acc3e54625dd926407749872fa599b88283ad4690b1306f9da58578e3f8f86f29e599edeeb5bf5b60fe0644e3bdf11258cc59a9062832b944b501ed3d0869280609b1181ffd37f1068016dd3b9cf3b2dff0a42d1c66a5cd0ca3df6e36eecede862bd0fddf2bd819a784fe4d21aabf85806aa805b9a690a348cbe60f7a13699f1b58e3a68cde1364c96b0f66a7b47902b64150ce25ef5fbb131dfa769ce1620a99bf081cbf4f690373b5727954fe6b9153f91a70bff445fea8f8045f51f800effa284d36337b01657050a6bc4bee41e1ef9b8c9e801aa42eb744e7f42b74f685ab1c296e2f68c81dad3d24d1a8eddf07ee14b8f4bbfdcc9d8ff2a74e14f9286f6f52251c4b981de40d46d2b7035fb72488ed00eebd17cd6c395d5a62b3d48a6e7e92725edefef1404039dc58468b93c879792411e72ee00bde38a86c40c1554f19cba0078a680eb75b7416e0487def593516d38a8b3a8f9844cf27fc67441fd395ae8c4bc8c1fd53c99c62903c30159fcfbc7047a2dda5636a85d0845a4cca52be76931315737a8214fc5872360504a13150a02de4d3f84db38c11378612b14591788c303ef6dd7304dea7c28254a112bee95d4a3d4d3031ee4f750817e4d1adc7be4423d2d99f8a20de766f73251fe1c6cdd2ed26f67069552c71e3cbe881dfa1fa728b1eb07826691cbc6d02a41ba19b8bd74b6177bfd884269d6d418bdc9f7465b7c045207797d804cadf62d4f67cd82787e731c8adc71044a731109ef65b20a3b501f0bf31671d44a33c9ddf662a63e96012a74eb50f53c55d9a1555c8a438b547e8e3279e474e439a698a502c48f641243c5bebc62f6f1e9c1eb8047b611334a18752a96ea32aa73e796e9c4bb3a423e24a1c765357eff50c96dd5364a45a7580f783945d0791cf82d24c6fbb3fe58b59cf6cd3c5091fbd5ef75ce1a28a2eaeea979697773a72ddd180c085ab2918a89c35247961355cdd85fa16bd158ed5c20b3e14beb5ed4e9737891e4576b3218e1393b8c82ad3df00fb47c33c0eed53d798823ca56fd5164546e6c496a9a14e38965ed73f9af19f3ac6f7e0a119e6297dd49924ddf99954d2ce968a7e1551af0664552f7aab15da2e9e67f80584a825143b248d726fbeef7fd6fae31ce44c896eb0ad91b618175823ac298ca1434eea13e22d763293576b73c9dc7e0b2278af09168518be8f42c118b5a94b34b374a921d50b16306861a5b3727506216a7eb03af14cf5076d7032c64f6b63cf5cd4452c80df1eab8bcc23c6844502a973a231adbd055413501b751bd7e59004d5eec508b00e4e12b1df23de0fee5743fc5bc208bff7567ab344b6c62471ee3e215054493f7587f62e1dc54e71b63b549261ea78c8579fdfac07c057a98cade86fb33e7778ed9d96913ff323ac1c3a9f22f7a4e4504caf1f9286a395510c5465683eee10bd613b9fa854835ea9feb6ed3413205d6a3f066c287eec0ef5f1fc95586dd11f84e8343eae395c5e6b1b247df6d36c56c8bc4b122ca74b93c3f1a577ac7a6290586cc63bac735f668fa0a738f5f8f1502c3c0e9a16db11c95cc6150bbfef3f7d43e01e2c99673bb9f38e94855b1be8bb53444dd836d403e37263a0883b0e0809519ad95220383b181ce3fe4bb556836beb405931b1732552d816dffaabc3693cf17efaeceab78a7b31dd4c9571a159159302e3b1c236fc7dc330ffe7fb2ae9f09b3d4cab41e247f16af796d6fdc6b4b9101859d43b1f8f9471acad406a888d2b6fbf75cec3899cdfdfc6893b3571a811f134426bfa057c44b6e1b29384a51feb97aff980674886aaafaf3c7be8cebe9461c5ecf7bc3df86d56ffe0acfceaf089dbf70abe3acd1239dfdb92c4ee5e33043a5689aaaa580b3bce0f5f0c2398d80447510f55c53c1444ac6be1fac1fd3be5a068e792e549d76df79290c46e0499efa4a218252a995222b0d61672cc44ebd1389e2812ac9acf4318994797bc8e34a8076aa67652a5ec30f0c3c69cb120ba9726d012c7ee3707e55fe6c6dc9075a7722cd19f771b544ece46674d38b32f4b223a4130b1b129b8caff1edd20c1f58a456219a50ebf5ddbcf191769d15293baee2fb5f51d192b18b8dcf77bbee3eff0a1aff353ee261b7f10b66bade6e599619fc59b34bea27a3178ec5553ea5bc43528fe785b8859ddc5bde00780c7d8ef7381352dbec420128f94c407521e11867fb98f719e53b6afbc00884a50b06b9a5e100f74a0c8bb739438c728b0e04b632bc2a1367030c1ba3a91343c594a8541e62fc5e263346a14160e9d2f87523c74d2d6dac849973af01c94304de59a49d12ea22a1965d35e3c166f01f2d00974f36c64b6019e5db7ef73ed804013edf813031d230e0a953fdbb848a271e930dc01d72adb72c57d5742a1002e7c12497e38a355f41f7d1ae3d8500ab39c291010b2f7f15bd54f64b649bc8f1efdd002da6f235110daaccc0af72118f035736602ebfdd4f95cb1d314035008eb16fecf4d94c1ae7871af1ab526f0dabe326c068c751f14b30e57b6da9814e6de3e6eccaec62e877d08d4beb73b1c5071d0b1e7c90139416888384a64835e7b5271bdc091890fec32c3e2e4644413dea5b557bdc337959f33cbaba3b37027042db3f8fc196680579a9558415c580ce04f7d9ea7c825f60fb33254f3bd16fcebc467beabedf3bb33d24eee69ce1f870cd3a95e327cf190b431551b5d375dbd2a0511365d9813786f88f14d0fcc455ace2a85eb8b52eb88f097a5f0825c073a46de37a82f18e6ded67a26a2a3239144f7277425b06a412762e0c8cca630e0b98dcf26072f2e6be45fe9a889cc6926b389eafb1a0fa8ce033d88a426c96f639ce4db10152866e3e684c0c49770098b834514a9423a06cae04dcfe37a2e98be655a2fe0bc1a2048f5f6d4809322dd9499a5ba39fd0c6c2217c037ab9222cf53eaf7400eef6b5385e6c041b345261ce1ba4e832030b3b4c5b7cd9723a0086a1fe985d6a911ad6d929ae5253ef8352330184954f773e7a8003fe5316bb50377250572ba2563e674de6a6a2347ec793cb13e0f9f7e34aac005b6a70724b83d78b7c05b9dd954758e4f0c5d205ba391d7a93cc5705ceeb977d6ca50bab716dc857572d7d70668d6591efc8cfe9dfc0aa0b31dcaa15469289e6bd9f8d1a40e8504942c3dc28946a7643b7e259ae88b63fa776ba4c1f1cad8a6431561735b24798eacf9ad0be5f40b0f2800a63e7651d14e2af7b879da6b2b51c08e73a1e90d6c263cb3f6ae879b070d826dfde2c237c06ae6a17cc312fe8948e552ca26da6797ee532ede7047f6752e23feb7f3854ac95ed654af8c13f21ee49e1afe229619e8c9bbc67bcdc378cbde31c9bc29558fc7dbbd1493a10c77bdb0a3fd3f8267a1a02f2c40aebc20aedf03d019079626d45f71bbdba5a5599cee87df7a12a5c7ad7566857915b0ef7e06ba631a2d2ddb29d30f7c308fd16ec039e9cfb7350988a87608bec765e3797e622bf02e51e2730bad3594ab8ebb0734a73e1f5b1a6c4f06ae99ce92f3e692d6ca824c2314bfb840dd3cae81090b4c24dcf84d8ef468619e5ac4fb240d729ccf55ade647d8b03c8f2f7ac6ccaea23575761469bc21139cad6e95ab61bd9eb81e2ad7d0df559d23a19f95a2f5aaaa15a8a0af20f74066fc94cb61934a18e6632d9025b57338d3286610c47c4aa0c3c75a405c142235dce0bf26dab47f68ded502001998416f23706615fedf0ecfd27a61b8183a767296576e74c4b904e5d060ba3d6736c7b5b9e57a0f873a4adf5fdf9494efc5aafd440ddf54f81b31deb4ee059875cc9d8d597b088750ebb33e5d985a1be51e9600cb2ae64efe8bcf1909e2906c30be5f8b00fba4ff50eab10bb75676b99ecbb41cebf38bdf7f4de46ed57f40def90e98b21d1098eec90384a0386dd7b0b5c23a95dbf8ab4fa88bbbbff2ffcf0adafb12442b7d33e12ed2f105a4aff85ee791b91c77877914a085405c11837f53ed7b7f440f8228b38aca24d61d9d6828d60a04a5f5890ea8163f66057ad7d16d8a9021c0388786069aff1f2a1d7f40bea2eab0952b2e89a4b2ebf785c67f59b9538a600ba47b0ec32c42bc8ddcfd60bd58b54f167826ac73e3929b657be65259e500a80deedf9c5ffd8f8e08697800a64c79cf7cdf6896a3beee1f5d53166aac46933f7764208c5beedafb396a446a1baedabfd7da073db5d59a7311376a5e3e44227ae60a13696b8882799033a89ce6be4b99c4712a7d578caca85e130b56e3f9e62a7633c0622080985e50f40e8e73565cd6bb656e1b98ae9c4681644f33ae13886a99b1e80442915091b1737ded50648fb31bd8264410bf9c9e20d1e08370cd3ed61827efe2bf99a8ea27ea21fa459533c7cf887535317a0fa21df65279bd6c455fc0cfb4e683d0af0fa6926398e243840a330fd4d24a1423a613e2c76619ac5d52269d2ba353d8e1989e6712407726c06725a2d341bcdbb023c6a3ee77cb36a57eecbd307dc1e2a73ec328a11e8141f6f6c5a6b2dab77062417185cb18acdaa947f73710aaed701fd2c3f5db62d76ddc48fb767af296b6b77db40ed036e70b1774dc1d0195f6483b50ca9568a10d80231748e117d037b2a631a6ff87fa5f8d37aafcdf7ab1532bcf5516a7305295f52fbf79bb5fd75c7b77f043e6ef94fb0cb738c4219fd9b23c94315f89a73133c281c828d3b9f0c9e8b4fb32acb4e1f999cc8ab7218c5688d3d1ba4c7e3cad528cbd6094cacb91dfbbaca552265d28fa7809b775a3764ea491c539b6dff6b9ab04f8669377ab75d57a2baed7b7ae50d7f1f4542dcd166311c7b0f8bb89793b380e0f4209c18d7f775fcd60461b821ea499066531a02a373108850e2da10abf3904351544f62e15a8347b4305d70b09e89188079074964b4762fee09d4c098fee1175ccc3077cdc65ba07fc97f88611fe4d75deb81b6735568e93f0b5129962cdac5311b0173e4e1eae323054dfef1b206fde6ba4b2784298934314b3b2eeca8ac925198ee1bf5c6f4cd066dc69145c1d644e1ce49b1ee0436829636ec384fc73481c67dce1792ea3b019fda422bbfa204208864bc4f1b800d08af8d41e90b1a4be85a97fe06df866e3e68dfc6c82b788d0d9921b19cf5eccfc5102a3e48a4afabc52c68897cfa78d8c3c1d32dc0c2bdbf6635304cdd03c34b3fdfd81d8b300a7a2dbb0f1f67a28fbdefc94943842a64bd4f9c2ffc6c1d8a992b954357660c5efc7cf0e4c2145c23907e386207b5bc09703a55789f1ebe77312129ec543c715c79afa357b9355513d8b0447f4ead87e06e35ddd4cb07fcc46d29ec49000d52df3f560866e4bf066288b58b1135ac9f36393b0a471f07199287076b0384cd5e18a9b385e643af5999b3a0ffbe32a067edb1e5739582935367da69697d9a8adfad1534f563f8d81ab69c0dcc61c46525e515a7dfdd4c786f293d85f2da306e58a3a48dc492ec6645bdf3c45c3d7aeb4ce5fc8d7efb15c10fb954bcadba64764b687263b49432cfa721de454f95e5a7ed5aff175c25ddbdb14764c43d4e938c6c963406e527283b934a35aa7908fa3eb01c75810d526cf6f9704f3ac8f5f89a59a14f18175ead66bcaa6ce438ec1e2d1bf2ab12b5d017fce67da6f83095dd4a1eed61468c0e08cc9b4ec5823b505178890de441ff766705d1877969317847117ff9ce6d3117bcfdfe3c07af5995814eee8a1d026a8f7e30ecf6ed79c6bb209beb3f706958489466534bfab652a2e59283726ba3d3aea35bb0e4646e0b739a0e7123e8ea8027297a9c1f55103a6a489f05353b709f895f7ae3fd1282355113c9ad3d19fdcfbd7723852181267c76ca10a02188e7006b6664504f0c68cd6b4ae44634d5a9193747cad28e2f41e73cef72f66b95053103b270fe832715b1215de06901b7fbc1f1d3baa200d5896b945d2fade3ab14d4038eebc2e5be9aef9d11148093184ac6615a03102de1b0f413243b9d9183a974e7407d315a5b01646625a401388f77a35ecd00642e8dc6ab2c7dfa6d5a7af7ad89877b61f541f2fafeb1ce85a80dcd89953a4aad56ad6d8a2667a7cc5658ce9f64bb3e17fee05d137e67f846d7d9c43d85a5d1eb8bd8f004bfd8bbb6bb18f867c01e49f23d60d1333376906c0279dc3fb390f48133e49c422484e6a163c26f33f352de819b965f081910781c15173dca0730d296cf866d647fc5acfdf71241da971a6a649090eaf75b0d7a1c535be31676703dab0d34f2be425052d509b3c9de5159dcd0f799b192ceaae6bfa205413aba546540cb87a303515b87eaa19143b9ba16dd2d726fa0332421583ab634822bf9892d3d56535a02fc483633b3e09235f6d3d264bf17c3765b9c50e7265c034b72cafc0213319ecfdee48fa87e5792f8fe7db25418021df0f26cfeebc52fc0a40ccc95111d111916ca912eb825621f01d532d1865dfc17418d17b8e62cc99bed941cb1e54441df21128827a28ecccfa9e3835fe3f5bf98e5458cb6e828bb3d23cbab979f5aa54b53903ffaa262e92fe4106e4c5692835a63f59d07a50e7afa68ba8c454f94f5f95c96407fd5d87a9bb680143098488e4c9eed0bea10aee084cba71f3789f3d837b39e6a850c99949bd0e371dcf6df61d0d79b13f7b2aa42819e4079d2f8f1a94b367dc6a1b82577130e9d1fd29690725473e943e4c77a6aff02971df8407be5d178d3a72b0dfed90c29e45ea23f77f67e2c384575cfa7c6b204a62d9b51516185540d7d19a25d389667c455410a9a34f8b911ac44895b8e8bb169c9e95a51f5a837ee79976871b6afbdfab64d0a529e8e215a2e900e1de896fb72dd1821c9a3046fc95f508a8db9b6857e79c8658dd6d15f68080ebdbd75df3f7f7ba0864eb98d52fee1746aabfcedd35303d24b68485289251296fcd6f6574b1e1c4b9908d11adec1def68208fdd5e4a2ed1e2a9953377d1e317744cf42ce5d7183af0da3b873d36318d144b5b6587bebbbb170dca3d6ae5c29a9995c7dab4d3c9f94270004ffea80c7ab46e7c2ce54e5da87ac9bfbfd4e0c30fa2da433b3d78ac1bb4f72721b8d5474d9e84e6bfcc799479d5be825139c3f904dd7c0421ebb4de18f0bc210430ca87f3cf36520d8d4c1333b5c716bb5a066a68c9603d50768984fa97d93d5229e506f7fa7645bba7287c8ec9cc3df5b6c62d81602e712822c6cb666e7b50a8094db863ea0e6fecbc1badc947c7d4093d6d3f78359cea92c3535f1a08e9cf1889b555caf90425a287ca3e9ec71b77bfbb38b6ae3df7f0800cdb0f61badd2e00cebdcdc9d7a9dd4d7e786b7d180cdba1b861e0f8043036b0b7541ca6615b1f5d1d4091cab8f4be8db380a56ebbfe4ebf662e29eeb9b974904c66f4c93f69409ff7553bab9aae8fafe82b7db48b12eec6768a6b92942892099bbefe2fc455f65dba405cac3f2001d58efecc2a687f4f6aafe8e37f7a9bef511a6381c4a4fd6cd726c49522fdabf63495d348bb235f36353295f23746fc845a966c94699765c6af3a6725afb0a7319c4956cf0130559cb347494012df59b784df660be3dd489f3f13be50f62fa5241e36ba2cf2e8a83b309e453d5c6a3dca979632863a8b87d7f71d3ad2438adc4e5d6f7c1cc08054da0b9a4e0fe8371aff266f15baedb660fc7362718aa805490c5f016d7730ed99a5bef2ad1ef6c8381505dbc3405331f4ddce8d2dd2a0b7444b7f041172e40d588210314242ef17c4fefd77c1e86afb4bf41a06dbaeab67ff961652cfce405a3b47e1b4ba912f1ed8adc2795971087c9da162528de2e2e55b0cf29b8d11792a3eaae5c3e42a01a77bf5f5a3588f15436583b3cef8a7befa50b186a6a6ee832afa13aea890dd7c4af04da8040f69e60223acb3da2d0272ae0c7eba57d9449993ed4a18b5bd221cb19e33ffd374569a352f58607f912307af427a6cdaa7466098964760537196cec4d82ca2ce27b3bcb4bf0e35952d07ab42f2b6b67131d60a2207d6f711e6f4e8c7bc32e40e3c6f6ecc6168a7de892e2c887a3610bd7f63649e260134b92075f798f82b029ee3370b9e40a99291f61efd915129a367e1cdc362482aec2e7d144e3dc66156fb8b95e41ae7ca7639ece32168be9656b3a37d5663efbf50b9edf9725542d4d8af46e66ea41b07d562dcec2053be19d6acedc3224b8aaf22b4045654abcca39e7719920401ceff52ff79ad039fd8fbd971aaccdd8f82ef90e2a9f555e934576f39853ec10619fa6c373ee80d44b823846f21a2dfc7f546b37a5118c85bf3477c902578401be4ac168a529d588c57ded9933e3c5828279f42ac2d9a257b2f503517f47e8d6d3224204c68bbaf3ad6636633ff6bc6c42b1f2323c79f56c7a8d83a35e7579c8b98150cac715a15ea5b38540bab9b99c8030d863511aabe15ff25320d3b13352d3ff84f8e5ff385db566c0d312b62785c6431f6791667e010ce19dc8323e9e95453b2d75d1f3730322dec87ed0d17013c68a82f2e25bbed472bbe999eb900c14cda28444d93d6c759c1612a17c1b08a4d2a25834e1f0bf6a8209171cb0c68e493059a2d32fc4e0582f9ce96d7a46c84ebcedcd9a86ff9cc46fece08116dabde31db295aa6e6f95d5bc220250ea0b1e5092663f462f2654c7a3f6b42db00fc5777fbe44122e4ccbbb809bc4ebc0574194cfafd70657055edec77f90a5e885e576a346abb8cc245d610dab1048d259ac75e0a22726bfab86ffe0ef4068cc23a3d65144fa113d4bbc1591df338f2bd70a597a9c188a6b5836025837073159747362cff26c8da7ab460006fc684680a4fbf3935b1392b3d1b9e4ba35171a0f2ca8396512c8489accfab2dab6ae82a292c196dd5d6bd44169688a24cbd6312cb4bc7c5300a1595f9af37b8e598deb78d629704f02baa23f940043327a74cc702dc3d6df4c5f10300dae77466ae2f6cee17bcd56d794d393e387adf6f613e928fec4aabaa0a21760342eea4af2994841b9de377aa8a501c0fe3f20a7d778e3c0f251b9e4a7fc3f2457530ad369a229cbd9f46baaf3ec79b1cb56fdde0716458a374339641b8859fd82920d048d483658d61ffc7cee5dc72cc0dabe25b291db024d33ba43ac5a41c635cd6480cb5b84d5343dcb56f66da018864623ce10bfa8d693928371440a259eb27a4f41dd39089a2d9478c756d4c93b3ed9195e8c5cfa828213f217ec63e670f9dee62ece682d0bd7ee57dbe5e4bc964748af2912c2e1ceb3425c22ae9ef14e4b9ad3e992dd6047557c5290afd3a77fad4794f7ee041051bb4f5019647df0b2e30b2da0c1a6c95048e4081d898c93fa58169307197aba8eae0bfe175ba114b660ec3b8d8f59407bdfed769709bd800c9e6cc04d354ffc7b7140988525599a9809468c5656d673820427d94e9bb1683773ada961d79db16e9a32fd129e4d8e2d5730f2075cd522bb94718e1e07bea8696c1f56eab54028e4cbfe2d3cf4d59f8274d95f0787c6f4286a7bf6d04dc019faf5603ac54014cf5315f75d82b97690d471635c25c9cf7efa73639ea3d431259a88431f814553892037cce930afbc2933c7c4ad2ad0541a983a0fae52702cc131e0a8393e82aaf82b23de01afded963d806cea3e8da5405a3310006c60b4b37195eb8f241f83704058a26ee46d88532d5470e6a0c902cd555e24952e9399dde51baea9f54356aae612c928aaec8bf4821a16a954725bdde3f3f8cca049a4a5cf0af5163add8e87eb29a19380a3c5bbffc41851c719e39eadf37b8dc117831dee4799f39f66a6a361069bada3f18091adb663ce7b42f687fa3adfb9567304bbcd4b130e27001f98fe72d2932008473544f47cb67936fe8ee773be1ce0666445ce494524ec13193321784f93a810a3ccc8439b3f82b969cc029e8b3d433e23d1bdaac7406f128a99dbfeb73995318d9e45822444ddac710444c6eae3f85df65af16a237f48ef6e50ccfe4c9c5789c6261d4c78834fc86825923b4b553dfbc219cc37a32318eab0c8b294a89aae5870d2ec36514cfc0ae584a910cb600e35b5008272353f3bdc9b012591951ff2645b7301128875fa0ee7e2257747ad545494d93b46405d984ce0dc337812c4423a51c3d1e2da22ab71ceb103128b8479418c5e64178c2177df078efc00747bfb036e15424d7c96fd492df4007288cf858bea2142868a676412e137e3ac8c3e55e6d7a69f0dc647cbc74026f8190c7c4a6d78b107f53638fe1abf75519916d3febe04b0b0a5ec4f699d962a8b6ce286c21b57b03173251d12563cde36b88689c8e820739fb8ba079db643dfa854e2f02158615fceb950061fabdf0c1789a4be4b124e1d301d594358d2dd253ed393b28705b61a2eb59066253bb47b5ff3fb8d52b30dfa47a5b84ad230da40bb66f7cb11aedffd9c0b1284cbeb089c891090a4b9c477577cb9b49930fe84d8dc947eb7d582c7746ee8ac7e68e05fbc21de7b909c9cf8bb769f88a55cb753bd8355ebd12788fcd6906d272ec246172d4cd37f41de40a8fdc4f117549e39b3853bebd40d4f3a27275bce9da79dfdbca25283a15f23b071d1f728210df7757e333974b539778565f388bbb865590488f698545e34fd42d5508a75d1589ff11a4321f023383ec647246c59fdecd143a1afb37111160d5b42a4d3e032322ad470709170a0af6f349bd7a8cf32d2095a51b7d975a1636af826d56832d9c0233ab1cb456c06ac530bba1df206fd9356e50307212acfa82abc7e1b98e92cf72c6dbfaec157a74cec6b9b53fcbeb233e80f39d3b7f0822360fd5002def1b094744b360f7b17812103e4feee72dcfc4518eac50ae0f2a0c51aa18f949e7064ea8e4ac25b28d3dbed384140f0331258bf77d39835ee42dad3d93af565985f5ec1907cc1badfa7b1dd47aa16b3c6203b03ff401046fac14b8d02b86d6249ff2de5a00f64cbab5daccb96ec2f0a058f98c48ead54ad984ac54d8b0d3790fa37084f8cff3875b6d4768b30d6693250b1bf1546c5fc8d8ed73ed2aefe45e0f0ab19c8010435ea788aa9f15fd7af2ca625b50dd587a1c95bb939e48446e941fda993819519da789b1dca1851d6a355dfd0349100fb123e20b08233a8302acee7580cde72570f432d54031115c7d922298dd899fdf98ad26424473074f79d004f6a3977add9b97345e6e1c399217d9942a48949885bdbdd788089026e3a58802b6f7b406732f0830435b7ecce6ebabbb02fe69fab0f708f1b24f6c55ed9b1f186c9808702f9c3939cf470447a26cd8427cc7fa2ecfecbabbbe15c74ab95f7fc757022e8677f1ec1ed35a6a7212136cac9f8e26cced9d875f749fd3de9b6dab8b64e6b35101b3ccfca7ca9a0469f66412948b779d02b22cfdb2a27feb8cb8e1bbd3b63f2bf8faa211734a806261e96a8f8187e14f366fcd8030adef9de226a50daaaef8529abcb37853e39c633711ed865f86032297bac6048f403b6ae4bc30bb991596688240ed9f6ce1a3539377d188120611f88cbdcaa533a1d2e0f45489ce385b8657c57fb31f20c9b197e48aa8a2c8092fe139148020720f904bada6a43cc5fad4e86538a1cbf21f507b0eebbc9496f46669828e1a1206b6b51215db896d27beb23c825f5b391766dc37ba4e3e025b5026f52bf01efd5ad60766f6a8a0db8ef69e8b0983b7f19c13c7d49bfb046a8ab276cfc2b35e35b3c939904512d3edd20defd738e6d91c701c78939b170633a610e9c4eb2f803ec6ab9e6968222cc5495662c8025218ea3b1ee899668e22bb38df59db6ccd36fee81726efbcffbbb9619dfc775402e76bec0193a0f42cec9314e15d39214923c569fc1caeccd6b94b1e88c2e1dd68659e62b2857cb2670887c38a2f60681f6a637b3ecf818084e4470512215d20836b60cc483a2245ae4610a9e4d30b1ebd1daca6a75440b98679a37eb1bcab9621cd9bf60cc3700741755a2752e89838a88cce1bd96204949b116c333ad12fda930cb4ed3346f07c0f20c736c87dd51f5ae58d427a4db5869611c64672e6d6ad47b0bc824021a78f2b4b646cda21be730c27906db64c7147773f6badd8ba8c9cd138bd6c3135f798ec526f62e1ed8c64d7ecde0769510041bed440db12d08ec33a82b14308ba0b62c1cd15ce3169418e7d7e5d78c86c8f55177f7f22b024462ffd0a6ae4e713d3a9d32aa292844f726cd0de2d0120623d9dce209f9dec43fb3a282da98d46d4e3896847eaa58bd8f6e161b2c11cbaa58ef390245bd1b1389e574ade69d63d8ff8f492a38916a8a639dcbeecb31071204beed53384f4c2c993406b3d7f8508f95c017240da3215382d429c0ac5dd02a49a4e7a99c0565c927310150cf7510a0a8337d47577ed2d27b80be546a91bcb3ac85ceda61aef3e232417070299ee61a0957f37363149a3935edb529bce029d8c9061eff9ca71d97b629e5a79b3023c2ceffc00734b67d111635e0237ad4b48451123fb4d374b2c5e50741d8f8d4fb9424c1a0a68d8c38057cca346f22a9763d1eefd682104e2e789d7aaf428ae7ec7b385dc3390f7dd9a6917cb12cc5d9f6e9be20081427946a5e4650d49e3d7a956c4d53d82decf1a849f6c5c890f9eace44a613f3bbb13cac8147412589627f7dab3a33297ebfae4b75bd1c36bd6ecf59289cf8c94e96d2f8b0b621d4aa845d77341152754d5e257fae21d2ee1d4ea6165abe3cd7abd574629c05349acb795339c7055d082e6b1f67a824113540efc65a84465e80223510bd93b8cd12ef9f1c19fbab7374438fad775303724174d8777a4bbc8e50aa34707b2de69da7ca4edacb92a91821fb14be5bee93dca5c929c81253f038f516dfd8bf1b88df762eab3efb4974bd620475903f0ee904d00a08ba5251bc0e6e39fdd3651f5896c3cc4d9191e13e79b9d3034a05d13e11119ee48f304e9b8177c656297a47fbe035d75f76d74a8bb948645be583837ca327d30df30af83c65486f0a1e2be44d18e75bfc6637db82fb8400c8c6922439913d86af8d83cb3033f912f9bed77a3d88e8b247ab7f7ea03a2e7461877de9fb268a1a7d562f2b24500f4d9919d89706674144874499d433fb138e23bd52d7cb69816c1cacd17f0f9ded50e78d2edb3b7550b08e8c586b4484b07cb658632949df598e4835a97fbf4a9d8cd93847b62ac26059445982f5d748804d33980e2a101482a43933064c0dca22f36db8952700acd8efad7d8e9114d34cc9a79f1abbf66dd2b5f18ddf4da6aa97e739f74b89eb292c9923bffe6035d1a5c1e2f912bf89a531e0804a2424320004474f0d3975d1492c11f0b48babdd33aac7e8a65a89ec02e050ea6b392a2089f0ed9307eb18361eb103df79a8f0e18d6da759faad8b1ce7f4d19897d73ef450c1ff1ea6fed198d2e86e327217ee1af724fd18885996b442988930c82e1e476319d877e81b41e9e7c6450711cf4832ff1b766a4cfc04057a2146f71356c29f6247ead479710e69b0e21a383c9be45c4c33fc07a3e107b959bf43e5616320e546ee7d4a0d82c998b8b152773307d91076e1d3d6d59aa76a0db6879c07e98bbe343641477a45692be69618490d42e61c19bdc2d58dab61e5697f76d16ff0602944b9c8868f87f30a455897cce54fecb4570556101d9cdbad6efc6e0073a0d43d5c2f7fbec56e3989a2cc4affc27d04d3c42615f124a9e94b3174a3a22032df007bb490c538241ff8c5461c4a1a3ed79233db7aeb8b978e46aa610bd6116b552454905b2931d3912f3799d8dc9088ae7556dcf9fa3fa6d2f5f602a4b678a2fea7521862a43fe5cda81db2c9955ff61aa77064c62c489cd9607193a373e0e9876abbb6871fd714df312e9b6eb1e34ef68fcd51237d1f44899fbd3b58bafd30d2c3623c5bf87d3641303a5c2bcb2f9df186026793d4e561a1708628dd95fc1952b7554f47507ac5eb07a858b8f5f69c9ed2da24c73688babfe99f6874e7e6eb49b2eea5ed12efe75c795027d0008ae5c89265aa77c7b78b1de9377d37f74edf53a2a2714136cf16e73a924720314f6217a0359ea40011707ab529a57db009f11a0c6b93430957c2d0c13dbe109a763c49bdfd601fa920400d299eaed63860c072f284ad40b54eab2d089ca5c48a4cca34500bd7192c15cf6928bc18a96e7f7d24ed8492727aa0e0b76f21faed1f37536f49f958286365ad2e1dab65c89055d4f4bd3f2fefe40cdfbe52d73e9412f4862ba2728b6763e3f4f38af1008bc9b0ba83c859c88ba2392a258b4f5d3766f3c31828a0038621a961fd8e40690ae22b2007b5b27a1df12694d4626abb1b9f04688f4373315a22f2fb1bf65a951732a7eab2e8a6711d7275487eb96718588b008a4ddd4ba30b68681cf40cf7ba09fb0a19589080ce5958275f8079f3c973358265507b9a6cc291fb95b82a4677be473a33b6dab258ddc208277fed21edc7a678150fc0772b092f7c3ad3377389ef96e4c32213865f6c95faf8512f62e048ecf4a16b40d990ba158bffe9268fe7b2699469682ef877ca6f85e91988f1582c72bbe3ce17b5e4e300cb4a118698498efdd2b14ef74b444fe334b120cc395fc7b38856a665362062b9b2308a2fb5e965e99835199e60323d0c3d4e0573ab93f8837be373d8f1133c5a4b0fcd0e18f203a95b390b672f1703dae90dcad58e4ea7d3a8cce6d27536eb128a362de13ab5974154502e6475cf8a3eb34c9306a207da35f86e30b7279fa7039d13078c74a28876d7f83fb67145abf659eb8d73035c0ae6abcd68ee249136f9360a9c15fad30b4503429c1fce75171a347f11d4e0f9756e77597498edf9bc56e2e4c61cc4cdfd19c8dcee48ab31f45148528dabe18189c9e4ec7189de4836f3c5a17c4c0f5ffb0b5af4da7d4ae1dcd9ffe1e99127b8dadae61dc19b30b4aa2b7eeeb772cbf00faef9239256e7adbbdf31132c3d43002dff3cd66ed21361bde1ba2798183033ccff0d67004b2c16a6246913ed5a189ee99b27b65ec4c8d0070e45cd658e413da3407b18d4633e2f86482dcf85e71deea33f235f741b4cf341c50b11f639eb427aa65845b12b5d4d90753f5a4e32381ae76ca97014f4089657942d87af588b0251ee8b5392f356331931d89fd19d3d918f9eead9005a869bc3d42ff06de82ece0aa60c83164cd16749ffc493c200e9f6a74530c27ff5fa324845fbe5fea7132635952151648638d36c51e5e4c320894db1afb74342a181ec346690d94fe3432a893acf2843541dee496cd333ecf8c657ba3076f4590a6cfbc263278b2dfbdfe398726efb44c45c9cafd05af0600f82152e33e86a4e680620dc800c0d3a3820dd94a37115f873fba6e8be83cd632dcbf9de6ba4d5e8e79c1ca933bc186688cbea693c184800f16a7cff09bceb6278007c31c4c978314fc86e6d0dac3a326f8aadf52b51d79186104abb16e94cf63bf3dd8b9b9746e74240e23e41378dde3b33360c7a3ac1763c3aaa4e86cdd14f8ce12e6bac6fe974763e9d7e5de92bf2c4bd09d659b55944c82ddaf28f96be35a6531de14cc8b76c080bc9a41944599bf8dd71b676aeb0976083a8f0236e7cc2a50910830bdbfca06aa3c81c84d350816787e0b8100dd36f821efab185f075968568bad44822b1df192304752b244353a76778131e3e623fd5ee461e114ebebc5e7b17f16376c4697386ff2e81782ac5cdce05ed91b8a56278f8c6cd35efe884c330ab3d941e31dfd9985796248053dcd93af9d80c04212f5e6fac10b82fe98e90c08c49626bca01dc03672f6ea1f6c0871b2767c9f7474efcf6c8c14b98bd84c41e08607c47042dd6ba73c3ba63364a8ad9ce570ca64c9e2a8753bf10f560c146a54cfa9e3c932658e49cde991fb36178b0eb13c48c4bc8fd4baa298941bded4688107b4b668a84f8389e36e6e125676a3349e388b00e372bcdae26f96597880cb237a6dfefbeaff081af132c721312e20eaeaf2d511d8a9d31a6d99bc617c4f507bdaefbda56edd4cc01f382ee943d592814331062df2504a5ae45e51b795dd4ef57562072e82918835a368fb29558d5fcfd405a26a8b5ea88abb3470fd68517db0bca40b63aff576f9a0a40bb9a364fa3b401e79f0d73f46e22b11c0c258469b72f685f0cea376de43ed4b6a561ea89cf2ef38746761b1f3bb047382be1b387f401c9336887327e4c4565d263f79fd0d404815a0e895155abcf61db6d440b4d4670fa66beb343cdbb7de478683b294ee4b90977a00364783ca8441164e7a7d1d4059e68bfebdf6f6140f23afaaae4cdf5de2d7c71ae8874d2055f7758e3f8e426674d892f96692182aa1f4d7013a142da06e550c59daa28c9a9c499f3d7602343df2ecc2ad467b47b4bf168f016857e47351409f995fcb7cd7da58f49d9a585f2eb02dcfbeace5054629ed39bae54f4d78f88742ef598d2320cc85d6b59e6607a597352a0865b60ffc161993cf5535e6a4149d5e894c3d5ec734c404a503bc7d83fbe07389a1ee9ad93d2dd822a81e1306d103f4109b878363b9c9ea31c404a5fab36a3023787aa4813b57496025ef50405e75759157e37b87ac846c9a21f01c3f732e03b302afe5dc2362ef5e4da9bb88061abeb98e806696a487929746cc6ae3c83fa8d854e421eda92b26430bc765e63d6e4148b82d45495bc7519cf5f9080f2350cefa8f972efd288e64653ab2f8892cd681ed9052e3f858760b48999d2340bd540e085c947476db84e991c48a72173fd33107de7d6aebdcadd650ebdaf99f27c2cb07db38070802568ce4ed43cc6511c34e8a4ca1e09ac84c53b977067537f0138694d64959391006dbb99736319732d7a59637576b5624b28255e0a602bbdbcbc0d6fcadea3deb59b25422ce57821d2be31f71f8cdbf8bb5edd0f4c838f8bd7a3855bc5bc398f5d3a1a36a8c7efeddc42053a2997e8fb6df5991303fac7ae7fa14cb34ba78f62663d0717722a6a7932b81b497b94759bdc50afddb113ce92cf407838c903c89d8207d19da3578b4940534a6b8e5ed6170b316427dd6495e12ab04e68052767aa6a3c20ebdee4ead2a9fe069d0ff9d6d070399d75709838e136ba62e65e9e2470824ce97338c2176c9795cb6c91722915e86399c8e763304f4e18f38db25ce6ed24c385d8366db0776539ee071f7a00643d6708231bda970a422bdf3cf7cd9989e36fa536eb6eaaf35698a1a0f8ad6cc61387a817eaab6e7719103eae74a2f32a1b5736e9c1258f29616a12c855c94cba160b0e3a02031af6a8d4cfaf463d804849ede10b1aeb71ba7431bc6ee49b41b224002ba83fd12edaf9a2bc8a19f139a8c2dfb72ebb47964578e9c7ea361c9361b34d82ad2a997039aa248c311aa4b7ff8c854ebef4861152b3a55410de58b0fc0736f609cfaf52da0f382b4f6113d2a86ab86e560cf26dca5c6056d2a658423e150f6330cd4b234c10086c39c6e2562e7a87fdc16d79845122e4a7d597f090dd4b68f9bd338e7dde648d5bda96bbb3ac050b511a7d251067a101717da4930653f65d60a46fb829fb54590a35bb307d01f055fd071cdd342e7f2929dd222867e42c1b4ce594fdf67dbec24b05dd954ca70515806965f1eb4fea87a8c52d30d9863c562383ce3c10acfd7343e6bbdad1d964f209241aca2241a5f682c2a6385fe4c3421a060ef5fe070d528eb25b1a17503550cbe929fd2396467c1861be78607a40e0d2dc64b33df83115dfba4e361823f4f6453f999e473ceb837ab32d15a622ec47238c97ae6e61db149938956b0f9a8c68a74165dcf00e7167a3478b258eb74aabfd276a3f00830971dc0f35c04f04eebaab6b82934bd3b48cc281ff619160a7887f700353b447231efa3bf5b97f820dc2fef86773687288ecd7e2a9540146242614880967b9430b7e00cfea231870074ed826e51bbbb0a8f213b1eb41c63647a09ca022314937ebbf6f94e7cac319bfb7426dc1b8bd9bc9fe773ffbb8b3972a5b2b8bb82b8514c91000d4e7691b495f32e36860e67e5d30eb695ef1f6cd1a6d3096ad447dc24adea2487c228e273217000ef20f1a10d483e0695ea8d3303b4a62c4b93e2d53e97497e5c6622c4ccd70fffbce746759a61ff86ccb80723217919e3035b863795733d4c2ada3a6a40bb97b0288e3c975b6bf1f3f7c35a14d055ccbab6805cb990aa7ff5f7a0ca879ba960ac2a83a1ceef922075654df08973aaa96cb31d42ed6d21ffc7f47634a1b9af793a07004480848be66c136fbcd47f59f2b8944aa1d5a93b1c3e1d24cde18c7ab6fc1dbe7ccc917ddc3ea2bc07dd1bafbdbd6aed2540c21819de7f5b21a294cbdd70122eca6dae1cb62e50767b61a4ec3e56691f3d5f21332fd15b5810469d24373d8a47eb8b412ccb11dde9d8666352999873cf3629fcbb4bdb197144470306616a669edf0232358e36c247d4d6e95c5d2151258224eb82f7a6b979a67b0a34dd833098e96d116963530f8d365e82313ef6a4d9970dd6b798a5adcd86237aec6d31ed55c1e033fa4f3b99475d6b933970fe728cb354df0b43984b35805cf71bc1fc992d57fa6bae688ea4949055870af507b7d13e1bc71f0ecaa4679f36ecc965fd81268114805794d0bae2b777bf81cd20597fe0131d7ecb0d094c8eb36333f71b315c6002628a0ee6941f1fea9e2ae96ec733e01e173eb5aa6f20e66dffb3be84ec0cc791a0ddd3adfcc5d1e93ae165ecb393521355afbc6a0f1eca7f0a0ac553c0112457009b6052b6e109055d3d6ec5b7a617f0a9316a34fccdacd0f57b8aad894a3bb6548c7e529d061c6f5d90c61384689034249551b2bdac574b691467a265ff5a49c6c814f65fdcb28e941f4fc24a5752c0dfd5cdc899e94cca99929e14c3bc38b0872ad7e3f97b876aae1082e4b79d7c0fc6a56d4576fc79f1a31effa02aaab65a43839ed9bdcc2f37288c26f65f9bc3793dc5130aecff3457d45d5a8c0a82edca0569f5309800b6b484b5860d1879785493babc72dd1196b32292a127d46fd87646cd4a2ed8f39f8b235bc728bfed80d22b70eb68e889aa4dd488aab92302e22be737a3f1d1cf638b1322536aaa0f84932243a9db1984d292ea5d336bd03e01421d2b8c4483aa2c2d2c390467f51a6509285cb539423ba3d4ab0c0dbf493322c061a0a15dbf2326fcea873890c144aef4247120bf63bfa2ac0f5a6b0fed96eec54580d40244b04a3beb294562d2734e21b401c696ba08d9389d9975f81ebaa0c9df1951a4d7313381fb32630c3843501a00ba29d322ddb22cf7ef67d7a05f2c3b106d1a0777f525795ece4d47eb65ff971fc4faec1dcac67634fd883ad2911e2c87da1bf46686fce7c91e51a90d74a483ec137b454b52fe02d7572b15aa8362630318a765ccb2a6cf01514c0b03becbe53d566b918a4f0318e36a58ef279d824ebedfe893b1e4e11b05b8baf172ca6cb400372725beb9c6c58ceaffdc2ec134d45e608f6c0ab70c968c22d99106878b1bc618a33f1717b7db3006f53faa1312e508244f146ba20b05be5efb4fe390c5722acc3883787f09cc92517499d4994b324ae11f5aa4c577e34073b4c6d8b7d577ecafc69b7c2a059f12d90219c934eb439d4493dab245f9670a1f12e628e1cb329c50e44310306298eac6b371bf363b3861ee9aa1a661e54ec38a532237348de44179453d65cbfb57d631b430695702aa8e850b933531aa9a8be914bd7668f025529ae1a6da1ca8d7d8e1ccc9b7e28b5b90621b21f860160b6863bbbb015d3f76b6b1d4c5ca6d64e955d33bee9f49b343ada27f8070bd7c06dc5ebd668a4091037eee564d9e9a90718611d84b100242c4fe00908dc399b54cc910575b25c32ad4d0c21536966b37b95da32b76c38cacd99247a31e1c503f6bc848e1d822f7844076fc693809160c454da0177bb60e770dc01faf3fc440e0fc2b40dda896c73d1f681a0ff90ead064c5967b04cdf33622842ddf2225321d6aace52e480b88d11d6cc7689b8d70102f2dce2d182cbf445baf850c8cdf2d26168ad6731258dff5be0d421084c4c4df89f46c82c49ea5a76e0f129556624d428e227645bc01ad35618aa8ef05c691f3c6ac7fb5c3b3a8a8fc18b61c51be28a7d32486caf4652520560269800cdbb405027cba640f69bd5e633ef62488a4b2760e46f2c74c07a36616aa1e0f29c524edf10848ba96e49b46cc4a06488d75eda2af6317ead8c8ecad0851b91229ed4e825ac8cc7ac4cd5164803a6a026a6b5fc83806a7ea9e4e14d3a99efc505ddde027263ea4db0d48cb9d10c3a28e2f0e900758831476856f550e44c79b2904dd97b13c709e00f65a8590581b0411b20e235e44e1cd58b2e4420997ca30392b7a04f21a1144c9e3220d4e4615ff52e99fd799d61c41932f31a0e76cb791c6ef4a8c4cbe01c6382a8a2e46dfa96ba83867883a33fb8012a52f5eb682dbe76c57c17e5ecc2b771aa1dcce73b5d681e1b10c54d516121c454b394eff887bbb7856e5527217a88fb13b949554deab929ca2a018fe315cb3e9f4d1b18f855dbce25ed39fb750f2b1c30433007e54553cf014878f14e70cee67ed6f67631fa681fe0c398d057e45ea4dab9952878f072bcfdac564ce01bba9df97d187f928bc26ed7772cfaa9ca2cfecc8c28e103af17e0202b2a0589919608399b0c9b48bc22a4ab2fd5cf6831673d657a7db5a3b8100d10f59f74070da143effdf38316e7bd676bb3c3015073fddf02fab07b70e9279c38d8fc88e60d15b09921d05477f69403db700ff114f46700a14dac102a7d942e6a466fb880b2339e0c8dbfa5f723521f1c36e2e16a219d7ff87500a6adc95ff46eb8b66fa540e7bf8b303706fbdd1383af0c93f407954db47b76eac1d7b30dcbf63f60f586c5998a9692926861d289692e24d0844f14d5f5e8809e4e5e136c127e41435d62c6c9327e483698c62566a4b083f657e426f1a0171fc217385bf82b7eb037202ffba869d7fdcc267fba27a9b89b7f750da0ac5afde5b2aed5de04fb79f39e45dc87cbcf91b7f4dc48d453058f5cee7a94a116185aaf38500f8ab0dddf6e915a2e2532cd4491f5f290142a68e7d0dcf2d836fcf54929826b4e7734f96cc67d92754ee0f57750f0f7a475ea07cfcb2d9c0a736c6b5f280d0f7c790f357ce5f749a7791c2d1525595d2c5d8cbdefb8637c9fe129e1aa52d0ff5d0b8fae559e0a5eac9ec9486e13b243cf5839c0f8b45023e2cc2ae3bfff7a8b19007bb534356e6d17d36cbef123b1dee51c23a7fe42146238e716728c3d189d1bc7b56219a8387abedccf090647b8eb94531744140e6208fecc180bab64dc8498c6eb7f755b0d235ed69ad24fd384b3562d990059b3d5f0b324d6866087a00303ae6c4004b18eee3baceb8558203eebabc28cb6792b5e2237493d222bed778c9a6ef6ab12e7c0e50971701bf23bb0c8fe0c1f2b2b140aad56512f3e99d1f654d52cdc91ff9cc164f40e2aef78dcfb1f544f00b7cec3a9adadfd3948f7edee0d3d752b68ad16135ca3e1362933dc46759cf2544e855e979aa79c252615c4dfd8d692eaa6f9201c4a9b278f900b0a8f66cf55faca3fc7fa9042d8c70e379d0685db9361459095e50cdba5ea0885429c7fe1509b979a83984e6dbd1cc7877911e7aa9dd262130e2001752fa6e87b7db35e9ccb5a5b264eeaab97fae0a1496f50dea3b5adadc0525ee863750fd49946cc67dc7789c5e1d07bab946220e5dc400b1475fbbdb33840bfb15f09b908c2f7444c277d340179584f7d87f0f86db2edd43b81ab1225f49855f0f197a0d8bf8ab9be9ca99e012f62546561b9dc55d900b7c10071235649155bb3b7655df25fa0253f651ecb9d8f546040a2a95319416dbb834f2538213d401d1b2fa6e859f64ba25dc45f7b353a283aed737def3f01ec8fee3ef5164aa1bd60a1feac06e364f8196d52984b263dbeeb729e66ec85762f06c292ffbb11ea37a57ad41efbe6ed5eb134b14d53fb8fbb0456c1428f2285e44104f2f6c06f86ad0d92adad6da6aa4886a8e71ec6adfb4243cedce5eec73d9c45c702788f21dd9b308ae3d3db1e733bb1e8017ca02d4d18feab5c05330031b044ffd0bbc944d535dc151b7f408a03229d8da4ba1606e1994682c55d0b4ded61636bbfaa69a66ab87d0b5c72063c4748d4986a80384d24d5f1b7d766e2c7518db01b104461aa8607a5f9a57a93bc25d6d7bac2c64515ffc85801f21c0f121c66764ab6812ec8f20a8f9b0f9db5ff0c7badc1955c406244d08eb0d88172bab99df522a3f3bd66218f5dfd547e41e53b502acde748b17b897749d644efc9483c6cfb63431867fb8d9a7b4417f017c04e2b23b13a9d54110834f98c9f5962279c0bf880459adca69cb96b281186741ae1db4012dc0c80ed3c994f261c096e55bbb264ef425fd6e1befb221d429af766c41616134eba083c9474b0b33be5d4615b77c2a9badf63ffaef25dad8efbf87eddc9a5825add67cd51b4c9383472ee22999cc6351dca4f14fe5532f3ef805b3649cdf6293cfc94f2d089d32cc41b36da89103c25ad784515a901af0a610fa43b32eab630ea73190dad9a3d0508b4e3de682629b9f0cb26cf2c2da509d3ceb072f1fb74bbd94637efc201ffded0f93934d1602a0b9b711931fa30079b4b5267a63c0450f12c99245ea3cb44ee5b50d54bf5b8d412d143d9aa900e75aa651bc266d33fbe8645e244a80aa443d9a0a100d7e8501591b4bbb57b2e0c5ae84cfe25cf7818d75b80040a33848f5b5dc3b69dcf1b77d0f396e3e7b58ab63c0cb59855474d9a151fb87e083f09d63553c5db24b281406f1feb9620b0759336f5e2fff33ff277e51ffafe450a45d219a25a6e8fa0760cb0e69b56f1eb7b5a13cb51712cccd80490fc1eca254ca58162b947719fee3c0764e02620245baadf76f810aa0704e919604cd8cb01f4c86e81790ee09a4175d77de143695b58fb7ad6842f37ca872a0c69a054681d5064c7cd1a698f109e3d64fcfd3d8e1fee9967f48339126bf68422503c33320b007c95d45e147f12fe9226791eeefd1339387cd17e4f6d751b392f03622cdfa9ef3ef9ce1b0b91a643f1e88d5956907a24942eedfcde7a2da40f9b2523c3a13a080b2cd1a4a4c1eca5818765b8ee71f4487866496b1cc83796cac3aaed2655accd1484ce7a0d441bdae60b54302c4ffc9ab35379501e843b1a5af908ee92313b6ee21ac31a3580d3ba369bfa5a2d6c1df80d4f8c624f243de3179f5a8df9f43183dfaccee0e9272790862983e0e07278c0cbbf21ba36979358e779d3f54b0d5a6de477e8e338f5cb590e1c1bbdc3bc2259dbbcb632de175ed67acb0393b3802a408d3987a8ee07f6d9195358fd1c32103325303e4a98c3fb8946d9e26455f86d4d29a9099c9dd24b62cb0618d4b64d66a41ffef6228705c227e1993af447171471f795a1e338800cd948cd9d7c0fffe883e1e86a1a542116c9c03aea2668ccde710c93273ea79366de86ef9eaa2303d096cf37199db7c0c1306e277d8a658d9fc72b6770fd398eb84bb8c4ac2e16d7e5c05bda80fa910ee04aefe4e736c1018008ca9fc1cdf0898b19192f04ac0d7c3bd46577548f1b2017d72a4be2be0fd4a0c2413487e97491bfdcfd287e0193fff76d5c08a950ebf1c4afac58d7101691964b10eacc19e45103744fcfff95ae1363c4e2381d55143b5db78ba82bd784152334cc203f023ae2d5b78c6e0c13ceef6ed52f845f23e18164d8c921fa4a09f8d5c205877bba185d2dcfc2697649293ba4b7f427901bce2a73521a09a92b4cc4de557b4f39557117d5c7db458df669d4bc1762e835c5cada403d4cb8570bfd22b77967b28b79422b959a24a1aa231dcd2b4f904f382b6c6855ac2ed08fa29bc79b6cf7200bc0edbc0919fce289189e54ad8589c64e303dc668a9776d1624fd22b068a6e98fd316e312102388e9cd059328b1268e183ef703f4e9c8ebbca1ad2a82f6ac6a46c3dc8bed92df4a012c55dfac3b19adb57980f6ce1fd4da9d9c7cffaad5acb622c5f64857285c285f95b0bf9e486541578af1ff84ccfce05488370100d830ffc60e9868f0274df0da89a4861bc0c5466b63a0111682d27c247870d6ef8f766ae84d3164cf760a6927743c3899e73dabd542f160d03a886dd15133d90425d07326d5818871aad53ee50c451e88fc6c0c796fc1e2af1299a5ad8b6b858a5bc098002310ce5186302ecde273280afdac5a2234da6f148c0e10b0bda105574ea12195fafadfdf78dfefc7ee53ea7edbe989a6de45ba6cb41f45a49c7e74c9cc9559f802f14dc4acdbe650d1fd577a56af14c03a56538e59d4bebf7f588be35b8fd422d2a658885ba258b61baa1020356fc10479288139d2e5abcb47a3a3dc9e3a60facb24d5afac41c04573263270341506e1662d8922d48fcc96ba2653626903967aa35cbdf55bc041a9e4144de6fc1c55ee70ed05bacc91052486e7f717b10082cd52a5751d694892aaa9c37bc03ebba380b34397cc5dac4cf14f667d7c5c547c4432fae39619ece1bc59e9ce7a773ec1e74685c40053a175be5f339b31bdf620adb2ff064e3cb89e194992bbe5fdbf1d2f0fb0898e7dd396d9ca9c07b4f42be09fad923fbf9a5f142eb2bceffa32ad3bcac565d132169bde7f67f9c3639313643aa6535271ea4bde8745fcaf7860486c346e36054e17742fbbd0042baf9cc2706c3a63cbbba6087a0f9451e29c2b8fb24a805ff9a7f8a8515f4b257e65201dd76e9f98cc27a019ac97ac0f93019ce8e21ef7a75ba272d6e070971f6c895993fbd9ed3eb50ce38ef6ec3222cf288f2713f061428de47294d86adffc7a16644adbe116c516ef33d46cc8f04dd1ecdf8371349e8954c95882a29c6634e33fadf265d17ce2223782e73b25b1ec3521b26a5b7802ae8ba9a21bd6b530f18539dcd02bb86259c24d214f0045334c28ec426248bb7ba571ceabe377accc70111ba93762f872282a8de8ec2a81d80ca5fd223f6b52b3e5709b07bc67cbf7b4ba012a5959992a73e8db95b2224c85d68d8509d857ce77517e67e5f3866937f8b8bde3e8b5f0b6c32ce89f71ca9e75ceea71894e1c5c0b2b0ebd39d1cfbae6636539510313b325be5d8568e0628a23471c79fbc88bd802fbe5164c6ea8786c02d2cc657cea47cac78490fd2fad64788d1a1571f1dd4486d4d5733e0df5ad081fa3d0fe18d9466df95893e2f651d907b4ec337a28344d1a3c5325637a260768317141eb7974dd75bde46fa62c5c94157710aa0ba6554d710e60bf340872a5f246169aee5b2e11f1ce3a840cdde3bbead2e0132e94972b6910d695cbea9fa05c6786d787bf9256d9c1efe06493902b65551867d875cddcee3bb6dfb19bbaa89516873012e76476164978ff5996bdf2b8192998c29ce25ba5b3d4113435aecd7df30b3e9c83ca5323eff2b58d2adaa9175ca77dcc02b4cc0aab15ded663cb49f60336580972f84e1046d24dd31e3d864d826208b783db63de1291f44ef1b0d172ab86c2bb4d8389388fb8ce75a91cd6319dbf1d238fbc6ea7c56cdd08120356d38c4c7d65f0ae6baaa2fcbf9a322605679ef7e25cc9a5cc26b5a9cb0538082174d3de62658cfd3e6a5a27c62975af6d999eb2f47b8aff9382d1565dc0dd3dd1180e18264d78b41031f8ffec84fa804289bcfd111f341613d201aa6837b3a481a316687a204c4754291adfb6652355578da09d9682cd0844983eef1f39892d27ba6764f4a2bef9307f015f83e9345252dfadb1b020fd7614a24369beb82d92030d19eb637233032af5613c968725e80fd35ff63dddcbcaccd2f8223fca0ac4c7749c4f379911cb0d63dc3d5efa222e5d0aa6e88e35a8621ef7f5a8a18c1efd7a06cbc9c3bbf7615ca44decafc063bd41703e2ad6c619a561896d70757141aae09e03b2b166535699fa1e832822b7a4b14d0a3f5a59a3cb49d89f0ca5aa377430089934a399b5c4bea9892891e3d8370f19c87c1c58d063308d5d1f332571e2a555b3cbe635708d7efa2f208bf225305074367832df22a2919240eb06bb98663ee180739d991aeb39c84498617075b83753599ce0f681ac33801bfa8a8d1a879e1f79ab850ae4943a0893710952644507f80c898b0e490a13deab78af1fd35d16081a87afe8e11870fd5980d892478934ad7e186a17bac25d1aec4069be392bbd14686d71b6fb035689edb23a5ab27752c66124a7d69d77070849804bd55843071f81b7aa73816ce5f810ec84120155f88816a4e6a2747a3d9d85d07989f10e1d775c10d5f9817d2edbc629092f3694b62eb44b8d40b492283bb5d0f071785b1df62f65b724b6119915acdef0ca0754b26d944e6598f5b0c681b82a4258b243d2b7fd498571dfb2ee12fd80046a3cb54c7ee27d5bdec28f4a44418ecae2615682bf309c6eeb886539eb03507ab67c6dbb5178a4b39f6adc347925051803bf610552e7fc517c9b040d1217c0c9d83fee0f5f721913e3f139fb0e588b61b55bae37af8e784d75078f03507a4bbd4aacbf997b03bbf01809b15a3dbf070e699f939346d27ec635faf3af4f7dfab124369423a0db8d62c575cc16dcfdf18009f6b75d44011d1308b0f9349e8ffcc9f7c35cceacfb32536691bbf823950c693daf70eeb465f8ccc686b96eca96fe5645ec139670e48e1e5d551a7e7de8e8fe52300b4a79d8eb28db792564d26bd927b529dbe6cd1df9af49af2fc1cab2ec1585a0b719ec3fc2c7c3db6cc7140eafeb7e262f8788fe87e40a2663c8a60db5f415730b5f61e163699e72600e12458aaed8e56fd826bdd0f726e2ce16330ce3493fca734ad66cfc8563e64d5d566a21330c033088f3825e63459e7411d73ae38d2ae258be3af9a1c918341f2b0f6ce6356f338e76b87aabe588cf05e1b438aa0c32a58f628c418daa32e07284a99b76c1823f26edefacfe14ef2b4682d72e48da28a366c431a2598cde432827850d81d74e80d3424116294f6b408b331a7fa22b679de67f608efcc5ed03f3ec5813036cf4ef68c3d07934038f8cb6ff647a3e9dd2838fc44a04c18c2cf7810d53a64cd386b4149f750209e9d21949e70449a0e9767f87e11cf7e9ecdc53def1d215475d97db76782f762c839b369b28cc6acae389dfc7df26bc4acebf5a898914e1ec95b80af1777b602ff7859544c389ff93ec9a5048c7df8ec9023a767839b0de859067c01c7c1f6dd21bdae9f619089fe540a2f583e62186acacd4f0a694628901d2112465f8c7d9b0f46e8258a7bfcb9b3ea4552562eab1cf3eb357062eda549b7300f8498fa77b368939aaa7059f1ded93ef4760ef9ad04a1257086307eab564cc009605c90084618cc80ad259c81e41a5a94af54d0f3ffae616b767c392d858f0e2f02a18fa8127a6024c0c3c89db0ff67e81fcd3397f493453d3f175fcbab1b39c416f11849161d7a236e13cd9c8c29519fd5ae62f0f57861d715c6712e8c37f4b50d97470e519851509326e39fd98a578ec71d3331b69fadd34b234262bc3f40eed0ffa48f68daf0204c4788b3e050563aedae5ebf92123099b1630fba8270350a2ae0b03df0ae988a16142e9818aded63c4e40c1814f33c0a1e427ddee188c53b789c726347b68aacbabd242cbeb2ac1189d4a935b4eb7d303511db87064f40132a5b5cde114784dc7c36f276c1d2ad371c3edfbb985948cf59cc93a752c3fd7bca1c02d62e2a1b9078b26f051d913a1e32ccb2bdb07961e5b6259d48cef20b400a4a605bfb76b66a4ea2e5e40809eed228e0a69436ae8bfa5c36a8abfac405aaa11bda2aeaa5d05fa63cb69835a0deca6693129d2141ed1990021e82f370fdf16aea57d1bd0b01208d83f51b0c4d7f0111b3d9228ca89c50fdedafee8813b456e150282592715b3198dbeb11b06e9c1b30242cf7aad86f309f35349d5839aacb7bc87d2a4cd4e103fa7543ec9728c0543b49d9814bfd8338ab81c9244a0ee708811c4cac47bd18f36f8c52c8287eeb0937cff92a82d26dfbe45b990de10e7f2e8240d6c2658f361f3c2a549b9360c16bf0e73d0ee1f15c671424459effd7afb55cde7204711bc939d5266b3537d722078de63c417cda2525faf74386216156e49979114551f462965944f45912077bba595ddf845ead8986d546417a623be901cd7afd8fe76b45d9dad7cbe6dfa0c48c1b084b76cf1bc5389791be6b6f1a01ee636675286a83adf4668e6ab2097a3281ce6eec7cde12e3030226249e17ade61a921f1679a1937b735dde22fb67b6a5097b8f3319220cf391ee60f6fe1b86baeb9b47f6dbbb573f103c5a2f2c05ea8f5ea41f61a02445d5d91b202e48da996bd472d8a5c843e455b0f8760bf27a4ee97132eaf04e544a14140b1918e373e0f16fd78e97e4b028a5883cedb080ce4b07f5f9384f9dfe1dc09e53730fad34526f2789b469f06ff1faea97e1b3b7f2266f43f33260310ceae8f746ea2314544a9a1b22469b55ae73057f6f393332592a1c40612fd35760f88b972bd7f3ec63e75ea1a362836907d3dccbb6d16c17d3c0c9b2ef1357e8c80591c8d6c50f406a952dbc16c66401c16ac58c9f809bffd683e8b83e25b71e24d9837916c163c7796291abb0b14a249c6873f5815492b3172c6928ecd7dd72f48c058bd7e5c5903efa211eb56f1f7dce68adf40d7b68cf11f2b44c337beb64d82e3e720b9a4076fd9895052642543bfd68dbec8e80bf582a89cd20be99d62f17ea3c806876a4ebbdbd7231dbed3fef836b67796f5e5d069d342f72856946f101053b216e3b5766e2d6686a548e671ba66695a38b26313c26047e45f98719be336b538da493b0c602af01aabd2d3de0f50767c9a517eb02c8496122b32dc9b84b43d2ab92797127779c0cb0648e8c2031182f7ac16de3abfd6911c5b2794b39207d6654d0928ec960ca842836189ceb3b9ab134180ac5371c1769d5faaf1825780f9f6801e32e3b09f8d6a8d2dccf526ddf649369290d5a2869a3bda66a0f048889ef8c1b9708d1c50f61dfdc555e447c35642794858c15a33474ae2db374a4b7a9f5ba11f2b158d13f14f28f8847d8e5f96abd3c339c50f6593613f3125f77bac6069af1ee3f9236f23f9c73c4278d884462dfac304ba5a8dce96e8ab5cba1c8279373e42101040f2bdd0f17605eb1a7b181c572d35229b92f0dbe66110fda2d84990640832df81505ae5df67b4ea3931eb84e8f9b1efc756aaf3b6cb7297b5125463d570c52c89ea312f940f5252af51b963ad9fe4e49abad0cb64c285e5673b04a71acd38aaeb1ccb2ccc7746fd1156cf645df6b1b0949d3fb2a26269d24771d85994e7bb83781a9cf0e248069ceefff752f848fe6410066635aaf78078ea398e049bb1804462d4f44f420a2376c8ff2a7c0f45a8bc0cbc7a4687cffc5f92ee514ed90974e8dbbe6842ad72e3db3f8de62f86aeba779b2295a8d5c3643c5c134d2b3a58bc2286ccc9b5720183ae0989b38962da53cd5ece95ca596eaf1469c039bce5145966566b248a18e291a8d619b08d73f5490ae825b7dacf75529e65e6dc1929643cadc32b1b473253c85710b4137f6bda90f8deedb8efe02ce9045235238649668fccb59954cdd73d162c1cf50e1a11fb82039073f61bbe6b59e48aaa3ba098d14f4590139779d2a8297be825444abc0b666b03cd0cd98a4492774c922b8aa6dbbd065e357fd9b3b7a2dc7da4adc4359492ded0f4d8cb4f4f621e4e791f54943f38b15dfc9adf6beeb8760080ce2c9cbd32901244426c6c8ad7d99ecf0d1a20e0a2d42b1ecf8b5dcc7b260cd963c95bf7b779e9c8bcc9bb82d2df3f3e847dc9077314f0ae4b82266ff5095a981b36532d6aebf7fc2307d95d19e20d34a7fd101140d05798b6124c9aba9c11465a916e20f35ad358c4565e065896f7db9e2f97a1337e8d4cf4e973cabc7fdad0dac64dea02a1f65c3bead564b9c85579833f22f2499d07241847da6a73dfdf9becdd90bb9686001f1c13be18ce1d163c1f660be75f8458c6b062f7a1ec010b575bc95f7aa5feaa3bfbe8c34e32695ac53934474264a51671778a2fcb80011dae65d608e6993c302f5f8ccb44de90ed08c48de3883f1882bc58fc434a029ebf6baebb71cd9e83ac902424739b55e3cdeeb6db2eeef1b0861770bb5e45349ce1c1f522d39382f693dcfaa9e1f398cfab08b9866f92e32119d70b815b042a3dab368b51ca1d8583bdb72784a1db2da2e5dcae8b196f3c7e064b93d136d88b4e308472c489599b7e3f44da025a4d33302e693ecad5ec9aeb3fc371160163f0235257a42448d98e0a8158f04c8a1377c7d80a862919db439ba7e847123649eff8b37dd0de008dd4a67df8e8d8da6c5574c7c18b5419cc853c232b641fe4b2c1b6b3e1ab43f58623f6c328d48174410c62bfa69875fe5abe1b1ad030ad35f9cffad98fb556a3323d1bcdef5b8933176be47aa109b2a3330472da065256130954314e1a674340557ae1d0618cbff5d2ce704ce81961a7f6f6be75e1af64615d41aeaf95c402faaff69317c142f565b4c5cdf25743c8e5599a8ea89582723ec2634f49cb913bc4fe92754f0bb1e4999c7b6018d7f9df0f257c8dc6641f879031846eae3a356df1528e2859fc7a3c3b8cabe1effe2ec7d84e583d12352144c7c6e70da8110cf59bc128e57dc670839c9280b8a0aecf1337e30fbe065dae1a82875df48b906b66b25924f75d667e3979d935ca3b6f0727024a0a11865de44a60e171c336a0b2dcf0d1940ed9b917de347e9f3812d5fcc9e75cf9c72966212f291480b63f70c354a69bc5dadaf958f6171ef3419433b46eba0440ca59034cf7acfb97cd93b85a233316723bc2a3761e3567cb8029a785499fcc1129415d1155840862810b85d68edbf15b76eac5acfaebef2679db3da67924b8bad9da0343ebd347c3af60ab118d5de50bbc495d138e6ca44520430ef934b0f9df261d7dd652757d07a60b0f0804b10f51bdde900cb06e9d18ece97126e44be6586542a65b76a93cc5feacf5e17900b99a656f4ac4c48d309f7fe36138404c576b8067cac5b5c747cd2922f538c408efc675ce92fade2297ea091624e2b7e849f7f443c96c6e8529522bd7a578ec002a279837d73fe20aa18350d72b037a8206aeb1df8a00c367a7e46c1bc828e91a836cc4024cc3b6c4860132897e12ff0c335b1d05c757b44275267581e2eda073889e7d1b94bfba24bfb3a8a7736e26113a9ef4996a21f2dd9d53a5832ac432813342f57637404f245544989b5827f2012dcdc15476dc0cd4bc68f4cfab6cf5f498bf6b0fd76b8dabcf2236826842345e91069f47e338e74e8d619af77574932e515bd2350be7e7ee7775c6c6d541b9d02a050146aedd1284be0e003076546b56a3c65acf8a471d8a09dad5b732a2b38f343f82e5e191456dab774a20b3a011968a0a29039555ce0ab331da48354ff5b40c92489c07e9aaaacfcb654a708b4b0a8bb3689825d0ba943518a17ebf7aab80b5b4db4267afb2135ff81a2c7963b46c2a0693c1ef9853b47db08d9588ddc37ed402fdb5b0fb63828b073aa3dcf12c0bf4007b78149a23e23c14376a1b120c4e4a186df081e5b4c6b831eddc74ec88f87849212325f352ee93bc5f2b0cbc696d7b5afa6a5b9962e4a665cb54e564fca6692c1f061d7a9df9699acd67bb464eb91489896da2777892f9cb2d55e5f057f714bf88857fbfb671ab1782649529a4bd94addf87c46fef31714d755cc9093e146dc0f0f1dc0d8a1c7c776f34e17fd989b40aba9874b61ead058e0f1db4d00db1cb7c03921b1197bb5ba2870c283e439b37e61db0249c3594ec601b9b7400b6d2e4107078c0b58b16709538a1a978012c110fcabe2c3e6335e84f5959177d41204ee66956ca7de3e711d68c60b0b8dca5c16209bb8652d3e459f207c50fc650fa96f96f9a9f5e3e730cc447b2ddab939a27fa3fe233f94b611ad493e4b88a2b4f30bf78c7e12278a05f6becd5f0018683f0963b523db18055b0a12c19ec5df53a7d428a35396b37ec81e1895553bb4696f73aa9aad990e332fffe8e099662a2bd7b6c2a32f3fbcd2cdc384bd6186e69624a7b480ab143674cdd94da4cb524b18ac13a490dbdf3548dd742a8822cde4e910bb4d7de3a746d268f9c147f01d050b7a78ea695aaabb4a91d703a01d5c17e9bfa495bdfb43050c5654b4d5b55e6c937aa83486c440c6f64de7fa87c8f64b711615c23bce04c99692a6d6f3b3a4634425fa17427d1c6d99427c2dd4eb6433f187a940a92d96b3877c82ef6cbc1b3b3a4a6e745de11e6443b586b580c60516c8aec34fcce3bd6c7426802eeb817862baff09b3ab546664525d6bda549deaf06f5e2c410e7ce1a173e972d17aeaff250cbe71f97ec498dd68cdde9447fc2430306ca20c914c721231c8e29d8973927531fa7d190224e41881a6fcd026cf8901454663c0a6e2981ef17b7b7e1284aa6e0912fde515e923d09f8c0fffe69b0c9e26ed4b7ac49b07eaae29b8dede555a0548d239fa2e0a59bc2cfbbd4a896907dc20517ff458c27e346097c7b61df30eb1c6e05c904fde0e0b047c4bbcb0509beba8b029587698eab8e89a07a0a88ea017f8b3a51480f9cb11a59eef7c501aa8869a6c714f152024dfd7e271938b7fbf41dc08633104f7a3e9595a76ef41e2eda3e12636c141dd97398d2f01ac3a1a42542480c9f1cd9f710af572ea8827f1800e8d435fb863c21dcf52bd73ff551d130e3c5eaf3864dc1f2e59c800ae0e98cee3ec8750803d352fb028face84f920125761b542b6aa2366f94e2d774837de001645f957641b774b69a52ce7cd492af9c2f61ce0ca61d7aee22356b47fbf14b3e600511955cecdd67b6cf7205673d6991d1c871ae34fe7f6cb888282c281b2bd6b418e5487055208564f9c8f6f1bcd6b3abafd312aa4b7d2f9850399a4f4e80f937f855ecaf21a5fea5f3816206659638654f8268a34dadd2da3134fea5a9a1e6e3669b7bad6535005664fc9739aeba371bad1cb0f81f81a28de45f174d5a07d3e9a017ef703a212373e43e7523dc17916807a1f67aa6fa5262aa47f880292a57d66afb2f4c544a14d4d7dbb1a2488720acd382fd9b00474264b30a3215be979a2d0b004d7aaee3f874facf2325c2ef3e47e0680af8841b73439f3713fb768bdb470b3feef5925f55ddffde7e6927bdbdc81b206a3996a5858053041be8d395e4a57c9b6ee5691e8aa955ddc56fc71e64cdcd917d8a6f773bb03c71af911ebea2c69fe8c82adbf0b4e469d12621ff218ed79e31a811b8ed644ce9d1908cd02f190e61e3150bc86302157768897db6ffb984964f8ab1ba134ba1bd3c364c598e4d04a5de6ee32c4bc128f7af7c9b58cb0edf8fe21fb8d020cbd958b21118fa56524ed95d164ce894f5a200d27a2c83ab33bfc0e60184605516bbb55ffc2a5b465f958c3361fa189a8d5a4dc29210ed374db03a2c2226e501bf6c7d4ffba2688102a138b0feb567ce43c9e88cd2068ee8f9782166786dd7affae31e4fd0774b27260de6c8288a4c55dacae7328e65b3c272cc18a03ed1652af9f432aaab02904e154171f6acaef81a43ccd792d931f91e4afedf448172d21db1202276f1b28adcab5bbf0ad851288ebc9834151ddb19e60e08eb5fb413133d9cc5de75bdcebcc4b85c0aae16c42b63bd112882331a6f0037aeff02b1bd97ed259997123817baf8195954856a6c93d767586837ec9a61b04a10d957b42609ae7ba7a075c3a457614fc8bdb3182864e3b926bcc519808d851d9180c5f572ec493c177daaf2094152c1215e493ceaeb8c191a923809e4255db7011a79d61b9b5932e005febe9ab2b5ae3e418e7498c566b6ed6a84c52a6d0982e39eb93fcae9307d3cd088b820530511e80d1e31132de37d29bcc651474700395daec79873651fbd9ed5074104ad530c55b94fdd9d95ff52258018dfef9f309fd05632c7b705ba8a3363f6197397566c06dae633480f5ac7452bc398e8f1cb20f4ccf6ec24555498ea7a6e638fd7e05d33c0f9da6f8abfb2f51b2cce86c75f746c61f235e13b3f0bc23b4465374edc0cae8ecf511654e19b40c5d10acd0486a36cd457c623de357596814f6d0dbc3651d53a7f544514c7b1eda3a28e09d32b9eec7bc1231b65fe0f86bcaa3662564d506e7840871cd2903a658fb7948e10eb909fd7a198c39be5a7ab7a5dd300197aea116d6dae8a1cebdd4a866aa885bd05a8e3d41a33dd94a95aa31cf32972d4884a8c5028dce20d6a53e98165916db4c05a1dc01d6a541487b15874ca5ff84a0a4c58f874f3a8870098e4355b612f34cb5452e9e90353f64c16204fb09bffe0fdf2b4d9368612814ba722a04b7b834e70b5e9fde3490326b9c2147351a72d5e60769e92163ebc659390e9d0a111c23a1ff202958a0468ad4d949385442834b6fcb5bb68f5114f5ac16162bedc782ae4cdfa8ef4280ac4bbcc0e132e4ceb08d3ebc594be4c895558589271e5f90c6fd4648ecafd3fd458ae5cd3d2577ea86122d763e740c46b3eb7e81e649e7c2023e9d2406601edc3f1d6c844a9b95a7c399b1e333683ea2461518e7b6b3400d7eea031108df00942d98e85e8c630b4d982ed0647fd90731e590aaa13423a9ffd738ef180e6c5d28b80e40a42f201f9c97e973edca2a3f222a7f80c2769abc89fb522986bd8a429ce4ca2fc697e602b5e2c5f34c5f01a6524a1f40b646eb4d2eeb9b2152acac92c9aaf7b2b85db9113ec150065ce2bb674390b90790aa0ebe862293f41006206a1774eb608ce754f1a507396996dfac03eb33c95f935aeedbed9f9304ca4997444cee23c49ffeebd7e0de2cabef8fe22835fd2d677bf3cd26d342df21383f03d7685b5421f6efd7113835242f0217efff6b4ec894bc1cec03b9c0c1a5d7b5335c720a2c3943dd11fdafe1063c629d717d71c05a97254b0a7e5b1a3931d9c36c3a0e142aae9137841331c91efc6a7733cf6baa46bccd837f6bc7f871e8cc7aa41a184b4e0128e6b45a59aadf68b28010b76f86fc9d15247c1de8ea5df0f0d4332bc123096a4994ece52eba1a28e375e32dd062567ac654fc340cf5ca25f79e465fc5bcf17faa57c62f07d2061f4a68511f8435936576ad37cd20b146111fbed4cc877349d8fec50cf6e10ece077195d3420720b50bc7e3241fa7dd8eeb603dbed3077753c74d1507e7352f206fdc03bb602786f37a46c3baf10fcbc315bbe85116cff97bfd0df1c88e133f1cdcd601019871fb05fe5cacc98869c5e46c81e1cbf2ed591d2d03fafef8d6ab39e4bca17ee25e05071222f163a20a89c364f6a2a3f3ca89aa0e981b7d3fccfb103482ddf00a38ffe497c239a745335d318844df69c5959503c06d36c9bec7a16d91782659b30938ddd3c6ab527ba4a7bba498eed604abd2fbd00b110d690842be8ea0ef4bde55c81a13c0cc8d8452d264111498efffd087c8c7a119fc12eaf3f2563585ad194b4e159146b82f1564bbd375bfce1bc96121871f55932b2b7e022f1cd5e7f4c37969ce3738b39c30ef7c9bbb2adb9baaf96004225b5b0959345f8735d65dc8fdfba48a0633dad8ef8dbc437597258a3d49fe1d67ec95102e5307476524f6e27abfabd352d41421effd0819f18f5953a03f1c6a4743848b0864776eebd1bef1ca02533036c9edfe8f60ff928a56102b61975c586c03cc3c71dde50fa0366adc01d43910763903fe98264d8d666d2b69f90905806f44123d4e951fb345cc173fedeee84639d512b02dcb3d2ca99198c8693cf0af457d1ea88fb69ecf412a13c21da31176ac0daf7f53bf0a2150dc3b15fe178869e48bdfd9c55c52dd34d60d5df0bffe50fea6cc7247740b29d443cbdd3b30cd5f3c1a05cc67a65a404c00b5fbd7e25ba967f1e7342cbccc77851a3ee0e5d7b054fa0d4b5e24baf0cc260b4f3413c9d673c2088fd3b83805d4973f2e0e8f8bf51391739fefdc9114ab16eb119d4f2745ce7729ca0685300008137905204120e351416ba13513546ad9ef3a51903b25aed349185ef6ecebae127426cbce12e8ff1de8d60790a1e15f371598199fb9c54ab9846c6088560c8096a5bc65c658507f9708534d9cbf09d234abe9d7e155239de6cb1f84db46e7e91ba4e006675b5a9535a5e8caf0c68955715e418bb5744171e21105c1bce157f2d7359a4b38d1291a5086381dc201ddbf33d7d9f23ee3d389aac1c114b9e855e72e81f729db66c0a5a245483f3662e2312a37e31dfb92db4293edcf18ee344830614f7fb0a20c3c4f5a66f09f854f8945c9e0a4011201123abfd8a2ff8c9c9af1ff3b6e80a981d635d43b4b4fa5ee6771c41d22d91313e9f924e78230d5b05e9d93431615b701397eab6e1f322a13e9a4a5c50e734949b3898b9b9f9a5dbad3c487c54ed20527d0a55fca859532257a52100c60a05f5f262066df6ac0f6fe42ea002a6974dc80ca0767dcb906163b2c2aea824a6bef0f03b67808533ed04acf2b669295bb3d65d3448b50c21cb6faa7cb9dfb90a4ec186aa68ff77d822dd8c2d79a14fa49e9f06b6c3a6056691ed4da64b014e99386c2f496da7450b61eea89f134b87351c3ed6cf0e42c046653747ed5f3f3fd71ed10f7fe38a7c4ad4c3fab781a9e0999ece847619291f83c9090083e86b3ddf692a860d61dd08cb9b71e23e202cd9b831f59b297eee53dc7360a4f06f70a7852573a93794dbf62a39b1c278a5ab0b93fd706f8413565c8627b75691667c245c01230d32569fc215a4cb2d3a9b62dae4ab4ac509fa182f150af99e508e9b3cceb15440170e9655791b167137a84a3ff787bff060f44e746d916c14e2525136b43a70fcede68edbe6c5651d1877f54a6466c29cf829e5a633daaf1d39542ce1f34cfa728b363f98bfe60b82d13f7418350da8fddfb9509ab88f63998f23a08331191fe890e0f8787b6ff76df12de0a048460d3cfeab8364cd383cec5639d9f1cd89fec863fe6e4ab03310af0d8dd3dda2cd6c8e7621b7f1a3f8862358a003462715fb3a0573eea8a09c76b0138171b869be3d5abc31dbc65f2c98e84f94480c0e0d6159842ef3d4c45d4b5f81ce2a8e24946d1824fb0e06c47b0e92e968ce0015d4581533b3dd2ce674e7cc09fa184f302bcd7a2c156d61304fbc46f3c7195d554ec51820e248b728fe7ef586f8e5a89f8abd6c2afc7abea2dec66b6d641ba7ddfb876ef43483a3591f48956146f1a7c37478c8d7b9398b3e79c7977b01367faf6a4d01544005d7a98662542abed2d5703d285d77df980f129beb53906ffed1b1dcda4755faa39630526e4c8361dc0651ee7f6eafda84fb897f1f87b43242a8a3497b4fe38e8eaa599f90c145e1075a1795909708e9c8e78f90eb2483ca71f0db9aba242622b6b04b09af5897035869fbb99b1073469f2a4d637817de5fdb8d974f304b59d6d16102b2ff44973c115ab67cfd9d97b9951e62c2d2d032149506f80a687453a99b4bef97f82deacbdc6444ec21f292264dbf66a9b5db664e2024d55a8c07a8ad22714216fcd283030faa57c7d0a10eab3af97bfe88b43d78782b0565ba258d97f4d0916f4d56a099641b85781cf436eb665dbcecbdbc45869d58787ff91b6bec18d23353abbca671f9077ac65db58a05a8e022bed8a35d6058209935f75159a622eb59c2f6fcb6e0ae931736fc58ebb3cb8d5a6e07cbbb45006c562eda220a784e43f56d98e35bfbb60516a48ed9f9908956ea87c2ea4bfc893cb9bfde404435ee6083cf7b3242d715df73dff7b54cfd1f619d44edddec6a1a84ccb4b17e5d341e6712ca2ad08e40dc037d52e2c9471ef9405d21e629faecb80444b0c089d1d8c678a1a1d50aea5100a8a71072384ca26050f01050fc69720707b45e4fbc8108158fab049418d7c6779f320d17463c2440a21ea4b1038009b815f57b177bfae6786271e4acc586cab6c5e75587d0f3ad6e812a4c257e8d59bea4fd199db18934cbb3634220bd4df8f52788c558ea0f88f349725854facea2064aff7ce5724125c7fb8e3f178e01baf78b2145a9c3066743a0e300343da19ea49bb5077c48ceb6397dcf26c9ed236d0de15b64b7de9fec68e93a853f8f7e44ba9f66bc7984e51812131f21d766db0fbc01459786f38c04ac7b90be6a524d6dc36de7a8ecdbf852d25bdc52b1c1a1a9540b9acf9ce6958b620622ddb06947617228895ce9dcfe17a96d4de398c516d6f2bff1ab04c5a96a9b09367c9c2967658aba49aa6a4cd3d700ddf299f75aafb63fb1fe1f141b842a7fbdcd0af1323283d581f1e6c8573413fdef766bf059e2a9c18bc6439af39ef5978a4944a6ad95c726ac2e63e834362b342144bbd1b6d462e7552912dbc84e1c9d88d2992fe93fa00b0d87e03a2684e03e69324b88dce8d9c4269ebefb43ff33c4b7989ae54eb668749b37be13ea5e3872151f333c7170848b455e72437038e3d7561f7926ccf6d8cb2ad2e409de128d8f1c449a4c5d791eb1271941e660da85425c07b4886c3d9a8c655d6c750a9efd1926053e3a0edf85c2db1e695af067b36a7f902441b7e6501c3f6bab96a9330ee2e262ed0c10232b68933821adb38ad58fcf265d923b501b300f58d5a8d347dff0e28c4012ce4cfd652169a92b4052dfdcadbd9399f2f67d0aaa41371b701cc05b5bdae62edaa1c892d87d782899e075f1fa66980b3393373093cf6a4e28295b566c0b7dbe742ca75c2924150cb930ee8e219779e1429d77a2d30f1c729e142e762846b440270e808e245450d48c13f4c2cc2b795d527f18e166ae2e9951427d89cf101fac29bdce1a902b1e20950b3e4752dc0dd50dd4bfab1e765fa33ed3f0b45ac36e7f9c604f28a1e408d2cb924f53ca804cff27195d4bb7899fa51a622a1ff5c51921ef1fba852ff835ce9f71eeb8e5648fe30e732a45df4f3a9f2d5748a4a5a4e556871801f0040237646b2379d211b32fe1e9ec196f48868cd73f746c0eaf0a7f6d52dc94aee6f432adf8d406ab00cbcc6a551257dcdc52077b7cfc7b96c724cad3ccd4c9953adffb08527c3e4f5873c015518ea3a3dfd1a1da57115595451bc3cc823390e74fa7efe5b30f561a0eb3f34a0c158bcc5d0cc535eeb49f91424e60f9d869d7fef078749ec6180cc846e3f5ec5f9bba25806b37f5d782d97114b1c85e00123a35dd49e03f82af573b2d17c95d546eb390d16a78e378906ff4bd61bf650b5bb26750d9446b80de93653322dae98101b3b0655c3646ee424495ddd84f62bf7a3fbb309fbc93b4826030a5f804c6225f286485153eceeb3cca624af83b4f8cd59227812d3364f2ba28c9a92ba1b2be88ee99157c0ba14c335cc1b2fd3da0f5e217362cf0a88e49d4a31ec4de8b0e298945e8cb19c4e5303b40970ef51aa01cf3af6decea29558d6465f27a4114fd015b22de7e2beedc51c0732cf30fd4853fbabc34e38920c5716dd2eaa6eb43d8e0fcf3615afec294241bf1c5ab9cc1bd5ac0c3e3745ff132a12c1dcf05bb6caae5ca37ea9ae40f78ed9d98810c0e06d399550e314b5bbe8c4bcef34d823c3bd3eb5bab606b0e2c93157716e39ebc024257b65974249464ab3775380ad7e8527e17d29e505c4547a6cdb575a0574e50060b7e38a83df956f5b85f8459d77bf747091f9015c7b64e894b60823799e0ff973fbf8c90c99c707a1a11ee969436494109348d9824e60533d8c779cab77aa05f23fc4298ec164a06fa869ba84ff74b0bcbe3d57f6ec1a7fc8e3930d1db26e7a04d08e0f4a1789efb18f4848e136e13ad89bb93cedc6a775c83b59a1f30faacfd29f08a78107e8ef39249756ccc347a1f5f1550d5c7af62405de3c4a20d574b16b14d31255607222488d128af729aed1556c966d30afa27f4769669eedfa29f9f04547d08c3a496433f4d8f9d0b1e5a5fef2b172310aa599bae403adec5dfcb115ad0a70af9434f74b790e2a9468ea16f746fad25b68d99bb6a98c34cc5db775406a0a9ef7fc7db9a07aa9f3553905889e1a7795072e1373a24e9bd10162ef6124de3a739fa4a7940132cd78213406c3d9542f7a62ae89b5baf98716d213da6dd3951a64bdcd7ed2deabd750137f99bc5cd15d54ddf57f48d8e58a6594dca7b3564eea3854601eeb03e705ce78193a05eff65e240d40dc932cdeb6217c5e0cf23ed4927ac76fb4ce695dc69bae4d077c1b136203151961d6d8727714477f862553ac078f509d7ee4a3b9374bffeffa06f4f4b87d0468dac45481b3791074da9d2445dddfdeb5cf064d5a97f6af732362c4e2cb7e44fc331c140bb5bce759142e64fede0e7d41efa80e9f537f6c81c09725c6de388f68bf1058af7f0cbcf7d243cc43d13d7abb279ea0b839889719f5fe5707f195db58641cc71304d8a1c5ade57ec2ab001392d44cdf48aa9e1afeac1d406fe6c7fc8b56c8cc5b92d9adab7dbad04f231b28426f46dcc0889aada229345079887ebce7915096d2f324e1dfc5d6e86528a4e347d4c75b37080c60c72bbd81ea00bc8baf0ed1ce320c0679fffa895ab3bff167d9690209f67fbed92d4623021622ff56d3b0f710d143ff91c3bc52fa922e5994306a7de5b826977e2f48a98a42abd6129230e267f44f81b5337c9efafbabd416643fa276bb84eb81760d48ce00ab22a258004351fad68648bf7ab61cd6173ab7e48c1554ac6f0cae1c7c9ead418ee9afd020b211e684500b44a2695dca9fc99abbe1751cb28114b240992333c4998a145d77ec9cc19e7024e016d64379b8a88ecd75cd33a80b26784d95798afda0eb9c88f427009f6a1061b50904ee572e66e4c6a3b5ac30e96c64a8188fc6a8bfa82cdc03c184ab105e6a0100908c38e80233a9a7af9f0db36c2cdbd37ca6350fa67eafc4d996dbbc0a0622ad4e436438d77ef81ae98781ebe18ff152cff0803ced23d62a1129dba4154b270bca825898a5e793b29871e1961f329dce1a29582dbef01fc90ccd9d77bff736beb8869d28bc1bb887403d7483d1929c78bf3ca798a7e65b955552849270b44f40fe6278b6d5b9753a8766a7a6459b8fe440c95f95e32ed0cc507189d1978a700f3a79cb6326018c2f4d9dc066ea53d96c160f0f8c4b2b7bc100d52eb0fc1170577113508bd487c69793f79f787d94aa920770ddf42e9eb7f28b947f513f7f63b66ffdff8dea83c7ac542f2f8b1d3797a0c7006d81fba418839f4daf5beb2ea78035acece29107822e2ad7c0c7a188e851fa914edca9b0c1bb2c2f2fd904da36d818849230502c84125660badf01408148aecfafa26dfc45d888b0e39d20bd772df469a84b77c6eff57018e28f8c6b1e1e0695358cd0665d2885ac41c9ae075abc3124af1905a6cfa7267ae2e5846ee8330078f37cf85d3aedb772d06d49792c8c80b6f164c700acfcd9a265702aeaf9a80f1ce572f6ae4266cd23d1ad008d311cb41a3baed963c609ce96f3739563ae456ee0340962a537fe742de956e05b83028082356f975902d259ad4fa16be5d8ecccdbfb96a92f72d8842ad874e5dab39acad469b30fb57951422441c38a0c7bb6c94f1533b27ae8ad7a3370395245141669cb1b18027bceb34fd1cab7ff24912c5da19507931b179556fa02c6cbd7fbcbda865b4a9a80957c6f631ce3d4ff03aec534f7fae6ecfb1d941e06fe206086bf410f3ef47866d7147dd7f7fd88359ff2837a89e12a4eb1981c20eff25f73aa4d22082a20959d1a238c5402b573251f0abbee5c2239fa71001039448e5adf39bbefd1d19e46917179b4d341001ba9f2b52985f9e8154327beb9d8338972cfc60fb39cf9d94adcf09297e61e410659749b97a49fbc63a82e614876690357273544de4c65b6e5dcdac1437862baaeee82560c7234d77fc588a1022d9b3db439113eeb1882fcc333d574c1d00bb157b35ce8f1f119a1a0786993bde520504308e64a03c6ebb13614efbd7e313ef995871f9f47e14d06ae66a98d0287bfb0f2fe87e61438bb75f1914f545bdbef3c0ecc47db7f5eaa1194d9e0e0da1cab0eb2351f80150a30f2657957825c64874828724bb9dc38c4c5a10b24050eaa95e9e682ea7deb8403e3fb2a28307fafc98706dcd929876a0dc36ebe8249556ed2393b6da95577b86fc918a7051c33d6ada1d37a35c957062aae3b8aeb30375f1010fe80d9c568f3b01187b8aa47b2ee2163b44c05759a874ed29b8f45048e518633bb4fb70bb8f90657aa8e830591b3abb0058fe44461da1fd63fb64051ee0f5086d948c7809a2ed551ad60507e9198572b4b24b038bf6680549b8d7c53a429547ca2426b290f3c13c0fb0c9277ed5c03cea7228534d0ad8ec501ea9195cf2e5eafc686da41b84f4261ffb87ac5a63d5b228df479d9d9b2145218ff2230b131310825e0a230efa1b168b0de398bf6a97b2ff702fd6944bb6852714c2604cd9e7681f966c3a0458247f514bc67eecf7a01a877eb64225c9d3adcbd4d723e1948da8782a777bf113baf8552fec45f25d017206a5a91499471bbd6f9b7fa41a02586c6160adc3dff7b4122dfeb695fa3609981597d8c792c58c34aeb93e6123d6f3f5496caf9b48bea015d8861df7ba866cfa055ee8d9c626c2c9da279ca1cb33faf87d66315df964be69a32d066f35fd1dcb29d3f17c3e141823afa52300912cc397fd5d00c4c0cff1dc7684b99b6693fa6938322bb3431e308127cc02e536a9758862ff5468486b3ea41f1991e89b6896f04d64e2f167cd13e81fe20c3f478948b74353b416c929923411464920f003d0fa8f4450aad6d8dcd6572c07fa1aa85bc739d16e196274defd8bbe78bfa40aee7f4f3fbd284e169fdc0ea1733f839775889f750f55425bd2ce762fb525d7e069713b208665e643916fd26a556af7d7d611a9f3e94326a42e9f185c7b032de6496b3cf2876a37ea3e2396a39b1bb393434ff36267929acb49ad072f019cc13ba199b21ad2f6dc06a67b3e809b740e7237ae230934aa1a822d3a434b1812de9c933a7040c0d75aae40baf572c3411ab035edefa9efdbf08800c644c3ae261e9f5bf9768823cfaf41085932ec34e584a5861a3073655b7ef41c4f9acf3a80ea2cdec876eea70ec1dfe1e3f221e31dbb92f8de6419213f8c7a979d79b3280709797412265084a767b3cd11bd7009758e488dbfbc5e9a3c30588bab3cec9e46624af760ce8c9a89522fa1a17fef17a86175c1439562a29e9b32a43ca675f8ed2b0c850de6db0edf31121983ee2d74d29e232c19eadab18e53af3c6c31610f2866a75d55630746efac81bc15f264bd40c71da072ca60a94c941072c8c1fd6842842df91975134baef2a33e030829325674b49479fbab1029e1b9de11bb75e50c661cd820b901a4bacfcf6c15cc34791b87c338001aa3622f8f8bbd4ab93514117b5b917eeb97b22875db20939676bf7cf6087660f8bf5a5ff66cff57dbe26bab3dad75fc21242121ff2dab994bb13ffc87fc8e865fc7226e4193f32c0cd53c06b8715c0137c2167e3c72a55e891872536a6bc0b6e072e31296acfb43fb111a725aa4967191c244e889901d544a2791018133faa08930c65168283f7fa75f88272d7a69a946fd99abb058bac444a80a5e27b17190357bc565939e065a41c28bee064b904ab134fced1e292c86025faea383b92dd22715d3da958b96f9031010f95736c1c1d7f67318a823089639de55348e43ad150f43aede25f33b6df2fd4afcaa1daab3bac2f1599d526d180866365935d7737e95cc2f22fa05b0813ea167e3887a816f97e7e1bc5fc476aef9ce42623736dcc8f70488f864a0cb4874ea75e92da349ef360eddc38c3e1e090c8e462e0ca6186da2b92077f25559feacddf2b287bc0302949c041de1a6371602dcc83c5eaf110382ee3611917cc6db0be5bc6bb89d457d7b23feb1397c651364878bdab147b14678b28d05d520ba824538c533ee78c734def7a455f9e4d3034e8ae634aecb4a1845e5482ed4bfa146e8009f59f2155a0ce24d4569a14d62540054c32c32c32397f55439bd9682041bd9e5e92a2c7fd50b8ebb9912530f6c4c9eee31cf6dfb8c224b27d5e6ada6edf63a4ed8a621fde7e3b33bbc029c21b5891b7156f83562343e0dc5fa433ee3300c8750b2474552b383eded2646d40e99971169d27167e63d95592ba7e4b6cbd6d4054e163d8d033115ee0a585c7a31e2c04511913af25c056c14752211ee9e1071029bb27314843dc4012f27a74b8a230df4d9d4bafb5cff0d6e3d9cfb18415568594b84b791d41b5bd6ab42a785c5e7bd121a197750e6d5c220860bf9acd62c046df50808beb470e9efa4153302e7e30119e23b5e1706746e09a2f7641218aeeb942822b4c07f1e02f9e3bebb0abb6c73d7ad5ebcf1e8b63013e7bc01b2e858f81b447eb6268b78c09fb9a5197c309d2c562bacb3849429ce15cc1d4a83869c01bdb58c71d42fca0edd92bbd9e5fddf6a834a68b3e4086a210f0af2bb0dcca681c6d30dc506c89486174d4073d6c3afdc36cf24c21f5bcdbde8d417c2594f44013cbf506d1839af21fb312f7e2d8afece6300ba6b752a235ca0fe6f2600fb73e35578c8d29f53c1042d454cd9132e4fe99b9df25f967e58afd697ae8b0c50c306119ec1f517c6fdc5756b60e323021d208215f34525f7c94b3e1fdde64c70d8a806e5edc20bc7fca36923c6380bad34650732ab304ffa1001621ab7ebabe02445ac8b01149f5808719ed61a82d5bd494c493e7e7cfbcc080c09cecd7ac737f7b3337c07a3b0060b77fc87050b001d6ff4c130341372c3e16dfc9eae244c2bae799f51ba128ad6bec8717d9750eff88c5c7577e38aaf231bb1b32b10e5bfd2eed46a1b4ef9019780edda0a620ef100358b6742726d72c36f257ff9342117d4e93448103bd5b9677adc6fe8f97f46c28ef584fa346426b14380206ecbce94c91dd86e36c3dbcaff798436d10db9d301e7cc5371917a4b4826c1e07ea10b5f35d9941ea8eee868bbf87fe43d0c54b13b945c31908e205bff8199fde4c30a0cefc97119c0f4ae73a685ca5b7320db4216cbb04fb6c88adde386700e4f624337d05f458f85b8cd2243d5645aeed724bee89e4c4854fc48e2c4ce1ba10067237df9c55bffa436cf515c22282e07598cfc50f4117df36c427e5c52502f61a8de5e21a519d157f0465e48b59d761510fc53c340e3aeaf45b25e616071cf922eab79439cb752dc640973710b21b7e579801f9e3943d02ccc60887dd1538705761b908dce24289a3c2054996c1b6042ecb0e9fa3f854b06e3fd9e61f14abf05a83147a9926472bd2fc5f497d803959304000d0a27464fc2fc40d4272a104d330def3fbe0cc5eb8c60f5e0a661f0b9cd5b383af20076994f19153fec3824013c411729f7ff2c53e4779e64584500c54b5767cdbc29a7b9220d2943c58930f5583dfc1965ddcfe6a067f166d0d906d18278859672fe87d3c1a16ea37dcdf223bd1dcbe28bcfb30fa17cf6e092a945869e317f0b2fb646845734c2536aa5dea24e84ec5dcce034bc8af5a561e17eceae3afd2338ca6fb6bf937406a8173ac6fde56758102e26338ed9dc6ebe45f5303cba28ce2374da57127309c088eecec1665a2919c5a8679c68143c337afc27ff601d55e25d990c940186f17ba70be5b438a1d9b00eee321d51d9fde8c27956ba66958fd8a0959d200dd7a8927e24652d182c0369f666faac6bb77c68c2f446cd981218db2586c39fdfaa460c33def0881d67c1f44c2735d4400e29dc841da7b69002625a1460624e8f55ee5caa9a85d11be4c625a06f0386d355ad9a5569bd529f1c99f6a290e248fa5a86912b1d76647ec87e153af2c106c9c48c45dd526f8d2b80d7e5bac0ae029062133fbec5acdc4815f176265114b47ca81bb8f1cc1d3c6d8cf53ff9baf6a45d7ea68d1a7d93995b3a1bda46452219e319287f42f2b896e81a08eaf4baf923ea30f3b0ee402d4434e64f9c09e67bedb258e6b7687968bf9ffa02caa233d64c283169981db3cea941a8340902875831599d00c7da721a25544469a1e0d537f707811f69d60e2230bfbc350efc6fa760d608d0b2f6670f456f793c70b4e6f5fc47a308b026a449151c50025faf20cde8baeb7e3e541672e312e12f8c5b3d5c7e297c17c4b9ac9d7d99757cb42dcc7ee448e3ece461196e1170013c3c923a496a935466ed595c22efefa988df323897937fa389a49f6651d6a754de7eb61780030e17aa00b3b233bbfd9e689eec0178b3e3accba39a6e33e065b6e3f833cd28eda6e6302fe2667938927e9ef150b800b3e1516b730fa72a2e89e9b9d6ed66d074562b5b34a803c3dca1cde24207109736035c8f42d48d4b7655eaff02a9e189230e63cb700a7b6bc2d88d32f76e0e0073b6f9415af33b5fc65240e846ea5d29f1c2e2c24a25e93aa975486d09ce0fbd2df4bba6d93e3229963f06066e7624fd7980a636e855707e7a0e36db6f70a673aa9d3b59cf69f4f8059df5b20e0afb096266df53f926a78a3492cb0cffd705b742504b3c30d96a2689911ebf8441b61b165ebdab2393772ed6a34f7b168d53ad0fd71dda9b42f6c003a8ae4930fe65e7f15d5e212ad95566d0cc7b36b5b10f74867c0f47842ec189983ef7d0da4b8b926de1c8b04d284110498cc006d3a2ebd25dcb11ed215bf444a1f8cdf7e5216ce3a7c9212458ec80bf1db46fa4185c2aceffefc476f1354824636aa44e00f7630b781735c8494ff3e0d27941ac5c605c198c38e2f830b53a821c270821c158f96c450394bcd78493e25103963e90b8dbd03f6859ad327e14e5faa4b72b064aca39a454dacbb05ce1be6fd0c7ab89afd8d9b2eccc5720644b3655f1181d0dc98149e714adfac9053799ee43944988974e90e6c18c7232bc160e54d71a5169b875f210d10cb7e0c732d0f6c7e96e38c6da44f94ce3e5c4b0b22595be89d3197f4e5e1b7efaff2ba42dc8cb66a857a2b1388cb33518b44e9fd2622d632acd0d2fd551d7b79a6c79fa53ebcdb7508568bd1b62e2305c06900ec052a69bbc321c5558ee9b952df026f2d9e0f4f904bc08e2292e25b237fc43801a91b02d65ea099df50b6f694d128241d78f32c1d833009f2e512022109449152e4447852db97fc79943e646e323574a80bca12d3a1919ea94e90287346eafa0e7d0cd03f33f1c694dc560a7a79411f7f583cc60728d066b55d2a7dcfd7edcc9975c0b43219637d55f4a825b5a7f975efa509b17f6d159f833b9298ed83884f05c22ef046dbffff5b15c65813f3af7f2f42f6ebbb717f4991b3c675c4c4a331eecfdb1208c156e6b3262eb994dc74a4f4a004b475cc06cc329455c5406e9a5bdeb3e8734c5b482858f3e9ea839765880cc1f26baa0378a03fa8bc0eab2e98eacc85359d486e6f90830cda87c14c6fba0d99055a4e124a67cd7c27b15e85d80405ed42a5b0cf66fe6dc36673eb00b0aad88abd0980d7c5e94604430c80feb74cb48b0c1acd415ebf2da5465e7ac796ea23fbe285b40e6d090839d9b26eb0b43cc8f141dc6dc5268eb8eb58c2e15069dc38050a94af603a6f133ae1a830a2e8946f86fb3136e49fb5e50f62293735a5e806c9e8ebca390bf9b7f6eac55960b57e4a74362f91fb34174121aabf7538b9fb61db67f172df8784caeb7c9110193209af2d0ee0b7a2b6a49f83e2845d3974d683c3ada929d39f2d4e1a8292dd901378168850ea3ebcdaa503ca2eb77d90b988e310be1e96ae9f615da2e78b66f585886e4256ba9c457ebcb31ac4dc46277e6cf1f23013037e0df87966b16543bc0d102641e693bdc5bcf362644d9787c9a4eba409c484b9432dc52a2c57da536d73c9fafa21ef641e487e9b92f872b3936af773ee6169ce7897347bf6d3da45007a88409ffefe76590774f29924192ff9c68b02e7afee48ef97e041806fd16a01bad1c034ee7552e602f746eb30c2465276440c9d59cee9d155e726e44418d489dfed9bbdfa59fb008c37a83e0bd754898d32bbd537703c568ba3438e04d3b35039fbf6797937f387d7ac70ed5995fc2df51b0174ce56cd571af563a5b0e21746f65bee65b2832551d772b02304bed5b346238f5808ca47ee9e141db3b3775d286c752413168f3adcb57c562c3b9de50f5dd66f982a1157b031d8e7a32a1cc337d7511575148d9fe188ae736df7688d7600a2c921388821f96e4f5a83cd76a13c70805ee2eed4de66bb6d5dccf75c48444c0058422aa0925d970b3a35a9345bf283b030dc4a983e27ef1bdcfe074babba9fcaa6600b02142d6a8d99bbebfc84bbab63e1cdcdd458dac3d49a74e986c552efb0fdfdf85458a43ed34c60a7e271039c6802988fd0403f3141a279a2cf28d8504483df0d873c9fcaea0837caee4bb76a69fd8cdeb9fbb1850d02b3f0afd9e666787d2af84f0d28c7ac75e260fb9da69e399db3e4353a991bd8a22e41861f4202e7bb1bbf664708e40a929426f3d23b1b4b8dd00e9ef69405ce941a88a80d999ef25fbc368b1c2e0ab3ff5da78012ff744baef063bf34efc3d9cc75ed1c957bd146e9baff8ff0a508d0bfb5d417ce50d2e422f9cb054a4d7edba4c191e77ba3d9a2a2397f0f3bac847e94a6002c65311fb751212623ccdd448435dd18fe49753f96254651ca393e62a89095a35f2aad1007ff6dbfe7d1fc9ae65199b9e802be6ffa6e81b4f0bd9381931899d0a3ad50168897ddf410111cd1695d469422122a4caa6a2602718d79c919341bcdb76b16b1c04d884ac2b5795f423a026260f458aa35d282cb4409a7600d1b70e0f44681dfbb2ca9f57d2a831a189d0dd5455334b8860c87fd24bf983979af4b0f79ddfc40fa470c7e53ad1e211e134d68e7cd46d555702e0fc7831d332f977abceb333ce0ae893fa29f2a9c7dd67c30d3db28c22aa1dd99d80e343fd2500300be11505ac03e1b8f270b16f2844776a0d1a37575020dc3ab93f12219dcef90aacd9a99d1c5d4061f4dad8e72d69bd8da8323dbcc536581d11d8fcc38b6ff5e28beb4def4b85f0f52f8fdcd6241369d01e9b69d3cd3a29e0c6f3a52851c99a98597f99374a82ef66383896a2d6df48c392007874a484104a09436d17b188fa1ae4ff5ec9fa38fce73013063550b0fada520e3dbafd8cc7fcef3ef1cdd7c40da47d6697b5987cbdb1631a26fada096fd26149e1d32f13cc756a7ffacfd7a48db9de0aa7f2802ffe9c270aa88937b56657a39477a19adf90eac862e089053b01a07fbd7e319a6be2c86038bee9774cf6e5025c0e6aa3d0b7398eccbd054ede7992cb1eca8dfb69bbf742a20be7743d93b331e1e4628185d78a82e67d1d0dd4a534b8e88f66a9138eeb6d1e41146d43cfa2cbee6d5bdac4c60d37dd219a76d2ad5a6ce8dd9d6d102d84b404c2d2f62dcf9c45135a716274077a3c4834595e22a092d05a1f7b44676f8cd28008c320d0ae6744c063a79e96afe7e81d5f6ffd929e2f292a2447d263dc7c3a21ac5899a53acceb74dfdf66146b344251d758624ab4be240ace7e665b1e4602f0d397996b896e1a2315e42801537dd5848ccfd125b42ca810fce38045e9fbd91e88aefb6b2d7134735de3395c44308ab5183c998276eb10e03032cee8ce9b54d149d34bb7aa994a7f547368a901f4e344a454e549a34a7a5d66dc53acdb4ad7b7dc2641ba9747501d2424c3007386336477a246ff3478f95f8397583556978709c087d15a7f1e5069c99b6acc27a265018f9302134d399278b0015e4ea279403e0ffdbadc81ef20c274949b569ae94fba3a9b8fe9a05fe977233cfe3c0ccc607c295592aa2b9a465773dd063524411e1df515aef9dffd8f58e534ea164cf62b60f7ec348f835536f76cb3127b74d8f2af37e1e6ee2bec22703c405edfb5811ef9ca75f62893012f6c8c5a78e8648b4ea0b912324009c4943995649af9d88a920f09e3c3bdc4c66752c306d3fa3d4008fe934916d27e5bcc48730d00375aa2423b878fc6f1cd9f585de628412caa69acf1f75b7e5a0d15a4fd8edbb33c2020b189b6850d4b6323584fa747e6d897de2be7f63eae5d030f31a11712745191b892c0110e773276f7d3bfb03cc61d2937a500e5f5abf3a3a89afe4b0c60325248e2c1e1d0814866046310ab66e9e4f53b2c4dbcc9311ae8e366c2a84d6df5f328fe5080b70c7824d9362dccf3607739feeb0e6ae292ca34fac02abf98e82988533aeb84330a904f94c94483a63043d08dd373ed4a43ad6e945e3cd2d64055d2c653fbc217a8548846bba5c0200ac05f2ecf9bb1185df584a739397b20902be51142b429f24ebaedac8ba57af5e50e493fb12ff80de8372ae45e48f8c2bf2a3bd9c0a21c8a511f3d58d0ad6afae6fd92959ce9aaf78f5940ed226aa77362cb0bc4aa9fe5f8f7fc610762764c8f32af09036f9a3b0bc2b85c6da93d419b7b826cd85b6249489fbde90a5cb68e9b050310ca2cfb5c44aa016163fd325c26cdda0cf1f9a9d0d3fe28c2b9113d44ea1a65584276762c672c16eefd2d9ea39e6bd46637a80ec416ccb004b54b97729be77daaa0e238092537222aff70d0e803f3e43035fd1862aef2e659f5f9a0e24b9c38ed9af070d7e99de4a4704bc9e9f227a473467db446b043a225ebfcd531c02f100e0af65b0e14bdb266d637c6408da69f9eb3e7cf20eb0c8f057f32f853bee3139d6deeb1a3944d83d627afacd5a6e00e82179c4fbdc8af934768a06bf33790f5f309fab4010e44a4de42e94e55c944de6ae4379d291f4a7acfd10230c49b95a2e6069394b2df5ef6a6bcdce97ba133c818ef2f318fdfcc02ac87a14000d76150f03ffed3d98432c8ce50d91e91f3b65aa2799bcc669093e6c0360829c88290fdb1e8028300fc573627d58055f2ec02a15d4fc3854c91587710e7795212dd290b1db1f5d05db8d8953645c61916b124a588e45845cf0608b69c4a33c02137c0580bdffed06a8429389736fe0a124b6b44109507b4b932ab9c2bd04a070b45b0fa651514ddebd4ea3b51cb3fb8343731fa065e1f7a8b40e67a5aaa51ca50500e5265198289219a5da31a6e3359b74b74fb7316f247bec1669d535db6d22be951ebe0953ced4a09406c6b1a2f91823776b356a35ba88118ec5de0985edaca375dc715c8ce079aca2a065332df9bdd3bfdd1d4193e6542d6fbc6b4987754b2a946357f701089a51858d0764d2cd333ca17c777ac3f3f02619d55d8551899b7647885bc08bccd02007eb6cf308af588173c93b99426c762b21fb975aadb7d91a45dc1a2fa231ae465cb2463de7a31e787ac2e28ca92bc26f99be0bf3168494da8aac2622f36760dcbb363a50833d7f37037180e84ee80315561f41eb759e90fcbef47c764841a623bca2b331cc027db1688d415b8e66de03d71a43fe99435a9040adaa95dbe8d5f91e09f1c2d51c8ed1fdc9dc322701d0dcd24794d50870213b7734cbbb9cb2eb1b0d25b10be814ded246143f840893f53ea045d5f0a6b0c07e7d37c290781d774bb4183e7e3a4a63c12a767146b4b6d3dd9c0471a53990ecb31ee9cb8688da0bcdab500d7ddfb18188269225be88fc6dff387fe75b7029f8661a7f5e556466abb4d9b81549755c144fc64d583e3ab39937ef9f52f9d1713333132d567fcbabe52822a8f4405d3cd71187f2f0997b68d03c53da262d27a14b51b96ffc0101e17145604af0a971f7568b054d350c614b190cff52bb31c5d348293ffea169fe66204da34d4291984ca09fed962cb06b945239804bf97e56a29c6bcc8305de836cd4ea604299b4094dcc290738583087a2542919aa0d0af6df978553a011e619051a1bc6214a1c4716623a5f8c93e053c21ec1c2ea0d1cd9b7da69075cef8014be394e0a57928e5dab909336ff115c6d13fd6412fc778a49f36ae26c1ec652783cef03a4ae4ed277db7a10a81f83746c9cc4b91b94a98f782cbe5b2f82fb6db42bb64e1712b7418f014c091a0d78b1bbb653dda5b752daec46a65c838c54c751aa8b43f3539cca56db12d9fc69f7603cc2c71f63b6a22de4eadfdccfc7296fa3892d729777f38a12f4b3349a9b46be71bb8a5dc884236e1215bb512856ebe9000ee7be4cf2b6a6222d00f7a4eaf1047ff18df33050be24703f456162526e1d477b33322f3064f9ff786eaf8b01dc04e5172f920fa74cdbe1f7b9eab2c6e4da471ea0d0bd9c4b70a5856c0234c24425ff9614747ab357362295647adcec71cd3263a710114605126779845f37ff54d3e733b913d866e0ef5f9c7d49e56c7ef35b32e297603a4ff5796d6b562c643b118e6f49985f6164dbd69424da885bbef9c8e621e04593a8cc166cab2ccdcb18f2c088d7988dbbc6211a5559a6dbc17dc9bd431ea56cf839097d442a72f59a8b21f2b7719964c08969d785e3be18802b43894ad0547f812360dff16441e804192468191509ce873ab8efdae5dec1ed709141b4bdbc17d2c125b08476e8279bf5466b17e9959c5e806226c1d1086c388afe7f168c1c347d4b8d9d56df00efb9ae742a9fcdd3222acaa3bd923364d9020ae521d24cda83873f341b21b95ff45e9231df8be2f1692f6e0429b1142805cea679bc21a0c613737ef8559e2f6b003fa2391d46ffd81c2685821026dbf20eae29d8d91d1bf0a514bf287cfd551f371462582125574701c659c7466be448da61f85a2cf38450f6038faca30bd5f027b70a51c166c20a31e1e6300fba517914b2c587bd274d725792aec4862b4545ef4b4047b5e242494f74558487cf81f28351da40b1dee282be1cf20def1eb4f118ab130200be420b13e0c162e98bcd0c0a611e6bf677d6ee3b2c6d0c3d30b95934c607f50dd24756214157e6087d92733e7cc30c07d554784b53698593a54744d626296625918e82ed84a476aec85439bec2fdd4575fdb9a9eafff23da95ed100dd7161464b88b3a027a469a850a5649b540f2a5088830724c5a9f33377a89e2dcd5c53ae5334446f2a8e5dc933fd17d315371488eac1faf44216a5a3a75593760c17a5ffa635cddb5ccfdd62f11387f8ffc5e120431026e8e045da5556c8c54bb4f2ac65b48b7f7a8b13ae2d28c08f9f6fdbb2d4d7e4cf7f9da54712782e070c796d15c348e989aa90bdbf5d5553a29fea3cfdaf13886d86150b6a2743d47543d29053f496d38f5a53184deb854a3074937e87937296fc96f7414a9019a4a01f2773982f081646c6bae157ae99f7c592f6861b57d26f5e561efe25a19ccbc64094ef2e1fb45355fa61530f95950804b4f5b95f7deb8e9cbf430d12431ce29ee88edbd2f4bfaff2092d660be365a0aea5af3b7af1add800a7e38f74366ff4a52766e89354378a263828254ea571273eab73e1ef3c5dc7cb0e70de0f11ce770c5fc4bc6d62f31175cc4b1ace48013b3e33f037babd0f807666010cb72743191bfd7bddc531d4ed49b98b8a3f20b651401ed8879ac0ece74f74e0cdde5d04e71887d6b259d6781f0e581138bb6fd88f04b58b7116f24bf283a6f9bbd945bb70cd06255f54c73b7dd837e653d831d78cc12b2f674959dc3368642c9aa56d947e881c0f8890a8778b2fcefd0fe7d944b7a1aaf35c5bad400ca40edc65a444443dc7646fc84655dbb3acd2f5184a9163ea9d2e5faed6c553341a4d31ad9df202c660e85bea4c4ff1f08479f5624a421bf955f7cb1629193576ba61b86ad2022218a2f50e6addc434f88f5a7fe0cad8c22c2f1226da2c8d2858c2bae004d298e93dabe3c69b45b2f409d35103fa3acf772dde812cae1e453cf9b216d1c7520e1b017c29805866198de275b414c4f8123ee22b2401aea06089424bf33a737570b2ff37c9841db2df451efcade9c0c0b0d4c8ed5a327b565651fe4f2558477f777a5f562bef0a3c1d9fad9b9a4e92e502edd36525691490921bba17363b55a1124ab2f58a3017656afe8caed3c5be698e0215ea7bea96c4b36dd042ab3b8bf2475bdfc39e2ccf6f5a23db02c73cfd1765c802359ac0b16a0ba81d362ec54f6ff66aa6698a16f8a46d844e497a0014747e2362ca51c340098df9b964e0cbf3d638de16282a6fb8fcdd00c5c6655977debf0296da9f75fb88729a3d1ca722d3d504880eb4a8421321029b3ca1b98eda2d44fb4dae77626206275c828829a085352138955e7acb4bda6e0cdaf388f8d88e21c350110beb5a627ca548ecc8f48f3c711ea071cce4102cad8c2c31cc1bf07fc38b09924213d41891355a5db0efb9198c2ceeddea3b2cbecb6804ea32cf571c40b54b43f1f55082cd18e2b1cb4960477913e9bcd44040a8d75a7b7806b0420a26189869331154b00724d0bd396c7d33cdf5784672fc3fb67319c61e1e0ae9e2982ca3a76c9e3b583b0f2f81b7e32e17c551e5e842b8a65fc250b9cf75c21866708f73862c0b57aa168fb744e7c7f330642427029b5d219de250f459bbab64229794b3aa35df01b000a75051a070bae7c425a0cea3c5af3660e2d4d35e27d44625d96bb01c2227a940cbcac2aae560b244ffd2360601a57b9de7c74d6612a781118c58e85794f13afd3d76b9a738f35c59259bd82728c85a1c4333ffc82c7f42b92ca9b2dc17f62a565b2e91cfde57b81e24d3fa6a6f876d5df9658caeb741082568f7941c75fe362fdc6c3136a0af58174e998af75a7d2bc3afa50d6a1723a55ce43a44a898881ff8679635521f667be3d0a2f2c009c6225ee2870725f4f6c4d29d3c7e59355054e3b583b7ca7f1da5d63ab32c46eaa1006800efa2fc14245fa5a096223c796413520bcdaa389601984ee23f2548318ded4e6f75fd6b4eae2b255c644e85cd794571d5cab2dd498263bc418fcabed03f3758acbddb33a62215248aa6e8bc247e6979f7952e65d5ed72b4177abfe809a930a552e081977a94b130d829d8ed87b98810da2df703c8cc2940c0197dee65afacf289feb841ac4e3ab5fdc9ffcb842c2c73ad20d55750b328ddf7400155aa6464a42fba2f13a6936770e8d9200381e3e7dfca1b9ae857334c3fa9e0d42bae90ad38d9503675d68866f3c04029a8ae13573058eebb98c50912099d3175b510d7f8aee37d08f8cb2dc2810022cbd6eb459dba6ee2a041d748276b5575f1433f9267118e270265306d4343cf41b738e27a7c6841ee31c530f6f7ee49f080377056db1cada0606d5f100baa258d5875f505d3c5a1ba72a1825e4f7cd63c29835cadfc0a44e9c2d4ffdfc3201161769642c8622cb14bf4d35c7453d9e015c134f213ae948cf75dc5d7798320a4e0d914b9fac7024944ae3e7d6a9f635e658761cca9a7a972ae974cb8eb6d8eed5b8bf75bca041d0fad15b65a602e7de2849acb0fef23a92e2a8d279be0af2209e38e7695d7514da11678e38d91f2b8f423c28491ece65f1491928ccaf96dacef36bf356d2da50c1f48274ddd9a051632965d3c462e22997113b0ece81a6136841be48246eeedae874a5014475274da15d94d9646db164dda139e41602c1fe3b6a057d733cc6ddbf5b04cc546140f5e41445a6d53226cf66ad99d55377a068532f3db264cd18438754c6ce1262a75654a59bd8a8492f05eef7d4ed2a47e4335e347b6b7aad3c0104ecde9b15100b480b57c2aa538ce638b8d31efc9c957845a0cc1ee6890a3abfcd52d4c388fdb38f22fadb6491f8aeb8bc7ffc406e2d263dd89548b713230e4d100f58d7c230ac47280620ea82ab3676f84624281536dda0ee03f9472073c90458608049dd78384eb49c7e0f3560ef6f0a7eb5d552b21f972b1a3d38fc51c22c46635a3fd13e73fb80d10e7669fda6af896d475c01eaee72700d4e6255bc1f24d27fe665a408e4b15f4222dc4b2ec1cdc26db9a48fe7d6b45b26117d458f14182cf31c37b503df47a1145890181e6e9f5dc4d113a662c13b05bb8f5102d37db459513ec928fa88c2dacc7c0b367611c1980bc6e767dcc4a16af8701379bf083a8d8c6fc05c3dc96a6214b119a9804419151ade8b41c8e4db0af7fdca987c25ec1a2031e186a81f72fe950ae09a2c1820b5a44cc860d6c09e32ae7e564169c2314eaa7eaf7bbf7a0166daa66f29a1629df000b4b9432b5ca35b0f791f5ab688db558aa6792f768d6bc0fe08dae6c6716e385d616c708182607a91d4d5e87e959d4cd3fa5b6b2f8f2d226f194543c87b1050c9586619a89549364f94d0db160ca8cb96e3009de574fefe4fdee7840597524d01e6059d0acecb68d0fad5ab4320a52e30edd21262675e340885e39ca28bc01c89469f43e8ebf4613b8d3bcb0fca5d02655603eddf32d5069a8ba44f0b203679f36ff46a4d118a3b034e3296767aae077e2f0a33211aac81aa06207e6b4ac553497e51433b58ac723efe3b59de8164078feb2c63ea1a9abc931bc17a531864158bfddae30b5177e38e3a69ea2e996bcb5dc9c2fc770342a1de9eb40da295e504e7e489894d31546f8034690a61e94c20540f9d902c6a81377b2f43a33d5bad3c5261412eb30ffb1a4187ffdd7ff47d809cea58533a081440a2465c7e2b95f75992fe7a2faceaf79e1b101f1c3654f56966f8f6b264585650ce4e26c8c75cca846028709ac66d087e78ed8ec8c2f246e5850106d77885038336d380dab89954839c66491f98d5ab14de858d57b497537c2338b365fd03885278972c919c5f32d6fd001a1856854d7ed0483a1f2ee381b705c038d37cb74be674f5beab3a6702d78a4cbbd29b0bc409ee2d275e02fb8558e759aed8a938a70de78822f5094dc176c94f396f174c25b242a1594c5ee41d3fc2d8c105b732ce71f7b0dbd80b3eff36f84dcf653d7d1b38c6bd0edc6752e19b1265086194ce1926f0fdba3f2fce44c38a18b35cb250043b4b46b6900ed7aabb6eb36f3e02a4d81b0e3c114ee2f2831b1fa4b1672deedb51059161aa68b1f3c5b9669687b97fc1a4c3b2d762760035a3fa8fd7e1f77fb2b8b82d0970a658af5bf45ef4bcc08669416a029aa6d00d010df019f1e149c1686efd38449439a0fdd25d93ff29a468cc97ce1148c4d0c41d4f7e6a24b41c0468a2226f2aaa2727ed6462ee34cf140705fce5bb49e865195f6ebef2af2bd35ff888e2b3ff3326afada298a9dbae711402561b19cae38cd64dba9ef543f21ea46f0bf61337c454cb110e80772a27846c065fbfcc98f3edc30890a1a7c4cdc722313c5027d04866752ca49447a7bc6610984a4b9019f39082c52535a0105b1697438a3f40d0c27d9daffd9e87efd685cd0dcff677dec5716553c4abef1598745598b48c52a02c2ac7624a93aa8587ddc05aff52957b528906f4990abd6013ee95c3e14da7915d5af328f0dd8cdf6d2dbdfbd4b7951a1072724e2024c551134ca579baf7e094b46a40374cbb47dc4d725a1472a02eea62bd69a1d0c87c26a3541677025956ca4f5e3c3c4bee9bf221e87da07c496db56ed8b810f65dfb4f4cc4452d2b1018b813b0211f03eefa5928236e1083bf635fde6407ef8eee2e6438fc0b6f751e2153f9fae018c5a40ccb657a0f5c90f6e6368df111888456697b04c453a64f8a16be9484a9d1ae05a3ce4914a5ee08f1aaabdbaa1cc2648bc49672693afe0413583c1854656586cb004986b19403023dfe52a753d65e2793dab9953c94d74b2a9b1bc2f35492be4a0dbb0d96dd7cfbb39d64b9966e028b113b93a4d34397cc7bc12292912a28b1ad3d7421aaff9f0c55f6307df58e3fd271d204698f2548cb07e420a111ea463db4f26412815133e4ced09b55036fc04b3009f5df4d6e4beb93810b077d36901df49c4187d7ddd32482675b8da239ecf92a3af3f47277fa52f7dd21e55fec6f32a6dfc40682f779c802d6c696612e5160100a83b6f7330cb6cc7d2df99743ae311ae103295da1e97c0b7d85e237c17a5494302579e776c442941d0fcec1d9ce689c6692d593bf6ffc32c750c2195e4aec9291eb12adabda9bc0569902e217701c5f9fe0b9af1735499ff98504a200b8f909a057be76c9b5fb186b9593a3c4dd62380a1db02dc02652f82c1750654815e8ab7d14bcb6ef82b5d2c3ac612c4a8af852680dc118a73ec47aab297fd33750c203078ae2cf7302d688010c425d5f4b5525cde03dd3a50b2b11d43f3cc9160a7ec7ac36c30f2cbaeaa6d7d951006cebeecde978a2ef6d8ede8484427ee794f011b53733feb65a64b61fe8547dc1535a20e1a79c7f64b91182e3b447409d01f3404fdf72dc2d90f0a6a0fd0b7c6882406ce615934cd0cb01357f4720cfc0daa36e485d99219b9a196c640f16bd5afa592c348f948f2914dc893ad6204bfa812c10e2b1e10c41502c1c2ac718d3a92d8d86d0113377165781ef7d51d9c8983b902996b7ca7c1b721fe6dc273812a132dd5dd93ab0f42a0f13b35f3d4991b8d3c8589ce9a0fae793c7d37f7e15cb3737841cec7fe3247ea99be26cb00ae94bbd75f44f350625eb51b280640682cb6216ed558908422516734565f3955f184c72a7b2a15283a5ac512124cceaf64c4594bfbbf98a8d57b901686f77ac5ca5adf86bf22ad37d8994d3273b31391ebbf97ea131ca719f39fd20fe9aa439dd67bb47be51a759929cdefc16404e764f69fb8fe914aab6aa084be5b632183d91b7f7ccc0e584df39eed0a3c551de28bd2c72d31845b87578e1a3b40ebbe45b3bd6780de137fad24544af61d9faa6a6325d4c39f94d1d97d50f197c298d5475138ed2847cbdc720da23bb3a6cecb16f529c7811666152de32d9dfc7914ed6cf688323715fef287399a85fa5301c26af4931492218bb4b3a039663f3a224edf32280970ac40dbe52eaa9a6417f649de62dc4c2b4bc43b188e463d115e77f835ba5823dcadef095b07e9212f86cf1a885667c3bd505b322f2a602a250a4811c6f5dd5fb3f477ffca573b8c7174e802c69da1562a67fd12081620f98ac6019b637fbdd39e9bf1c7faa6c4570598dd4b0254721cd359e2f1ea658654b38ab439367dd943c99f2ad1cdb0b7f093583b8731148511ff477e590f3c068e75f2372adf359ad295f416af1b5ee2f370a1d04b8e801c8baab6989d69cb7c0023f7a2a195a3a8c676b3afdfa89e640fb377a1b33c32ff488a5c0504c6dddf7d33b154e3f0169f05ac8f455590ed107589c16a09d0da77e44febd2c3c8f9c2374fddbec08b2e39283cd51d8a90b57f4a2f8c07292c897bd3d4cc6ae47cc10930e6019b4a933786518c9c5427f5a99b0a4b3cae9f30dac351fbd18fa1b3340bdb6f9dd444d3728eb1033e336f9fd4ca7b1441c80c996a5c730db2ffdb9d4715a5513b2d1b32ace4f8f8e863f31e17ae9f69c3ccc0bf1007939333ee8392ba314bc4c59aea2b8eddf2f7c824d5c383d3329c6a402d26c3cc11452a96034d770345767c879672c71a9765d887dc0e8a41a6d8d8ff4668b1316f298b6a4dd0331a45546d81171a79ff9a1dd448d56dfe84ee7ebe6704fa73a554e602c1cc50e21d09b8c278dc13f5a84f7853a182aa176ca558215bc66275d061becb2c389409beb84c8808e1c3684fd255b19d6d592f9b2e4d47d91249a8809258d1466024b1b161aa60431b9a2b2e5194e26a9ad610700269fffece453224e221d713829da975f33fc82faa7fb426dd5d62796a756d78f5493966e9c1fb0439446946485b919cf65c6847a5d6c864038a476f287ab5320f9aecd8cada944e25a55266cc7b9af59fdc5e527516b9cae828350bb36969d9618feee42e9709a5057f90deb9d100cef8aeb96ebaba8667eb92bc45d32827c2dec4d9f75e40cef83f871534231e158f3c0022c3e3de2ecaf20bf35cecfd4fbc19adda85820de38b52e6c707c7b2dbb5db6eb3bbdcfa82e802062776bff10158861f74564db000249fea506912f8a7c27247ecb3cbbab35a1916e39606b2b020770771b98e5d87f739fb3e37a15318af3f3f618eef0dba1854aa11237aba60bb052cb47050d617bb18908aca3232ec5bfabd03d22037a86e9a2f53de4a9a97ae60c5c6de72215bcf0f769bb89b97c14229eaf285484a036674d7c2ec09a3ca867509d43d808a7c13a356588653b8981fbe4c887f8f823764cfcc87880a79f5e1d6ee904db820721e25e79e5dbc8c04ed688c9150098d9f35f7e9f649757b14a1090c4cf7b09fb9bfa0aa27252d4995f1f7a53f9394ea4ae2a3f536e647b2030b38dd7c25d7d947c6497651a030b65f7ce881d1e8264ae1b88285a04085a8457f4cb6feeae8c8f054ec503316734ba153f2e30d8965783377c8df2cf9ce24e85a50a6681406272c306a69f9b1e24aa27316f30afa52e39a252f5470045224b10b837f6c80d102adfd1a6c998067662e068c9eed3c73471740a1fb6056c6a549fd29af3229c9d88471e4b34717615509755335bf07de629df9868d42d08bf5ffbc619bab019e83af26eb5797be41b946e587739cf05dfdf08be5cc9cb16e7574b4b2e417f2c84cc347eb7f28c8c4c157d635c6c44e7735044f1d1bfccd55b23af6fd904f30787467672b755c48e8ffa737aaadd4f2b453a5281a4c349fe9d270bf03e8b51f9acf98d8659ab274a333e4429cca7eda2ecb43839006ed49528caff6fc4707db4e043373faaf228e2b16b49baa183ac774f6bff2f962b6b51d37d11e78abeda0d6c47258718449c996b52afc8cfa804026d1f3d145fa548af9f71d9ecbe44b3c28cf8462663ff86f94174dd7282868b398c8729a0c104265035d8c706a65ab737e0c3c04a5c220ee538aa4e291edb685b198a4ded910844cb185872786291c16fc644a93928f0cfccd6ebea2f91f119e674810ac34018f3f462e5713968f450f46ea50d579c0a7b74f5457aeb072f6a89b6a2302b42901376b22b64e7d6e2206216caa75da30d3e0c779ba4da90eae4a15b0e189d5414a7d4aaeac38178731bd20b5b1fd1e710afda5fc99388431e04e2d16bfb3d72d12c8c927af0be04796298c2806b14d081490ccfbe938b87351bdaa9cd03f86387c95f1bac5a2abbd99e2f236253112655898e5a1fc16136f6abfa9ad757dd222fde99c66ecc1a37f05214f4d252acfb10e736241d13d8d2defc9fb7c3724953a9cd4e7d9d745ab9b0ea2fac761c1059fdc26bfd160ae723ccf51a6e21b94224ef25fc6d2d6b65c953886f051589e6aec6a99651c7d4ff24972b72141270d860469769f7d6d95962814ec4d8b9d4f8efd2bc2872292f52443761d83fed7d705d4f9e66ac5ca0b34ab92023ced9de0a3c7b25a8e6d806daa4295eb5db943bd2e1b1c4b4aba83d514ab2f66feed70b594b25161351f6af831f5270ab489de33d802355b2eefb727a3263dcacd1ec86818f0f7989da389d5b4b4fb6493cb9da584d23a48ecff30b7109ddc0524713ba11ba5d9907e507fff083316e811a13a9c60c602d05189ead2a1fca1609933a4bc3861f6fd00db1d75500ac3bff368c5b1ec21de2fd2b3801d9759e922b735e6b1acc39235d3aac1bef14c7f03a663e2f2854b7d2c6c128265fe64e164aefc2a0861a5afd5b803af6ce779b93ce1bd07dd01c5bf6b3e945138215d7d1bd90eea4a73e8792df5464fdf1d360c2cc5af720b172dd8967bbf88b228e29dfa82bef7353d5521040700f8f7dba7f2e577d97b070de43f54b7cf4b114868d82afa969458ea6b76a95ccf41fb005a02d475c2d9ca63719da20cbf85cb5ebc596faab9a3b5ca678ab039ae949a5bdc2a47c8c2b468262285c4827e0577c8782c2e180f37713a4a497464e47c400275399f7017161b4e2c1f8c014584efe3b921bf6e59a1057be90ead3f18d60a8ccb034890223021d70bd223793548d707cd3cd20ad4b418adead3f750b050b657743e3137f03704ce9f3187099ab5165a350e906537de31ba561c3556e92059dd216f41c9d80f2ed900c2d937e5cd1ba9c81bc93a6487d3b32dcf59945eb54c913e5fbdc14ebf8c5bdfd2c69996e6bddda38d77bfb166e685e4a297aab654a0be807b621b5b75239c41ee0d2e68363d4e9a8eab7a68d0b2299a66f2a471600f2a242582cd84119052e068c2dcc539c2f1c6ded39c101ece6a5d9b29d3db94681c5f19613fb64af73bfdb3e4f8ce0ba760acdf7ad2c8f4ad9923f80b1c8c41ee346cc3ed560b9b325fffcf90c8e88f53d01168ccc9c4edc7749b0e0cef11f03d2a4fdd7637446029711f0bb98c2a6ad770b8f978b1f45378e62cf1d07f8a7573fd856981784faf3196412c95ba5b90d31d047b33b45dcd63a0e12537e805e9a68bba3d3fda70ef5e69807d4b330c080d7c5669c0f1cde7e5d46673354cca5a72d9b38dc42f9347c900654ea140a8afdd041599156a26dc64436a9b58b4cb69a088a8b93157f6c1adee4bc09f525e304538cc47150744bfc0778bb515226b6ca523da7a080ebb2c61de05ac0b8c3c4a757921da8d0bf487e2f3aeea93aca54caad1e56abfdc7cd5029def509f365e11352b5ba17ff614f804931199747fbd888a8b80097fef1934d6846c0b9468778b234708e2d1a506467d55de256e872d07fc5f3364ad034d4b6bc0f327fd5872d400b268622bd74f18689b0ccb5128d5dfabc092d9fd382ea76b16597c934c810d2547d681385799ee1c0c74b35762e917317b661e630e19edddf2c8c91508ff0fe90e3fc5b03703ef72780062ffae87b1722a1c35dcb9c5cf4a4e55abdf9621e55bc1c02c485589ff23aacd317e79cb50619890b8858b5f5e03e131ec18ea5624c6fda2d626bbb4a88eeb60c16d0372e4cb886bae4564317eebd4a09415fc99b180bc7b624a21838cbe7ab1bf846fd1cb3c3e543eaf87cacbca73128efb811670124c1098a032e883335d4cc5ea54cf2df1727f0e6a18eb2e924507141de1a51f9ae5ea5ac6fc1f7aa7f78e0073cf3e9b4827136def34c4ccafa7282b05ac614d40702f6fdfab46291cd6e6e4013e955803b2d1b0787451cd3ce324d0a6acc2b2955e36c0b37dc54827615ca5a16d872b0274ec4821998c090ceeb6102cc49ec5e8c5d9ec87a9b179ce1bec2cca384f5a9accd46cfd85a2fa764343fcf62c0bdcecf6ffe53089ee81bda6ef7fa0d82e277c887008987c72b5cfb95bb0a708417ba4e9ddb730d6638918b02f977c8986c5dfa13b374e3d162bacf8c5ea3b004e3cef79af276c948af0158a9454dd5bd83aa0a3505334b64793146ed7b2b54c97bbc995206b3a82d471f1379e9ab4ad1de6abde0ba439c825601e0c9a35e0c2a464a4deb7a5cb7255228b2af1b1233fe3dfb649ea6b7752b70ed30a542fba2958c6496752c8c8af6ee4a5314bdae84d63c64cdb9de2d014f3eed8c1af4d099bc701c1aa49bd9d135d304158a39830514c761967d95bba4f57cc60a7402a6ec0e3245c056894419da152ce22a9b415a41e5909f900ecc48fd2b4ccfd03fcc44c1dad741c99a9b1699d61fdef8d122cf83ea7b51770deab6c5fd6855dc9d946dc21dfeb3df8ac43326f13ee29584e8f5ebb94c58b7cff4ade067b3234366d1126bbe942e7d60095c200ae7bc1c646b65dc2159d12e33b56ec2ce6c8848ffcbe3c76413387584eae13c5554e175db434a0d43e8afb5a92b4a347ef445d0237ede35d75f36fd942da488eeade2ce5c3ecbb2989d3d15f7c34f0341b4db7dac15c115766c9c813601282146758eb85730e1b13acda2dc21d1c6aa46678006d398eb58b6e42f4ed7fc1dccf9624c616cdd8f2afe4d8e1c157bd1e4567c5085342659dd1adb1a8fb495b30e2a084da60a5dce4ce9b126b47ac3ee4f617bbd2f66c8cbfe77e20c0a90a99b2a9e05ff33b6eab0b9a59cc208d47889b44d60cbf42812c5a1405d9f6f0739b023b37c931ef75d43a30b3f67618638aee737a5f02bcf6dc40140f9fbb1cd0fce7897f089c57faf4333f91e6572be9e6e293cbaa4ef6629061629a918f86c09955353bb674538fc78979912bb09cb8cd5dc8f8e08591a8c27afd51c7065239bde5a294f92c4db71ec280fff954cff14250dfa4e5b86db991a4942647a280ba299a0bf5a3f926f266f76c45041b9a1a7810b7b39bbd0b47493baf52eb9eae1b54c5da1aee719e49920c6213d09dd23e58d92afadd84245f6f1862eb1bd520ea1cf4012314fd42cfee2526b0be18951d20d9d26f0082bc5b8abef0f677d74050961ce7191c7eb0f676646ced444b6433bc133a6497b68ca84cab24997fbd8a7f3c1b765c1bd2d93104b0331808a14315d634e92251e6b4055ff429fed4df3e2e38e62c902b11c38a27bdc0fb69761534bc21051b73b7fa4f5a727283356e8d2b0154d49a66e4f9586c36709d6941ebd88bb83f58e3a3844c48ea05d75ac38177ce6586e4663631773891ef00493f085d13aa4e25a62be2928d5c42581c2cc90efff77addefb0382480349a77a2e9fd3c2d2a2c3527dcd5a93b09981ade6a634245266798fc8742f0f435bc032e87ff9ebed992ef15972f63d97d4675730c9caeb9c4a45a0888071aab440b3e1653a57fb05f68771df9d4474f3ff0a6b7474127dca76363404a65bf2d048c80150bc79b1ea149e69d20f92034b5ff5af0881fa87a8f4ccc3b72f6077a642f729269a5ba0b36c9509971e38955995ebc046e5c99d14a942dfed4db7f21133679e2996c19e6582d8abbb66a472f915a397e3744528dedbef6cef27cf89d627840997a24188e098486fe8d324f0bf5745a9d8f3fd25b2ac521095265cd90c9a1637b23bb2b296efbbc4ecd1d48a78e6140645526bab854c1afb00c2b983fe386db74ba65fd16171c1729101cc2e270eea341c8d6c29daed83bb316bb7f635ff74aaa1697956a18b435d30fa44f66dfb26505c42db0e96972664bf5e10fbe4d3b453df29405e04fa9e344e706ac5034f65ecb9082092539d4c88fe6414032ff43780c4c21a0ee6e5645eface5477d8081c8240e3e32ecf8e6ef719467cb681c908f15567ec28acda34f62e3f5ec47f8e2d37654189fb0333eefa59471c9354b47fa2714a88bd4f64d86223bf148bb7fa808878f0325022d8341efa2d778f57fc77d9f426167c10873d72a0c21ee29887fa208f16e7432e4899087ca9f28690762ec52e42406a86817c0fa3a4081160e8221dc7ae5eb6503a7b99d79f704e2bc762a66ea990362177f81228a739cdccf66c29774f1d3da89880c512a45fc7bb622b9491beefb0bcecef252f31068ff7c8de3dcda8eab7ac49513e2d6525de6e6c611701531acca27deb9c07b70afd411e39acc8b634a0f4bbc46ac011f9c44b1fd3993ae01bf29220a63548a21d575284fe4bbd05e0636108d4f413914a572322d95f6620e0c432e21bb36b57f134325569f36b4ac7c35427996413a6eced19e18b4da777da5c956128e861f8bcb01de76d925cffa65838ad39cd6fafd452f5baa627a5cd6505820db89c65bcfea33ce6338737bdc3a63143bbb39e98f34e13067c821092bbc708752221e6ff9812d325f8eff7d80543f8e98bdc3d038d056da2a2b12dab9b1e3b40e4a35371f5c167f8a62121a09147e5f871a3076cb59dc3c57df3b5b0a7fb4061ec1639176bb6f6a0637f26c59ce48c6f9612e9da02f6b6dbeffc7cd67bb4c7271fec6c1cd11d9d22a90d4e156f6f054926f6c8c64a030f1ef11ab3c78131521468571238b231596592e7ee45f8c30cc16e3db02e8571fbd5e19c578d41d4af0aa8b940e4ef94be33fc9ec46e5d01a89320508e59c09b92921d2dcc31216924461e25bdbb68576fcefa75baf737a9b20cf571f8a2b85d028ebb84118ac3094335e4e980f35c3252b1ca8724ed8bc2d064fe97821fa852dc04ce39c9a5620eda2cbc3c5f96b3c2df1bbebd7be596c9c14efeb42571d03b20a69a3bfc209e9aa2c18d924080cebdf58101e6593d870865e6dd7f889283a96057abee29ec925c932ace194af9db3275512d1d5a1f2a49836b1e708d182fad02d9b628a6021625a0d5948c5a166116811681c141e1eefee9c8df9a07e4f3c050969fce0a6ecf18fa75d5edfc2ea80cbe1b295eb8e866a700401f92e5c7e70f28584b36e84b09da419d56d3ab7e36a5c38cccb5f94832505a2d6ad19f004cf6e0dd039acf8768bb3f0f9d66e4b0eee126f5fa26ac6a059d72c2d31256143af664a109570487a464da1b6f8bfab71c61c7e8a44b268e8013a76ea618483108eb90adf17ef478f411e7b5b920281c2b79c0d3718459771833e744dc185afe18d00d4049924a436f4430eee995a38e90f259ffd636ee9a0d4142f108111979854d5cf62a98d08a72e29e2937e09b9811dbf59191f2d7fb1cc1d2e14c164b1b1425da41c0f51f51c4dacd81318ddf3d06080ec9dc14d92ff0578c5446c3751656656f9187ce8ef0ad573b0358e445ef4df15046f7f66d1f5595d6444653dc74851370cf7cd2c1d5c442a08f17a9c28dbae1adf21a7f8e11a4afb60ed05155da130e034badd18ac0a789efabe7da5c735dcd7ce2083e6cee01fe859a84af44b2c991a9b799d0fccdcd9b2f56ecef42ed532e6cc5499d20ae447487fd7d0ce6fc85dd2428b6f34d93ff9e200596ebc2ee4f1fbf8353b5be9b480ff30cbe4c50502ea343e73ac97a5f0dbf3dd22c99fced03eac9b0460c62a36d2de6c3d14d0a9de551abdc7b42bc7a48374897c1f8283fdc3d9bbd2e2571247b85619c1958321093fb9328cc1ec0758f0ccfc16fd6069a47031adcb82adc7498633d9525a9f748a0db8914168fa4b12ab61e0c0478f1ec433953066b063eb055aec458850628ceab2b72847fb45a245fb460670c01e42cd54f4b17da6f5f771ed2b43d53d0605b85a264d4e7edf0f747a0accd25cd0231ae863f19ba0568195b793c6d0593f8b76acde6f11417e82d25e811e5451648904694e1a89386a771291e39b3e7fad037ccf41ff907afe7417d032a157f8dd95ada65872f3a9e4c8beb75d7bb2587fda68fab5c1804699ad0fa4ca743ea229f4ba0bd075931fe6d76f56817654e6c805bbaf275d3396c2e314e2fe4402b9054c4bc47ffc9c9e10f68925496c9cf8cf6ddb5f52c451e6b4f34a3701191090dee1d93c678ec13fce915e1bae5d0455a4f08ee6414d26ff0bacd373472e9bca7b2dfe32f1a5805563cb651312a5facf4029aa22f8c885f55967192731c33e2133f3490371306195bc52e69df81d60ccdd99f68c3d30e28a9e504157bc990dcb6b1ebb75883904fed90607b653e2057ba85018bdc3f576ba3670c2cbc3adf4112489bd9008c19bfa78e2fa87087caf1aaab6e96bdecd405e77e21670c8999739a678a6b84153e41900c77f709c18afad5cbbdbad577d3e5b4e4c7cbcd55b7efa63214b2b8136d34943f0acda9c174fe4f7c3059e771cc593be212218ec9412fc288ce67817170d243257d02ef721927717c1a8a359cd3d1bd3569c1e502381a047f1a8e5170cd0288732199f0cac08cbf9d21b3b789b1e21a5183d9475092a182d2112b15fd11129905d2283f5b016a12b165706ab098550ad4f3f318b5247957931135daeadb08219075c81038586e82a048ac92b024249d5e24bb785778c22a58b3e839189388566e6c2cdd2d8df39637a8d44d11ef20e975e86fbe6ea663a83a4a40d6dc0f9210775f86358b590b49f2714419c7f9cc12436ef9b6965d20a2d21f3f4f9ebe51570c4194d56e63540edca180026207b553421f9731fbd65ed57e430c9c042ab81d8ebc5e0a2e9fae67f8135087e8696a2c550f446d8339a46ea0f3c24a3ff970ec6d8a5f4a8380db873b81ccae031ae513bf63d35a28111fed8a4986f0cb28ac4964b7ed882f3c3114bfc0a1b10b5c9ecdfacbf361baa96b6d31bee7569a395fe6862c1cb3babb85a3520a86a118d611b9e11287ce6e870cb8ffc1e4d9ce22933053ff2d1f200311b23e5ca39f8a7a4fe74309e62ae7689b701d1c2ddfb1195bbb84f94866666879acd8f7c9a571e119e0454b759cf57580ed484b5bc563f1804a4b1f50596d05aeaf48f702a5ed15103842433f13a167c6ad7db63fb7c26c332b3c9cf28988b35ebcb91f15a1995a1f40ad46a19d0151b62acbb731c5495e04433e1e272b5ba4ad467100d51a1f5c954b86ddd4b9c867c508a3259f439a5aaa4ccf22d16c7947f61d7630abb8547486f28fa22ed0180f08e61482a1736c11311399b2b3cd57bfe8376ff3b4d56ba7612e55b37c3840836419d80aacdebf4c6d1b419a3916eb86989ab0e59c21e48f367afb1c72de991586ae1efd5d1c10ea759b28d929d94dbb6262deb9983087d9b8e41b976d457931fdc3654a5ecaf57c7ec9754352535cc0811ade1ec2928db5b5af2949f4d5a86ffdbc8d16c67c6bede4201b8d981d8ed34025ac96e9ac6fa481c89aa19cc0a1f4bb2bf1e361507ce3014afda20d4ae90a7708f5e7545d5ca6b05fef62bcbda81edb1cdce291f184f4878e857aea02c07b01193637c0bc43ffda0617a1e1e37229c5cba4b8e6c6ac3cdd0491a77b908be349ee899b266a7ec24b897a36656e811c6a54e8e993ab7d93bd3d66b6dfbb5d862804fd7efbb7d2c4288396b2e7cc079ddaff9ecded046bf764161c09e2db7443e555921cfdb8eb7537d23360811823be0c180ce94b76af86e510408e8b58849cac362ccea3d3f1aab34d2b873f4aefccef5e1e865773a15bee1ac9d3c04312a5b586440f9f02e025a9962e6bbce6685c78b74c197203c827e576f2a8c32119b86eb4f7f88a1949dae77992683b16f64c5b0aeec743a6b55d8b5e093604beb6703a8d22ad37c12dd4e48c143657fd41b30148fb3fb68177520cf134465655fb739e4f50e4a349fed4a13f48c8117fd76071690b4b2905e8d9f6a36bb484665e816b044e8bac6e230ea74973dbd2d23aba03fa9abfbf9eb9db07c683e0970522841cf24750d41e5bf0b70962511261e7de78b8af2a5b4460c1586d69c41c754e62ea56e5532837e573d3b4c586a359424d066f5630ec119fdc8541f0b775acc66990ae36810811535079cb0271048fedcf0837af6d8a021a07094503860dabf265bdafaa7bb0a4deb909f34f2ed05256bf668aa0060820f0b75ee30f94c0d7191557f543806ef3c4b63c22602521b48b3f1896c23076d39b04ac365b80bb590ac43e9af33844ae35ac0c51cdb4430d5dae207df4bcd4dd712b92f60ac9dca8bc28ba5dd88e6703bcb60d7d7f2ef2ffb093757b610e4d8cb690fdbf703e64c51e780e991e6eec777f6336a84f529b0ca944bc8cc4c87799fcdf0206d7619430b95a25b75d729b4dec6e966c71dec9e040b46d3c644c7396171fb0164d13f70c36665ae402b8918c501aa185564c25f3075f93f09aa0026183ace0816961690c80c61d4b8f85737c0831a63311f7c25865658e945d84c0ac2ddd8a576148ec90d5fae6b00b84782341b096b0275c0f1d6b627d571eb5d401edcd407e124dee23c91c414c4d1f99980df3a31c0cfd4b32a64d74957172e4f42b94085f2c5893886f2e0cd09963fcf6f8f6035e76d432fd9cc975899e77d75f2a1d4e39dcfcafce4389c9beb03f9b0250debef5211573d940c4935a713c3a34f30acdf11622e01610f58bb6f4341a8ca2c4281026cf1f70c826db558d0958bd3bdb3706b81cf97c79f9eed8e24a7e712931a65eaa13eb12c2d18576a03da4ef10858464a14cf5fa7bb9e22d61b3e36400a8f605f6156a6dfb6bbd8631c2f250402fdd9f5e88246e739e45ed7678ec54c809585626051a2ac3878af88adba3dbf583e51434b86faf103e3a34d8ca43b79d0780f037253ee1e83ecb848bfcd9aedd29ebdb1271f0927f411a631e92f286c6d5d4e479291a3ca57335d0adfe24eceae322a454182bd16650db2858615ace5bcf66ff1654fe9638495f69fa311044f6e5b3e74ac3c3fbddf082349b2977c38fd15df19da8c97964daad4343876b62f9dbe987bcf44a10377134071130efa352466c6db808cf0045370d96b5e210d2940831a8c5460cdf56e5e6d6656b1cbfeb4efcc849fc4088f393231e1b6674b70d6c3f09e4a862997a5fb2c31d87eaea95cfd7a2883e0e6ec543695d78c26caf549be4923d751fc0d695b7c22ed529bd611a6a7f0cb93146ed091f74c33d565fd4cbef0543d308c5108f39e17f0adaf04ff0008e21d31c520fcf84a68aa07db78e68f0650b6078e7791bd534b791aaaa4f3be09b36b28f982efaaee91231246e3864e5ef57baeb8679f90dd78dc0baceb810f4aa9a7e3a7798ebc84ba4dae74d03587dd5c0e6fdf8ac036723dc87e79838f415c574e2cf8f8b9e194bf21d0f1e3c42d4c0ce3e6959ba8b426143383bda50c953d8697a69fc841299d56a10b106f6342ce7385442d035bb541f727a7fc124a5e22ded1137bb3b34775702021b7c50225b0e9ac8e32c95bdbf9d260d4fbdbe829897c255713eddeb99d5354ff9c89de0a12790b4fe32d9826e7bfe75a1d839849b1409062994e2f8f0ccc0e5dc51e6626977f3de28eb905b2922b2771be6543e164c55302d8046654a8339bd99ff2187bda6d962a068179734d316837f90cc44b440cf00e42a335593cf2170b8fa64c28860a757bd623f3927d738a6786578b1871cb9acb59ee8a5556df04f678db2f095c3ce1b7aba659178135fb2c4ba10e7388633dccf81d13e228df156f113a9479dc2be26f1148303c5472197192d5f4021c5ad5c92caa7f9df1daa5756e9d6f5730e5889e3a1cd97c07482ec21169d82cfb70588bf59b07b6803fe16675a06b12dcad8d4318791836afd94febc07cf1c145ad6f9b367182677124e5806b7d2f3e9cc52fb458fc1dee50195eeb6784addd341814de2ab246b77da5a7673e7f33556a6728643450b7d448e606a70d9d1441e3c3779085efa85c6fd99ee74a664d36e17589998ef94a62c6b8d726d7b743f660dc76e25c455a1dc728600d5d0888a40efadf6f39dadf4abbb6f1335bc6ec1bca61b067f34b6990a99b176e328bbf72d45f7636536b4d90c581cb95422b4017a689a3d5167fa1604d4a9c849ad26688ee2e3df5867cbd51197f5e83938ee0a6a1ce6fed42a962bcc4a0ece73d5fdc65553e23c868402412b16da61abd203592980118c7db83701fdd6d75c510407cc03eba863a715897ab5e3b9ebbeed023f1a72baa5e7ca6b8d9616c51124fb29873b652e130a365c02f907f2ad7dad8d94636d547ac9a0c0df16c273c00992c8c9175bc76fdb5d0a81303c8fb5c7287f96f76a91207a900508bfdd65721c0e272420ec97308c59920fc44472b09b0195cb19ec5d4b397d7cd31eb4e21f19654be9fcb0993a87e5f32bb2c870ed48693d2e20619f4affab40ca715c5d310dfe769afe096b6eab752071fccc54d312f4780302cdbf33524234a7aa025c5bab5f1cab5a2a4e34c28fc9937b14df2c1b861ec5d467cebfc51fb8eb40fe66fcf22630401501f185d623c4f6b773c1ad6e4a400ee4f2866131fec63c030bfeb6bdb995adcc1a4ea36171ca6ae33df8d9d2bd5c820848d3e3fb17348f19d3f8feb585dec47fe71c411010a014030449f80f2838a9d2a230079c9b331efaf8d7fdc27ca050f993c245f66dcd4dbe1d52b736813b494d7cc4e8582aebcfb7ac5f1e94afd2e5a60a34c3f818489d713273454197b1e25aeaecb257750dc02abd42f62ae5642a9ae17475835b882439fe471bf8d8ef1482ad55394bdd21c1db197577e6ca128c6b20c19c9a04e98139b84dc74ffe3eacd4807c6e7cdb81a19e1fe1188613bc3be02b58f07bd877781325ed8cbe471749d1c7cec57df7ef8488aaee2b6f9edb7b13d2d31db7cfe7df06e975bc413a3cb48b3ee84072cf17d61474dd4f3598e0544565527bceb47f2d976880ac1dc7788827771a5f81523355cba49cb79face5074827a01bc4e9f4b5898c082037d2769d8cb3aa974ebd992aed85577fb33e6ccae2df4399c220a3433f33b5ffea9b640cb3ac721e4291b162c117f551c3b539e02bd512d8fb479d7c66481da338c98f2f01592d471d549be851d7e23bf87bb749733e79224737434feacb86be0d63b71b3c188e5996433906f49ce24879ba1c5feb32cf984e2f6cc7eaf9b01c7f29d0b768177f5d71aab4c8bc4fe34aec242ee79e7373dbdd7d583767ea55e7f333e2d2182193903f5d7a6bd43d063e6a2b0dad8a4effe8944683a3d020cbb2a8cdd07b2db21a1f9236e622288df5cdd99c79b3def8c7de418a0b0bc306cf7530ce624b3310f769dc251feb8b88bc76375a673c713d1ca350b36730d9e3cadb16c1e82c56eb692564d3cf50d3a3ec5e1422547d353fa0b8c2ebd11c9c8582281ce2b6938be30f2700c4d13262513e3deb5912fedeb17724ba6967b1a96f1600f4f1d6f92466f7e460e235a7443d70a3ff7c3891bfb4d3a47d2c8067f398b7b1e5709f5321d54cc89064ff31597a398d783f0b65b21191aae3b998d0c9410eacf96b7aec2f71a1cd89c97ae68c592d0138b28eb3aa8a952c3b6cfc5a5f57bcd97f7c2b9c37c03f7c76f7c5c66eabb1b979cdb69d0ba8268564c8fd671018d78db01d18be398d2a818be1c27ce07e69f1efc747b26995122593c4e806e46380b596bc1ca708e91d171ba2c298ac892d34d80d644a70bbb243c48d2ee06917ca2719453d982453da4e60ce0046b7d879d6da5e3dbd4de72fcefd2186ced9131f09442c1be1708806e2d7b4c47943bbc242c0ad2be018460f7c777e5e01af91e0df2b44b96ffe856606e03fe5817eee092e59a20fd9cae1fc1761095af4175c09c72ffc16d40f6c1d859963b2beb8757967ca31fe634389f305aeb6d8f14dd719fe989f499441fc45c434e3c1c2164d7ccdcf38bab3616f4dd7b01b2a6dc1cfde975f7b381284d28834b7da5cf158676a83c3da164c1b455b139231a27f0326a25e4da493c1a34b863fe3466eac128ff1f188d2fc97753b72e25e05e4c91870fa3c33ecc592b2927a3925af82165589bb191e637b8e917bc00ce1815e1e7e471b2bdf29a14cb38acd0297aa4ffcaf20c7c22ff3bda98ac1db33d79112e83bf44adb38b921691e01e5523231e4b639bcb29dae3e56a7d32fe4a96ae745a15a1f019c788022bb73a9524f2ff48e5eb18e745bae3c1cf42d6a7278d9b0cc3349f58911726b7499d57aa91e59e225d5104f7521c2140b5b8355a3ac60044b1af3bfc873d60c14429bc078ffb68fe9bb2ccf08e62879ae589a7077eb17fab0d871f611a777ecbdad6fa5f95c94f15b9021b4295131c275add2b1807339072685bfbe9122ad36c5cacb57d0518dc6b56fdb4651c619366b7b73ff4594c6a7b79b1ce94647301d27f0864c83a8b53b2bfc27ec613ae8b753255b50b52cf499e083cd406d628e696c213c0114ef70147358ba39c3a5064161bd9e1a14ec542b8072b35f21058e21d391d294d9336bbf2f09d9ab361d4e394d4c56752c11b635c83aa8168b5b84eaaacdf347bf0a2f3c68a10a53ae5cfde40afab39436c8a3afce78e935520fa66b268707abf07b3ff399606728ac39eff37ca32600c7737a703143402f1e7a8a69ab6953fa75ae338a70767ce079de3e91240655cfddd6b9525f0786d90f044d24443b61085d19d104eaaa84d7fef5574c711dd29a2e97a941997f5afbf77af5481fdf5c489e3e629f991bd3b72d0a6646eda6274248a1ae040582af59f274531cf4edbcb77d26ad3309553001145b724f39ee8dd33ef234b4d4b8816e99bc02e3003e2ec1db9b46b98fd9c85dc08b7229b230d157bf6a6fd26118aa9e7f2255d631a3fb47fea574a182365598016d1f5a175ff7bc2d44b630119ba5ec35e1972ed6a5f4962947888f7d01cc7accc930dbcbf0b3de9ec53d1aeb3c0935b37e29b1e9a427bf037b7e5b22fb735938e5730f7f120e063b836d878768270255590b3a8a20411fdff40a6113f13b59da991e7b56ce518d33d94b7bf1e4ae3e004a06653a6e45eb040859de55e0a9aa0356ed67f889e47415f1717a4893cd56f684fe4cf7c86b2e66b1add50758adcd5811f9c65c80ff716c692e13be15da47ec1e19ee8012117ccd3f77489e036f6d76d32e88c7f82c8a5f3113498a6328cd696665bb823be1cc87789b76bf09c1f95a3c7416b7ef4b3471f5dd7acee5520c6f46360377dd8a0e118f197ea45e776ff9dfeba982ea43c3032bb91754b8b225b24dd8b6253a567866f746daaee9751c1aa6bef8d22b5eea8529d825024e9b472b984c5957a952d558909972e4280addd0b6b2c2c531f4871cca2d8925980e2e015763a9514f9f749d096d060388b95a1547c37fe63a40301a759900e04b3482da90252c92dd47bde5eb1fa5aa18907f8dc2dcd0a1357a07820d392d500ef5d1505bcc84819b124d53c23e8244849baa84fef5ca9bd4bd33a15a5a3524756294930d13bd56e0c4af1cec36a84e47b12b691489df9caf56eb123312c76482286ede47cce4277c2b687f26f83174a9702c5ec356c2cdcf3521fa0fa7effa9d281b442bd4140b5b9d1312e62aa6724b32a13f2d297bb057b3df92374d5fc2a8b81746d3a08c76a0a6150b14179c463b15efc334b4b003159b6e313b8950ac3c9b263b2e7c4dfe7adfec96abc36198a82d3a85d96a82b18e5cc51113ce6e3ee76ec0c82da6a9d5681cd82260f5ad408beacf5541677d0b7f5d5cd86dd4c42e949114505cbaa53e7f3b53d5aa895d3af702707a3a8950b1e986f640a02ea3ceb017c314b30254b63af8f08b8fc02b3b3e84043d4c8a0d06db0b0ec35792d450b0331aa750ca0300dcc5900847768a83886897f898ba0f97d6de849d27b986974dafc403fa986463191408dbbf4592b329b14b2331a61fd4a5bd0e2965c2252b7de5735fe9527dae020d3a0cc91e7f0301090ffc6c4d093aedf42fac828ad1f6c7e78df7ea55f434a63627c3f75e1bca5cbef0f7ba5361e26bf69ca798db962e50ae2e4e8ed11a720253b93c9873048dc2eeb2d65ed9561fcd0262e7035de6c9037f124914650bd5565b2d9d525399be2412a3f4b537b744776ade0ecacdb9a32db6404951612313ff542ab84b03236294ad4f0c7a71e8bcfc91b87488929672c9556e5858551cced2de0fb447e242b775882eca50bd6c7c7a836b50f38c3b5283d1308c02ae88559da60c96fdc8d7984a3814f1ed9e0ec6e7948b88563c55812f3349978dcf140d9d578588a7adf9f2dfedc0ee6b4b8d893a0641eb89e7d693454a84e571a80c6da1b88494fcf9adb2f3eb75941b97a08fbbb99d95922f71d69a8cb7e60ef9febc478bb589e7de7213c16d1e15462dc8d4c519b130edb0957ea9de021a1a762ad60bc0efcecad029979ffbf5fb85252addc0a4dc0e763029324bf2fd1cd38a31c654263c14337ec4bf34c0555ce8ee74c0a8ad7e0deddf7ef23cd40aa125ad60d6d32951709da5d3c2d8026a3dc87cbafe9cd86c1c949f0550230e52035fcd6168b944bfa6b188d234e4bcb038cc31c9195c6237e7a1c33290e0a631e8f14b0f26c9f3da76b476b7fc4d871c66afbc5428e2eb44ebcc390c242484a76abc0c1a53ecd55a129cf7a1156d8f43618d2559901b9cdfd24b87c43b7a79249cf71fec70ea9adbe042de7fe8ce5905f6f93ae7971f850a634c5b92a2b881836e02032ceb8a262b291937ce1fdce4600bffc5eb0c909464588571a1fd2b7e48c5b0aeffdb941fd8cfcb6922657522572e1f6825abf698052fa7745b455db0510d91579dc1f79c66af066a3ea6c5e0ee4553d611450a9c8952bf7b74afdcb9237f28a85911852bbda971707d05af2b3215d30bf622b55d85c7719d4c40ececbb7687281c2cdac0736546365bdbad74b59df91ccb6ebb8fc9e7327562671e56c26b9f2bb5a350f903ebeec7c34132d669cdc58e60132da9e8fa230107d07536b8927dce469881ddefb8eda7a7f8608a2088ac87dd56ec0f6d938e50d96aef3702e63aa687a8eb18d532ad82786b9bcf9f90023a16d0d116a57739c0552cf11a2b080c60424acddd22198e44cc810fa8527d2c0641107f751be29885a00949b22facf1b5719348764cc84ed41aa98f390b7b95eb6a53028c517578423a9b98775c965bcc62339b5e0228c2ab5af6849b7d4a99b82ce97cc689361ccc1cd8bcef2e08f745dc71d915804dc6e1e25ab603cc145b9ff33b24547ce85ab57146f6d10b9e86888fad37f7660a0ee2d63425208fbcba4cb761e652b6e7fd3d9eea2ae0a6ce5dd4edf7245f331aa7afceb5f77a2bfe3af5fe40973b841af5ad4019a36a97e7da16c094e0299aca720d1fe80786eeb578e9776149097974078513d35de7638e79ba28784bc720c062243f261d33469b04a12500965d494c62e439f88209f6ec3f8bc50a6720e20fdb86beaacce27935d1f7009319e5938763e3c6ad6fc8700d570c78eece4d1e6093bf0b8bfd26100f78597b1ece4bfdb6347633d29b671602a95c29a36447e61c107dafccb5bc01629644f1ff7320947ffb87ffe894093dcd5dc5a76fc722057d5e3c83b26c10d54cb9cddc215cd72913ff51c08223cd359149c5d278f165fc0da012e2a2e1b48e4a092a713795ba491d249a41064a08031ff3f71060ce6a6c54b984f02e707085eb0e4127776f4d47eebacc1b7bd95220e3121118292602993e4eaba69e40a296cf2d382227cc087947f752926c4a34d8182298e192bd5907c5539d77356ade15ce3ee1c1d346c1fc1f13d3bc5b0dc38eb3d38bea3cc2a985aae691a37b00270dcbad4ff924f17f948ae29bde0b33cec925523b541b789b60ef9637e21b8535d9227ef72abb6bff1e69abfa277af08424b61593908d73abd549dd3ca8e6efd5d5bca3ff438ec22956cd75d7d60d7c7667a3e9ce96e270290cd7e80ff0e00b7d5e94108e1327e8bbb34b8c7144ae78c920983405f4057b040148e45f96286423c93b3076548948eb85e2f888e3133569a008ee5bc9a70aaf32e195146636c0b028a1a2a6c5c2739115bdd8016e10949cc0f4e128aa100679c1e6f6cad361bcf5c65944502b156a864a540d26ace7912463235fec94cc7ea30a28bb6d5a752e0d630cc3f184639fe3e91adc6ce59032079108e32b149b9fec2efa4cf49ce20cdca9084c2819390a18d38d028fd9b95376d0706d1da00e33a9ccd4d6f9b28d17ceee599e63d6d84de65fdc543644940fdf7129382ea68bcc753d62ca595b07bf63fb097df0df1bd355cb5ee81344ad8347228ea89fa60354a1573723b699b8f514bd49b5a7127740fada5a4fbfcecc46ca785e8956bb91bce2c91fdaf0c50b86bbf58ae33c9f6539bdae7e6b1352969fed4faa96e17e2293cc1f4986a0745f7c62602d39a289da04cc51682a4380bb8e9465d8ceb118ca1dbd35e3a7b3b44d8ff940b72cbda5ee3e87d881667560d6d3dd5df34bdd6fb698ea5438976b01763d8c52fbf704277e394176c35904bbb01ac4f973b782c09d375db2da63fb634dd548331f350f584c4a0f4eb34256d4883ec48ceb2d2a4d67fca0e78f99fce2908f971d7775e50a5032beaadc1b65fb4682b9862ef007c1896b79a2cbe656355ad4150ef9190af6e7c681cac595cbda67df92c1496100d92d1f55f0d89cf1ca6c9e65a228be364e53b0974bc6b10b32af07ff6656274329a9c0b13266bace5146e82bd28a5cc245f8434cd64058f5c49a99507e5edd84358637f1f2326853dd30d8640fe5cd5569e2bf15a7ddaea2ae698c07ce8393ab439bd5d59ca9547b2de31a23bf874eddb08363205b66f01a2bc32190fdc4a6658aec73033033a0d5ab588c17231c39cb364b25d6b09ddb6d5d1232834f4fb5b3f7a80eb5156b8712f39f96420955a53e0c8fdd05719a9fe394d6935d00f08cf198fcc51223166bf19813be0294c5ed0f2505d32360d149ac8621775460cfba15b37cf9cbdaa4f7374095eb86bb9e912cf65cfdc8e025c5e7d70a25f8c306f4161720a81d8f395ab341dfbd7de026423d347f1a9ae2db2a8b80750e805decfc0d88a9279f9eaea755b7bb9cafa2903795241b0e68e9e0bff2c56f10a8011413b557b723f9578c0709dd061cf9f09f5c38e42ccd13fb2682ee41a0b603acc1c605f4499d9713c75fff62ed4ade01ea893b60a0671bd0569a22da227c7bc74a925ab5e382a8995931bd1ad24dac6796ada952c4be84370cf9e16bb8fa2326c37258c6b2aff95b70ffc2842d517292caf1bd6fa98ca5d8a2ee3df7e4e09412797e2055d7d18f7f0692dea5d29917140b535a0e426be2cdfbe460607014d0edd69a799766c76aecce81e95d0ddfb0f032d822a8703833244d40c88690794f8190a3a06ef92915c289a545a35d41235f55c26f96af31f56402b3cc6e2b43fcf12d1306d0bf3641ab235533e3e00d1b5e841fc7445077868200ee8e90f000bb664940399d72437752bb2f0d483d6d752d5e3b1e2520c86b5a036cc4559bc7b1f470d47e7a4dc01fac711320331b0558dd7ea1dad4d399cdc4436f850a47e10050b2655a54de9a3a7913e5ae189e93b9ed741e47bcd1283be170b17c545d2fe9265baea06316309c1faf7d6b66c71e74c75817440a9cc59637c0a61eb17f047b7d2b4bf46772940243809faf2ee617f16e75a6214fe7e8cfa46c34eb261a6e1a102db45a2f9e4886f437d697b8efc781a28e6abce39739fc84d4d9fcd7cd4afd8b3dca1070e442afcd1424f901a474e13476c18d8b642192115fda6708aa3cd4730d445ac74e14b90bb40c1543c09f33555f5c5b680de0f18eb649bcb07a2e07f84851b848ad272a0ffef9c79e9f8dabb9655992410075b7f91ef3b12661da57bbb4ea2812745712f1e4c00443ebbfdcb1eb185ead9d9ac1fd77914160750ae783a83075158f5d3a6e6c2b8d55ff926200f09c502dd9671edcb3de31c2b0cfe02b2f165a9adee2f1f46ce95fbba79d2ec56c55d18fdbadd93091f70578915cd0c43eaed0a2902d4eda235739d79d0509281ec016996655c86e56c56aa90acde491f1d0fe67faf7c9e971e2916831badb1463a839691bb34c654636b73e9aea68061d3b90435f3c82b46e245508ff2578045e999c8f4b015505b736ad55bbbe7a96e12ac997e098291b58fc485f5646eabd5cf03383ed47acf89a3a9bc4933d9bb367e20b4f0cfc44fa1c3de8fef5e06bad691bdd7ba6b59d548d141fac5e7568a7a287541add9d887e7e68a8ef1f2ff2b500d1f8ff68d3bbbe050446649e6d6aab181392b0e01b0e3be4cdb79c0d459a00bd68723f3df284281787e8353513b0bcdea53f0d4ff1d410dfbc79863f29ecc55199c2de1cec7a211b010805c11d70d15104c33bb877e6e99ceac00d8b9f3e3bd7f8e98069b014c4e18f092eb594de8610b5ccb38065adf6827bf3729cb0a8bcbfcad98ef404f4f25da423a753426af6241e9ab5cf33b4a9a3d4a9d8a29103d5121abdd46772b1f95b9f4fe86f3cb4f1a934940a0778f6c1898e35b2625275db1397ccfc125d5b6771757674f2e744aecf20cdd8adc74ea6d33b32432874b0dbaaa769a7749afb4adf34e9dcf0f7a5e45d2346beab19193cb332a076de0cb25a9fbcea3aa29aa8e70e746b821d52293b0a50ffa0029f648ac2e6525cbe8922045715696dde9443751731109b9f7216cb482a8c9179f83a5a478eb224db463e4bd2baf05d748deeba648dbede3bbd8c833e663d465965364b1679b48a22d98e700b7c5c37eeac0d05dd334cff3482e97d7b84935fd20cbcfb5fb97f09023cf4f490a61a916b007863d7798bc5136c634b1624a4d14c83e7ad5495887b51eff3e59ee05eef52412be03307903376e67b56e3dcf8f4ae9dcfac11324b96d90ddef82976e50fb5f91b80bb2ccb26aaeb80a9e0bf661abc35afb17902b12e19ea598f96997cea99563dd43431580e0ecc0b924e9a273137e821f87d80e15e9a9ff7917563fc23b331a8528c2354f5398607e076faf85cff10a6c81a7362b789b3c53f3a96a0285838bfb4e3822aae5122d8b14df7fc547adeceb27d4b406adbb532cedd4b9ec8b5a3f849b3cfb6e2bab3f09460a9ba32f2e9e5c4678a9a32e51644a74923b3c76bcfc01661220f3276afc8703693eb3a8bf7467a8485b4c77946ec6f006f31b7c84bf477fe4074a10e7e7078d652e1bcaad346cb257a3f2a964966322e0cd00765548c18964c99c1f93a3c31acaa781b93c9a5f4ab84389ea66d22c4ebbf9069ad65108820ea7f1a5da287845480be3a1e43b27f1be6706f2c5bb0a6a7d78fd7aba462ebe997a28c7a8e135a3a8f0b0af148afaad656229e1e61ffd8331df6bd561ce9af2945ae0cf1da7087c633963d4c5e26bd24c503b9a6cb72ba874f7c5cd092a52aacd642a600cecd2b425adb314c1ae4ac4358f6259e8e56358bbb89b4c524c0c55adea496cfaa86087f61ee69a76ae415c4024d13b0b42c3f22b7ea27d7eb2f3642b7e050e364c97895c00989e71288362ea34b70abfab205e1e0f031b5869bd653a06cea53b615521cd2140ac6303c2bea2e2806afd1def3e428161628eab0bb31db16274293e3294b290451cce88a622216e1f1d60377eee0b4b3c436bd13fc909fced9374292ee0f250ae5e1b0dcfed378fe58fe8040cd24c4d01b6080aca793159fa04e365cf57744af91da659d3531576ed16d8c8c524a2cbbee11a8fdad48e26f77cb38ffa2ca268ff6140ae0ab21a4f2c73906141bc040e2a3e941015b2f3490460edd34fa063a5856735fcf34fed003db4faf2e21215ccb6239a5a5bc997dafc5db6fae5a6f01126ee0d7821763a5d4a5ee358fd43d0e3faaeb69dffa8af020a5dfc5330b88c7b14f2a66e89e8fb96c488d92a3902b1940f928994e7d188e5bd4bc886a6443f6b7e0be1c7375f243a7ea2b4c6963b6257a4a1a89ef8684c32006afbf6c8ab9954d1c469ce5fa5fb323c5b909e2fcc015598f90d25e1b3a755b53e1b5cac7f887effe4fc645d6f4f549c99cb1e728ee4c9f2da1d59a225e09ab1b3325179c390900eaf7a8c615816bf945ce408883b5a3f512b69ebdba8aa1503ec984779feab0d1ed45258ba60aacc27491a1333e6a6e1648ff15b2ef3511b820195b0421b0fe3571819e9c6510cdb93bfebbcd4569a5a6cd8eecbf785ccc55d3c40561a675da06bd908a6787f2c8e4ee6162346a4bc12c16cdf84923d65935d6239b11e17aded5965a6a9db23926a63544b4384f1c8bcb31648817e96355f49233e9666e1a4844b301e0b9f8904a5f1bbf70de1ab70f3d07bb7badac68759adf79a89a9083e83d5e3dcba5f999639fc82e5b20f71da328d12b220a701f31d456b7a6acc8ab6df165c6097b286ee6e0ff0fb48c413dd61cde50a4ccecc007a7f4840cdf96fc78fcb5d9d31e77233d77f8d7229b30e10eac5316e646930e31bb9615dd0d05cfbc2d7c79b132ed954db83685a6cbb5b1d4a1473766e73034a8dce6e53aa6e689368ce5a799a1dc2567d85f1df2d66921d295565b58c7edede9eade496d989a74c8c27d8f47a06545c5b52828ebc3ff2d40cc728f60766aec35cf0c9120d41e2888dbfdc3e66a7aabaf4ace39d01302a7147bb096fcfa75c5de0c7169f4004c025a14cd6f4d180f047c23606c278ffc4339dbe4e558f478f2f4a8338d2b4e53a0937497fd30628215312829ec4df5f3c96dc481a7b8c7b60a6dcf59ec5ee5cbcf8fb886fa81c58ba66a0fb1a4f61fd7076907170228341274bdb81913329e4bcd9d942642c4905401b13046e5d30bca583ab1e9f4503c4d06ad05602b89b0e025258dc07d3787391b161c5cd94014f98880b951298d37487d24de9dc2a60c4414da54470f61d760b117b2ca923eaa03ceb00f23b2808c8c603b400b3fc2add88feffeacf3bf06b9ea6458c605045c6fda10f81e75d45d36e32129909ef2b803013764afd4987a21d9986f4884e7fd0e4671c17c954f79976b45c9b248266056f85ee3f6b22958b2cc4bd6ea8787cc8294270b42e4fd0629af2ff735a835a22f2a565b947b3b43fd0d6213b381cb9ce37f933a7a77a7d92a67164eb89b3298d3d1c70dfbb72efebd47c1704b54370937aba4e3480814a029ca8a30e7465c2de18bb23d12f74755285cae28e8c86ff69abe0455ff3d207cbff6601614a4576228e78d30d99178d2d9776e81292c040c18186017fe21a2e360e75e53a347d64b2fa7684712107a41fade445d7d1a0f7e9c60127ee1e151718abae06fd74858d14f93263d2e5442a94c47b6f287e5f0a661ac40272f85e54862904fcc96366f03870bc4437fbb56afb334633dc27f9eeef2b05998ea53eb81920e5bd80a980ed383dc07a113b062f957b1785dc5ff96959aa781c4dd2053e5cdd90e30fc2c7644bb8c66aa3786ad294c7da2fee3b4b3ac02069c6df274b46155a2afb6b0a02dfdb9aa04419770bee2b46f83241e22860a08100d4185fd5613cc555f5316d36c923be3ef6352c3524c60132a52fbba95563737b671122fe066207e794865099730cfd2de8fadd294cb2e89406db39a4792f1ac25c2ae006d0c82c89dd3164a5cede611b435813826bfa136e234babe246c7a08014335b0899b2802d36f1689ac829a8568f8d59a2a1a260ad91ec16b3d038a06a41b132b0acddfbec401a9e1b468d798c11e8b30f4a97046f9ac47fc42c44f2ccc5ae3f95c3e1fb7808697217bfb858cbe50e44359e7173fe390e1b4dd834df1c0f0397e975f16414d3b05b401cae16bdedbe1b826398bdd0900d1bf92574ab7af8a0a746f231916d7b8f53a2b9b36f4b020b1f223ea1696fd53ed2c21edb8971a7ee0e64ce8a21c046a229400c1eed83002d4d7b0f8c4ddb5d6222ae501ccbe6b6bb42980416eee387a7b655894e77c6ae49c55f77572ae543be9715eac38eba28923f471c0f28a5719b44795155129fb19b62ec319e8d6840df99f26e4121a4182d08750405ab1f421e1c48193e5ab19edfc33ac7c28d090222fb6a5fa64c347a0bb94504b15b57e283b4ad17dae9f0867a7fbfe9e50b036576819882f1ab4056e33be7c4add29dcd84b784c2e380b2543e5841aea2d9d91529e87ba23d4b51552ba75a79152fb51c914fbfff286a2ec802e19ed2f2ab537a52cc8a741f83671764db9a7800f5cfffcc2bd222f004ae8de31dbf8f1076b56969381ec9c796e8f428116d4ea3ee8dbb0e91b854a5ecb57c3cb3579395769f0536c4d88df5cd6bd612b8d5ce85a186bd3e49421f9434fae4c11cdcc98092a8247446514d0d3dc1521c1e7d5589ce2d2e1828e0cf0d6f41f8683a344ff83be2e9014bc5b8900bca57c186c128d0ce7525135ee26b3520573c73550d88c4398fdd66a4d4d424d51cf64ae1c688bef7cfb947762b04318e83a5c0af66b2ebe3cca94003863ba3d9b1bd40e1999e002adb0875497006282ccb355a18a0a9ead66f3eb17d8845b81f364e59ec1b4064c4631a73e4526c772b2d477cdfba9abc380f46f70020b3599ee94ce385287ccaa6eedc60ac8dc8611e91a725166a056d66bf0e468418b372d0c6a606f470582b7cfde784897cfd4b20a188a0aae025a0fd604cc030f69c1649193bed5a35306f9626e177c6f9a897bc293fcd20fbfc3be73cd6c1280434ceff0b469e7e963d950cf72c0dd7d9aa70908f874db800813746faa9b56b86b9a9e6012ac694ea02de7c8f3d2e55f64de94009b7420b536df782726a15fd8eb758413dcfac22b5c97dbd624fd5fef0736ea83a5d5dbffc722003272c4551aded3aa128d1dec976503061c25cff1b36d1bf349b311f1167cd6b0944f9cda0d8d9a321cbddf2a04b6422102dcce165b75e5bc7a3bb23c5937c7956fe89fac9bf7e8a32dd7b72a2d2abd96116643cec04425fd0edbccec8ca58c0bed56a1b092ecc64d0b51df20715d7a8ae4827feba7da2bfc582951c509d9392fc08075a493e74dc46e3ba02b25b3eb6d9cfd90c5eb5f194ff19f9ba7d64dcf3609992fe527c8ebb9a81bd5f811fbfb0ebc13002b5819ecafd101ac04ea9cc169c5fd9e9a6322256f724dd0f2368da2f8697c818b7e04fa03de37ee806f122292a6388bec18ee834ee1c02dbe97168f4088cbd00d3adb915fc39d3b60c8ef4611f7f21b012e8440f7e45b7af991023ea188f868f8b8f2a0101a26e97e2150f4febcabb805513091f9dabed65deca0b323f98110eb47c78fa8ba4901e3347819855a736f92115cae8048f83b71fab9aeea46bf803b440f72bb3072308ff3e7c010a4d08af0622f36e83d26de183404aae63ab5c7c18f1fcac79a489fce6a253435780672bb162f75f0a63068344170a156658c958d9d4ca358f0c94ff181d9f99aa3ab862d2f00e537a37dfa9affbf6179b303a608d0bdc13d29a86386564c2ba24f8a5a9fee9eb2f3325ca19ded4f20423149d997aa579f9f052547a35a8374b8c89d869895f0b9d58648c10557b2809527324bca0af7745aedb3f251af620993bb2d335c4b127b40c02b22d47f4e94bd9b66755240a27ad562042c8478ca8517707afad24febae8045991b2f980671e311f41df224a0ebcd12fccaa1bb83006a993d405d6e707da9ff3c103876c5bf9dee7cb06870dd437902d1b2431711a18916d3bc2881c36f54e04a66fbc3c057443ae20c12bfa875a49029c4eeb353ec706c5b77e01b1affff148817cf916af8c395fed4c66fc00857b2d5616e2bcd749eaacda109542e26e4e9bf1fb15ecca8850bcdc99221ec30b7c241c267b2768ea711e37e109534cb77d55cda032feee26fab27380f2b06814d83b7b0c3e52a32dd664f867eb990f2c2df117a73803705cdac68293c610375460e269630887a5d99132df7483dc4a94296cacbf2bb56bf7cdd044978c2ce1cec5d95f96f0c4cdbf6959abbedd188420fb1d867637c4fbc4175d9e38c7594c926d9c6e64d07de5093b5c8a7956a5c6f0b877c88b746b745b1ad95ad1d7cf5e40907f2ccd3d6b6ae1173abaf19e15d73dad3d1114cff001553ca8686d0eec6304a4227f05655123e9e49cecb950579176828aad29d21af7c1b1a1d079814b676c992cdba24442f4d48509680e544db289d21b62fe14da5ff17ed1638983ada7d38e643fef1f49a2f7811c465530a5ff6c333a44db7644c98dcb96748450cdb83d737922f3084c21d94a4b8153c1da17195fa7750fd3494f9aeda58aa327d27db545f6e45d3c7be9743ff14517ec1a77f30676d9aad783b394601ba83b9c726af1eadc4b0adf8f74d0506fbab42e783558570e95bedd247c49ae42508b26cb81b3d96bdc7b230a57927ca3d53049362625f43d164777509630e649e0569de6f2b9935db7da17a19f5f425eec60901799de63ce3e09c3e00f247cef7b2b10156c0a4b31b8a1e8f11255c9d07175139d6a63a13af58f73bbc2a471ccfec3805c36ff2282214c87c5d9e1664d3dd1c0fc8bba99499d692b7fff5f3d434b91cea2aae87da000bbb3a08204b1850252dfd5327433e2f4209a4e8aec665f0d068cd5b7af7a758aa58b5c5dc20710dbdeb5583cd8f9d02bf621bcee4dd0ae0d17492a5ce4d2c95cbf46ad9f96105a44e59644f934755fd53f4f28067fc43f648902446f7429a1da4221627af55c9b40f21d3e7f0e7c035f6e32c4c7b459a7548deb33805792273ce36be4290a54d254ee0f32911d8dbf1096491a9f61d080820d96169e019b87dfe109d4c6820cf15649bc066ee6b59b4bb8ddf4dd43b9786c60d9da2cd6854e6e5ec1d4d4a5c7063a59eb7d8dd64fb71103804be1a0be51a0e1882c32fe997ab7f500d8fc5f8cc2d302a4479d28ccf613298a59a519ba00a4191ecb5b2b975183deb8cd1f16097f1475c93cdb00c65f842f90eee54d78c3a7b1c74f516c4100d42bf151e715a83536fdfe28c1e8cdf4d6b9394efa8fce1cf699e7bbbe3e456ba824a64564b4b3d00a5e6ba41ac07923e49bc36f8872365f52d1e5e6e48f38a46850e4054ef2c63b07a8d9ef0fa6887f2f2820ffc6634cb99e04e44b59f8a79234c7c476d213e323e68b0ba6a060fcd475e347de82a73985881128e264901b302e6d1cc655a64f761fda7b8f123e3a8c7701be0caaf7c182031fb8697a0653bed8209f1dc85d1849eb4043b22c36bc083f7c8727567cd44840182b40f10de2eb54e3ade245f4c4f5f8cb28fff657df5aecd9b95f10196c97870977ab14cde2b615cc7a285ba6c5266d863198b6636b2bbd4ee8fadcef95db655dab1076de9a350513bde6e210a1290ed43cb6b2bfa06327d63af72db9eb4ab9c0cfe9a54b6adbe0a8528b3814e5ad048f999a5bd6e8f5de13dd756db876bc09478b506734008a9f239e10015852560500c8d6c332fa42e86a12bc3892c092de9d41aa9351605f7a33eb5e80051cd8159bfe591c371c87b997ae4bd8fe24561e5ef71347ba3a14d0dcedba418e9be674d9f24a2484e2a9b20281fe788f26503c3804a52817a0a2538920242c25958bf4c87687f771a9deb12f3d6a548b60d0f982e9a5f3b32bd4e8db9a07e32de8123e6607962c57c024ba26871af60f54fa826f044b671a4d1b5142ce9c7e5cd5a0723644d454fcbbb290aef4eb0d35ba0d5186700e0859d327b476e3b2e6dfdd25bfc23b928e2517d4b35550c6571924e6e823517f6da9cefec3440367fbeadda7549dac1fb3f77e10f8d3b6753e1f855b6b84b2a4f439c57421d9c52664f67296fb1440737c7083fa6ee026b0490d27c92833ecd261a95c99bcb51f1f1538069cff514e14c3c99b65ca8aab74210461226708d8ad4fa9d2307bd36545adb5362f88d7ed56d5c6e67af2c49f72a56a6e7ab81a3c838db9020753f0746a64e5778ac260469f2041a02fb06f8792ea484706e04d05d55ed5c9a804b64a1f6b85a5e937689f991f47ffa47cfd50aa84c675f562f8b8dbae468b7bbc5eba5f6b82632db0e0ad9a16fb0bf6b30b4ac6c2b68d22ec542341989754f927692c6f8c0a81daa17dc9fb9edc1a0d4c19a1480110969547616359a1edfb5c51e0e2bdec0e53845b02891fc1cb354b7e7ac864d07633832afbd36baec25730aed56595bf8541ad44df5d0e56ebd55483e1ea2cbfc2d6dbbb5998d221a55db640da030db19b8a59653c3d62b8e37a79bf047bf6e7338da6aa4436c9cec3776e3c8b09facc37d2f3d8fd3388b62dc25ec0aa4a8a06840c7e3d3b874b9734f882fcc44d54caa12f4f96220082e2f5de90d8f70e84915a6b6c2364010b7b991a95abc0b6a16693e27ab29f2edd7efd7349ac8e092c8545e723939427c17afe44f143bed9c2559f657dbabb2977c704e8a2429c6f53a6d67f939b5db21ff8b53e6d06fdcaea86555b4441c045967e7823edc6a63dc1a6c088d83b8550de80a186ee537b832f778df7301b4e08784ec10243d674047d873a6f713243c7fbaae589ea8690c097c4e433d1158b95f3f6b7243148d684d3cf5511ff7caf8b02d1fd469e155bff94773fd747259e882a133798848bebe1d09dd54eadd103f249636234f66d65813c44ec8ecce5b518a916f18d1693e3c6ded9fa92f3c5f4e0edf4e2316dfdd3adb22a97f831b0990f8bd3e025cf75456e9b13890365d51d9254beedd06b6534cf1867f6a74ae55df095b02df19e3f514825f0b24cbca80178be09b9029f37389366688f4a9485cb24446e9ac7c8288622a3944394fd2e3cdb401e399d5954c6ffe77de77fc7ccfb71b8fb97b8660804a79411020cd40317253ed30dbf6056a43f8c5f2c19dea18a8f39677242296e11eed0dbf51f3d0c2d9eeab97d6413ff92957575efc1384c96a460ebf0f631443be930b0eb5df6ab63fe8acaa17df267e672818655cba9674e2e723e25f7f00ab01dd394a7228e8f33af81ef25e5260efae454d6f27186ff545140d12580aeecfd75f9d51697c1b5b8764627b065f7dad209b294c66061988957cd47bf822889cdad07807c086c1d5c167b5a933a2fe27f419068721c31a0323ee042ee168d2c7ceb63986ef9e13affbc23e1f48c8b74ff78ed2f98f3da10a352d4643226bb0340a3566de27f714bb4b190d06beb6d872dd62509ab5db0901d54bf48e7e2d05a333852a1ade9bea22cdc29a9a55457a6ad80dd9362e6263c434d76e3bc5b646de4ba300b2ac32899f42d3aae16ab23f0711085ea038789f88d3f6ed628eafc128e0aec8c6a339032f455b689dbdc11c9419bc361375e9979660ee5f047ae72ef33ffd9629f9018a85c8c5ac7803fb3e9e212a3d72f89bd51853f1bac9b81d802348782887ed2cb55a03a7a1db8353c2329ca650d2c51e2653c11e7c91f8a80b844926d94dcfab580942ca43dea75c9953d2e27e30fe7c2497bb289551638993fc625b27194d853449e1e8c90985ee8266c5d07698e4a34d344364eceaec34f992d002868b086e9bb7964c212d59cbccfb1bb9e783bfc7091cdbdb7aaa923a3cd488708cba1e3dfef21b4cb3825922f52f9907cc7f137d05eca7954948e3f96fc94820194498970eaa0d7cb6a81d94d6623c29d70d4881631e5fa7bd7c5abd4b69d03c77db1e6d85271a8611c87d5090a0582445af3bc0a5430e4f694417d2cff9d2d0158a746f19709a3b74680f0fdf521f61b313d2ff151a0a0e909969bdf593b45a107a0df3826b4764227dd114273fd236e17a9503b362358604e5a20f633d4f2887f2cedfc017535ec1459c2bd5c841422e75948398cc716bad96c0bb4fae1f93b7c3450236a319bf275e997abfbbfd778fecba2e5bc974e4168b8c070f8ea071778b35db5ed28ae1e9a1457849b237cf6c000e2dd4ba794454dd3ea272aa788e7cbea5ba5a36ebc7d8bbe90a66a833f4355218cebdbef81faccda850e5eb7b5901e43751bff99c7da5c3d9646c43915d2abec31b8808c4050ca64aabacec71cc26567a13f8b756f685755766ce3b42791b35a0e4bde8169b8e545fcfff76ec226f2d849d908c644a1079274839ac279f857ef52e57429e856cf059f57c3ce09737d850263569d32eaf9cc5c72b686b6f132a4ab4299d74d4f87bf97cd614fd495ccb98387c0d181173dfae14ae24ef00737a120faa05721b4d36312751e638df372d9fe9539034dd13138e2942feebea19f3303727ff1bb02e38dbb19ab70059393f36ccf03e853d06ea8efe4b67e22d16b6d3f0319cc2a842e7b07a58ce92fe7768a84513395ad8c7887459aa00ae58a46003f16bd26ee775ca39bcc355ceb847b28ec6b21205582e777d986e532f90e20819e0d6fc9d2e26249f2a142b6ffefb22484c214660cd6f8fdb6536e184744a7afc2db8c38e3c88d0452a682cd362e6701729e221999a4a04db66a86ec4a84ccfc6eb0d936ce766091619be49b10d16b71edab8877e3daabf95a9116002596693e3c77f68f8e89b60c08fb089927d638989133c1272595b76847546ada69b50231a83b06c57810db53e392a90e03382cf0611d51477d1363bc13120d02e5a6de6e3969da0306ab79078928c7f69fab182205a944d76c8b484489c6f81338e01a5da6e50745d3b6de322267e28fd5bb6c455d55d8fda168e84c2359afc30416271ba9a93e3e6a2fbf5d3c5efaf75823136146ad8f81b4d96a432f22a66098521b0eb7033d84b786c95dc8bd0df582ca758d92254ba0dced6df13e529aa22639604ab1ae50513f1d8bd7faa07aad4c8e77a7875d3868618f515f97ed3f817ccccb8ed03906478f68c60e632b00a4a842abaa68e89eb478a4061c1ff5743f240fa1c5cb5dcd741e26deb9d5ce94de268c39a40ed80eb3259988be396213797ed46afc1e66f30a4d1cbcc1d6e255722a36099a88a556e73a79a2c91e882b4607ca31c49129580b8b137568ac8c026d64a4d58307909792f775e2867b8590cb1c92e39febd4993dc692a4762c2defa076947a593c16f930be7cb6cea2e9e61e57ea31f3e016160bb8fea5f9dcce844b3c5fe06984d16935e7bc462ffeac561b7f42e25d297d3ef0a4f5b1e5620221bd43be7f8971aa06cb73b1b4c6f09f958d2f8d78ac842588d712565ab82ff6e96f62f7313689787eac33333111f4dd9ec2747b056b61997508f8fe401dbd9153ecd56e84bbc98db447537731f70b72cd014c486e8a2a528c751b302dcc2c44df41fe57efba5ddce841bd3a290aeb9cd11565820ae9f8176a5cae4eb0fd4f8d32427f4605bd392321a079d7b1a91e2e5cb69870cdc02e067197c1de7ddde9dde48d37797d596781b1958d2d1f23966be75aea40d905a35ffa680cb5de2a1a99f9328c7886d6ed6e1825a46b925ca3efa02974fd25af32fe0db3b321ab1fade3c01ed8cf70734812f28657a59c8946626d0dce4dc64764f5f1daa72830c0e48d2134aaf823e3bb921b15360d8abbd84dbc14693a26432bd276a113a51e4fa64259e74cc40c7af8383ec0c08f3adc7377eb4f3e8ce347e45bdfca5c0aeeee80d0997dfd628c3404303a3840f4c8eadd06392c727d93be3d98278324d3125432a2b0fe1d413d5f98729d2f783d68e9b0af5da0a2c89206b11401bc6c9e9d49d61fdb8f262350b1f1933393d2e4b59da7f7ae20bb6a10ed1eb55fc5f6597bc158ed39a3f80329a98fce5e54ec26f6497c9adf60c1d698e35ca104b5e4d61808a2895939eb179b8889776672a0c9db6598e920e76449685724705e5895af53fc01f3eefd4e93f94fc05f5e55a6d331089938fcc9c541feb4892360b4cfe7638ab52eae7c5ad4eb628968485c0e14c64192be1f2076dc2809cbc65661f923e7304415135e261ebfc185e6213699d85695d7ef120c6a11449a6463860712492eaaa84737dbaf09264a9c1b07ec183664a96d69de2462f31dda9acb99cef85f98508efb759b0b52fc1814496bece42bfab676791d78c6b1ced13bf7f577ba2917d75d24b8498584491a8f3b65ba8b3bec8ac371b775c668b7c942e95d91cf2d63890e801e62aaa0e51332407234369bc1a2280a90fe8c3ff45d5c1760c30abbd83eb830e9b3b76777880f18183855c4d414b3e3ebe33805a991580ec38a2b9841a5b5f0f5c4b5ab61b4b8a67a44e2d582761bb65adecd7565f7a1f32427b8dd540160c85e0b957c5c534bef704f590ac5f17eb926538ae5053e3697803d2294b93787c43d09a9de9861bd54952f74527f3ad9e1f15f55b76939a2052c02ec5c64ae4eee8bd705b30fe9cacf36e6e1faa71cf4f0644785ade3995b437eedcd0289390f5bde0a2a6a7d55b59652e345cedd472c31d0a92f776c81b705b4de53ffe4f11a9513ee2d6a44ea3d8f248ee674e2e05fa87589b656d0ae6f2d73f6f22ce4ef9bbba3282d5eb2b10908baa8fbe48ae2314f1e27a2897e19c9666a2362410c881735af429e9dcd5d0d9c77e6a55e9ab434541a6ccf72ccbd0e5f30363fdf204ba876a84e8249c3a5ba5f0a30feb960fa7ffeed607c9693352e592a97a3fd29ba3e3c2ae792dd06251e2425e98f563a5fc8f90f09efbbbbb08ff4264fbf4092f4e2682469ccf651438c1e2fa06ceb6a687dc43370a41b8e8acde553c18250eb7c03d6f7513c40993cdb4db24fa5890dbdcd486d4e5a1e70e99f6d6327581abd09e42fed579046685c072366a8435ecb97e3a5fd65bccbdc8ba886bdd252ac7b71fb151c966ab6fa864d6999a43897b66cae99ed672cc5bb4cdcd12af309470c36b6e7b0dc8daace3aab9530c91430cb6d18c402f189b1bd0875c5dfe3d1b605bbea3c61c9e6ebc99d98a5c0910efa8d4cd80208e80d04d594c7e7ea296b1d6b271ca646cbc5f47b42f2fbb48195888d6b63485220935abe804b2cb42ed9b644cfa65f0488097764a65969902b4107d4eaa40e812d4b351ad75ea05cb6ffc5ddd66f49710c97dbf214a5ce6523cd1c7e3276879c38f03f6d0d04538139fc23eb4061bcf2218b1e22313c148f780cd90c0c5b99343bc411609b57218b44e81a42a2934a9caa1b9999acbca730ecced6552f22ad53ff8233c2f8d67d81840f4e9f3c95b29fcd8b52853964857e2f2c57f7c37257ff445a466bdf80eaa5b9a983a636d1fdbe28d294d717bd59423bd2bc3450eabf022435e8907d66f4d169a6eaae22716dc14f7141654783727c30c6b4818ad20fa5fce93177bc6a0f60ba0f4f3702b78d1e27b8262717800c620e5fa19b967608f87dc16b23af30680ef725926d805d6689d4f5afd7bf7409c420371422e82ab2d82d14511a43cef113843206265f39fcf5f4aaa415e5ccaae514822db97ecc4f4b3eb1efe5f3ec77252510c0afb57082746ebf5bec9030ec16a3d40e072fc525933249a7f10990da18f813bec21c70936725c9bea234ebd5446bc286a1f62ed1410b51fe02f2371846fb73d862f8b44b93d03dcc82b958dcb9b3d0e2f8dcb08d87cc5799e0b550d96ea0ff6acd6b224096ccc5f1f10baba9d0d4a7faee713fbaa829a570e0eb34b849380f0dd0d1a9fb36528886f550b5cd2d3f5513f31ae9817201dfd1e9a3b918cf8bb59be081547241098711a2b1d8f4bf436d3d8b6c6b87f14cf60adfb7423203c6f3b6e3f474f2d4abcecf11e44d7917e0cf1a0c9821aa1ea12684303aff00bd184ddafb3b4ec8ec46d9e99deaa2af9bb6e9bcb24f5e7fea242245ea2e94f0331459b1d7b7f63da8a49b9099e9deb70ff6840584bf49b47fda139221bdd3a432e831ae8064db21c7e7e84ba7107e511c3ffe2e20e8f8f6fdf833f64c4ded95d23b81d85d3b9b5912232da0bcb6c7e8c8fc5ea9a1540e57fd93f8ba7b794e4930cbdd24b57c93fb82e81d8e2828f08467be10168a90d5a39d8e72ee24e87161631783b3b74a3ae0165bf7c9921a3e0161d8cf31f100211b2ccb9b495df70f5e0dd290dec9ddd49fdeaf005fed58fdbc34ae59c60518a3ea6f4003e1325e71e36f5531803145f93a30857cb1dbcc3724eefa86284a60924c3fa7e1362f4748896e2b5081f4403dc5e6f1e9df8415f45669e71d6f0a7768b16649c380714a5864c0d70456efae1f7702186ef1ea4122c98a0557ec4e4d01bcae112701580f68f312fe3c79c50fc7ff8771b95f7368bced5f23b5455cce39a8f924aab2ad877783201e1064a0e8096010ad80261c2c62e057ca28dc88b536778fe6c704ef12cf3d6f44b3a091391dfe604da0ea52d3c4cd8a600d1ce076fbb72d6f3b04683250897367cd65d07b4479e4e8cd96484ceb083c4c488a8010d1d25937721dcfe6b8aff7b92064aca95a49d2918090912752de423bf5319b708850d612bfabb72a77bed56a2228cd045470230d21213e4be237312a62f8158df5bda9502be898377f84b1cac433e604a0d57b81212a6de3595e4193085cb88c78c1aedca9514cb7b633f6e32393f4f05b18a4e55002a7da56cc122f69a38fd92f7820463ff1e32cc080f136d99d1abf5a6a276d149c4ee167575401561bd7b34210c3822c590aae3640314fee3165dac70e6b51f414537b324d3487c40473566fdcff088fc6d3101d132956b5fd10203693e37f0dded3520bc205e7c433616f96216c4a49348e1ded9680e299a124cffd9c82911dcefd0fb534b0960f5713d6cf14d8bf5638d9d1c71167552b9fd594617733d4103209b943fc8f744e64cbad09605e2ee734226eb16b21910ef9e5f36745134f3adb587da514bc5d910dabbc398077d24ba27be717b8056c5caf1783093cab73e47d60986bd8ba0fbbdbf2c00992f9e86976de2bb40afe9acccaa76b26f872c6ae8204bfd7085867c14f57c52e4d0f763fedd11fee20a006586f2279882730d29405f4fa127fbffd2b1d6398333e4c3f46a9dc0e8fb798620662f80a8395cabf066503a0d87aaff43e67871a4179cbfa4c221ee24039f3cb5646ea57cdaa60649a9aeb548422239484a9aace2b977f5d462fa35e01a6f660902b6c1a41783bbbaa0ddf154aa07718ec44cc31f7d0ca5e10c30987f0b93204439d30ab6fb488fa2d3c0b2091c7f2681c617f756a9220a3d1aa5814fa510e1feb14c9c0f319417d63134f0107a32bf9a0dc441ed867c1ac25dffbe7bdb3ea7ff7c1e7d9086deffa4f25074fe9bc0e6f7361d2bb25831a7b57e30195faaf76e0174bbe0ca8796b28f38a02677e05649f7c8e9c63dcbda2e5e495630c0189d5c6ed4b44c721dd9f913a1195ed9fe188de82bcca3686622581e4b72be70ab16913da5583bae1fbc22e8ca873ba82124d7d32455c610d07e44b91777019ff06d1f1cddc89dc8db2ba547c38796f872ba71b5bbd7823c45cd9c767ca4d56f1fa1ae0f94d173e0461098ecc77ba6cb57115821b2fdb9c9da564c4705e54e4c70945629ee4f0ec4cee0a3d8145ba7699cee366ac5923dcee75ff1d059bfe6d3154b5e575a2faa175a1acdb7de3a2f27612487bd3f33de4e5194eb517b1d8132c9bd4f3d765cc31c31ef6e112cf401c1b5adbdf3a685499cfb2022700ff0895e0daf853e1e27f8b4e42f0eb526821429af05c94dbaada44fdd63a11da85d2a223dd7c7811b3d41abc8106ceb3e5e67eead4ef2709d5e39cdb92ceafffaf5d09bba0e407fac1345cad36b01bb496883b1cd0e4427ee100682a841f5fec279896f9c65c7e16430d911dc1a19dd4fc9546c1bfc195da1d19390902651a7cad5561b6e5192005753ef42ebdfdce25f26caff6e3f5e5ed3ae769bc0a94747d827726c51da66886b841587051b546c3514baba129f4b22c3b23ca4f1c2136dd11ec3c7b7fc5fdb30fdebbd80c2d45cccb9d8cbcc2f0a2508991d46100e452da16552af0bb1606bda4afc8080f5dd292ec7c40a102c03c3ede9dd3198fa5ec0c6c894e8dca4a20e987fc87669ba1fe4b00d7ddb319c85f05a0a4e14997278d9efb87ad7ef4da13bc018b00b3b2f53ce2fabc5ca40bbf8ee7a1e857a77abc131e1776aeb1093defc2646cc59f7646117d5db5da2b4f82ffb5448282014082d508868952d18a704858077d715616ef1bce89071b39dc960d55cbd47e23153ace2f742d26b1aea529e05835ba5920a584e958140737b51779de4485b637cbf8744ef536b496660ed6c15e96d55968af49ab473fda952b879a70c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站域名截图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go语言入门</title>
      <link href="/2021/12082134.html"/>
      <url>/2021/12082134.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本基础和进阶</title>
      <link href="/2021/120755240.html"/>
      <url>/2021/120755240.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> shell基础 </tag>
            
            <tag> shell进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5训练项目</title>
      <link href="/2021/112926093.html"/>
      <url>/2021/112926093.html</url>
      
        <content type="html"><![CDATA[<h4 id="yolov5命令训练命令"><a href="#yolov5命令训练命令" class="headerlink" title="yolov5命令训练命令"></a>yolov5命令训练命令</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># --nproc_per_node指定训练Gpu的个数, --batch 16 加快训练速度（批处理） --cfg 指定神经网络模型 --data 训练数据集</span><span class="token comment" spellcheck="true"># -- project 模型保存位置  --device 0,1 指定GPU 0和1进行训练</span><span class="token comment" spellcheck="true"># smoke.yaml是训练数据集指定文件</span>python3 <span class="token operator">-</span>m torch<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>launch <span class="token operator">-</span><span class="token operator">-</span>nproc_per_node <span class="token number">2</span> train<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>batch <span class="token number">16</span> <span class="token operator">-</span><span class="token operator">-</span>cfg <span class="token punctuation">.</span><span class="token operator">/</span>models<span class="token operator">/</span>yolov5l<span class="token punctuation">.</span>yaml <span class="token operator">-</span><span class="token operator">-</span>data <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>smokingdata<span class="token operator">/</span>smoke<span class="token punctuation">.</span>yaml  <span class="token operator">-</span><span class="token operator">-</span>project <span class="token punctuation">.</span><span class="token operator">/</span>weight<span class="token operator">/</span>smoke  <span class="token operator">-</span><span class="token operator">-</span>device <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5 </tag>
            
            <tag> yolov5训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于yolov5的视频识别推流截图接口</title>
      <link href="/2021/112911863.html"/>
      <url>/2021/112911863.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/video_interface.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载本文项目</a></p><p><code># 1. flask_app_1.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""通过此flask 接口调用多个函数实现功能"""</span><span class="token keyword">from</span> class_app_3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">import</span> torch<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token comment" spellcheck="true"># from torch._C import device</span><span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> function_app_2 <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token comment" spellcheck="true"># 导入function_app_2.py里面所有的函数</span><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducerserver <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token string">"&amp;#123;'message': 'None'&amp;#125;"</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        type <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span>        <span class="token triple-quoted-string string">"""        将传入的字符 type 传做为函数去调用function_app_2.py 下面代码的意思就是函数调用函数 smoke(information)        """</span>        eval<span class="token punctuation">(</span>type <span class="token operator">+</span> <span class="token string">"(%s)"</span><span class="token operator">%</span>information<span class="token punctuation">)</span>         <span class="token keyword">except</span>  TypeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'no this function or function error'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'result':'1'&amp;#125;)</span>    <span class="token comment" spellcheck="true"># return json.dumps(information,ensure_ascii=False)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    启动flask服务    """</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span>    </code></pre><p><code># 2. function_app_2.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""flask接口传入的数据会在这里进行处理"""</span><span class="token keyword">from</span> class_app_3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> json<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token triple-quoted-string string">"""kafka 服务器地址等相关信息"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span><span class="token triple-quoted-string string">"""调用接口的信息"""</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://localhost:5000/gttx/objectrecognition"</span><span class="token keyword">def</span> <span class="token function">smoke</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    data 是一个json字典数据流    这里的传入的数据格式是    'path' : 'path',      'id' :'4',    'type':'smoke',    'status':'0',    'confidence': '0.3'    """</span>    <span class="token triple-quoted-string string">"""判断kafka消息"""</span>    <span class="token comment" spellcheck="true"># 对象字符串的名字 比如 obj_smoke_4</span>    obj_name_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'obj'</span><span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 判断当前状态</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 发送关闭状态到kafka</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(data['type']+data['id']))</span>        <span class="token comment" spellcheck="true"># 结束这个flask进程</span>        <span class="token keyword">return</span> None        <span class="token comment" spellcheck="true"># status_value 表示status状态，当status状态等于1的时候创建对象</span>    <span class="token keyword">elif</span> data<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""将关闭状态发送给kafka服务器 为了避免同一个对象创建两次"""</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(data['type']+data['id']))</span>        <span class="token triple-quoted-string string">""" 将开启状态发送给kafka服务器 为了避免同一个对象创建两次"""</span>        kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'1'&amp;#125;,server_ip,(data['type']+data['id']))</span>                <span class="token triple-quoted-string string">"""创建对象"""</span>        <span class="token comment" spellcheck="true"># path,id,type,confidence,obj_name_string)</span>        <span class="token comment" spellcheck="true"># path(视频路径), id(摄像头编号), type(选择的模型类型),confidence（模型识别信任度）,obj_name_string（对象名的字符串形式）</span>        obj_name <span class="token operator">=</span> vars<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>obj_name_string<span class="token punctuation">]</span> <span class="token operator">=</span> Process_video<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token string">'confidence'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>obj_name_string<span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""调用一下 是否开关的心跳接口 方法"""</span>        <span class="token comment" spellcheck="true"># 对象调用一下是否开关的心跳接口</span>        <span class="token comment" spellcheck="true"># obj_status(无需传入参数)</span>        MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>obj_status<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""调用一下 错误自动重启 方法"""</span>        <span class="token comment" spellcheck="true"># obj_restart(interface_url,data)</span>        <span class="token comment" spellcheck="true"># MyThread(obj_name.obj_restart,args=(interfaceurl,data,)).start()</span>        <span class="token triple-quoted-string string">"""调用一下 视频拼接_标出对象_rtmp推流 方法"""</span>         <span class="token comment" spellcheck="true"># 传入的参数是(video_fps,rtmp_fps) video_frp是解析视频的帧率,rtmp_fps是推流帧率</span>        MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>video_mark_savepicture_push<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token keyword">def</span> <span class="token function">person</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    obj_name <span class="token operator">=</span> vars<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'obj'</span><span class="token operator">+</span><span class="token string">'%s'</span><span class="token operator">%</span>data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> Process_video<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    MyThread<span class="token punctuation">(</span>obj_name<span class="token punctuation">.</span>test1<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mask</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">other</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><p><code># 3. class_app_3.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""导入相关的库和函数"""</span><span class="token keyword">from</span> logging <span class="token keyword">import</span> error<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Lock<span class="token punctuation">,</span> Thread<span class="token keyword">import</span> os<span class="token keyword">import</span> cv2 <span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">from</span> torch<span class="token punctuation">.</span>_C <span class="token keyword">import</span>  device<span class="token keyword">import</span> torch<span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageDraw<span class="token punctuation">,</span>Image<span class="token punctuation">,</span>ImageFont<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> subprocess<span class="token triple-quoted-string string">"""kafka 服务器地址等相关信息"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span><span class="token triple-quoted-string string">"""这是一个对视频进行处理的类算法基于yolov5 训练框架基于pytorch"""</span><span class="token comment" spellcheck="true"># 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true"># 'id' :'3',</span><span class="token comment" spellcheck="true"># 'type':'smoke',</span><span class="token comment" spellcheck="true"># 'status':'1',</span><span class="token comment" spellcheck="true"># 'confidence': '0.5'</span><span class="token keyword">class</span> <span class="token class-name">Process_video</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""类初始化的变量"""</span>    <span class="token comment" spellcheck="true"># path 视频路径, id 摄像头的编号,confidence 置信度, obj_name_string 对象的字符串名字</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>path<span class="token punctuation">,</span>id<span class="token punctuation">,</span>type<span class="token punctuation">,</span>confidence<span class="token punctuation">,</span>obj_name_string<span class="token punctuation">)</span> <span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 视频路径</span>        self<span class="token punctuation">.</span>path <span class="token operator">=</span> path        <span class="token comment" spellcheck="true"># 视频id</span>        self<span class="token punctuation">.</span>id <span class="token operator">=</span> id                <span class="token comment" spellcheck="true"># 模型类型</span>        self<span class="token punctuation">.</span>type <span class="token operator">=</span> type        <span class="token comment" spellcheck="true"># 对象字符串名字</span>        self<span class="token punctuation">.</span>obj_name_string <span class="token operator">=</span> obj_name_string        <span class="token comment" spellcheck="true"># 置信度参数</span>        self<span class="token punctuation">.</span>confidence <span class="token operator">=</span> confidence        <span class="token comment" spellcheck="true"># 加载模型</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>hub<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'yolov5'</span><span class="token punctuation">,</span> <span class="token string">'custom'</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">'models/%s.pt'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> source<span class="token operator">=</span><span class="token string">'local'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 定义一个图片的全局变量 self.picture是opencv格式的图片是一个三维数组</span>        self<span class="token punctuation">.</span>picture<span class="token operator">=</span><span class="token string">''</span>                <span class="token comment" spellcheck="true"># 定义一个开关状态相关的全局变量</span>        self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'1'</span>                <span class="token comment" spellcheck="true"># 打印创建对象成功的消息</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'创建对象%s成功'</span><span class="token operator">%</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 定义一个销毁对象的方法，释放内存空间</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"调用__del__()方法销毁 "</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">" 对象，释放其空间"</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">video_mark_savepicture_push</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>video_fps<span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 创建对象</span>        cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 显示图片的宽设置</span>        width <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 显示图像的高设置</span>        height <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'video_mark_savepicture_push已经进入++++++++++++++++++++++++'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 调用 单帧识别画框 方法</span>        <span class="token comment" spellcheck="true"># identification_frequency 就是延迟时间</span>        MyThread<span class="token punctuation">(</span>self<span class="token punctuation">.</span>draw_picture<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 调用 推流方法</span>        <span class="token comment" spellcheck="true"># push_stream(self,rtmp_url,rtmp_fps,width,height)</span>        MyThread<span class="token punctuation">(</span>self<span class="token punctuation">.</span>push_stream<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"rtmp://104.225.236.140:1935/stream/%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># cv2.imwrite('./1.jpg',frame)</span>            <span class="token comment" spellcheck="true"># status 状态判断</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 释放cap对象</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token keyword">break</span>            <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>video_fps<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token operator">not</span> ret<span class="token punctuation">:</span>                    <span class="token comment" spellcheck="true"># 调用kafka发送错误信息</span>                    kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">"打开视频源失败"</span><span class="token punctuation">)</span>                    <span class="token keyword">break</span>                self<span class="token punctuation">.</span>picture <span class="token operator">=</span> frame                <span class="token comment" spellcheck="true"># self.draw_picture(0.1)</span>                <span class="token comment" spellcheck="true"># cv2.imshow('img'+path,self.picture)</span>                cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                     <span class="token triple-quoted-string string">"""单帧识别画框_保存图片 方法"""</span>    <span class="token comment" spellcheck="true"># picture 是opencv读取到的图片 ，model是模型，identification_frequency是识别频率,比如identification_frequency代表1s钟识别一次</span>    <span class="token keyword">def</span> <span class="token function">draw_picture</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>identification_frequency<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># time.sleep(2) 等待 self.picture获取图片内容</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>identification_frequency<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token string">'0'</span><span class="token punctuation">:</span>                    <span class="token keyword">break</span>                <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>identification_frequency<span class="token punctuation">)</span>                    img <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>                      <span class="token comment" spellcheck="true"># print(img)</span>                    <span class="token comment" spellcheck="true"># 调用模型</span>                    results <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>img<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">640</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true"># 获取到图片画框json数据</span>                    results_objectrecognition <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>results<span class="token punctuation">.</span>pandas<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>xyxy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_json<span class="token punctuation">(</span>orient<span class="token operator">=</span><span class="token string">"records"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>results_objectrecognition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token comment" spellcheck="true"># 这里面有多个</span>                        <span class="token comment" spellcheck="true"># 取出每个对象返回的 json 结果</span>                        name <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>                        <span class="token comment" spellcheck="true"># confidence_result是浮点型数据</span>                        confidence_result <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'confidence'</span><span class="token punctuation">]</span>                        xmin <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmin'</span><span class="token punctuation">]</span>                        ymin <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymin'</span><span class="token punctuation">]</span>                        xmax <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmax'</span><span class="token punctuation">]</span>                        ymax <span class="token operator">=</span> results_objectrecognition<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymax'</span><span class="token punctuation">]</span>                        <span class="token comment" spellcheck="true"># 把这四个做标转换为x,y,width,height</span>                        x <span class="token operator">=</span> int<span class="token punctuation">(</span>xmin<span class="token punctuation">)</span>                        y <span class="token operator">=</span>  int<span class="token punctuation">(</span>ymin<span class="token punctuation">)</span>                        w <span class="token operator">=</span>  int<span class="token punctuation">(</span>xmax<span class="token operator">-</span>xmin<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                        h <span class="token operator">=</span>  int<span class="token punctuation">(</span>ymax<span class="token operator">-</span>ymin<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'置信度是%s'</span><span class="token operator">%</span>confidence_result<span class="token punctuation">)</span>                        <span class="token keyword">if</span> confidence_result <span class="token operator">>=</span> float<span class="token punctuation">(</span>self<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span><span class="token punctuation">:</span>                            <span class="token triple-quoted-string string">"""                            将目标图片写入到存放违规图片的文件夹                            """</span>                            <span class="token comment" spellcheck="true"># 画框</span>                            pic<span class="token operator">=</span> cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> w<span class="token punctuation">,</span> y <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true"># cv2.putText(picture)</span>                            <span class="token comment" spellcheck="true"># 添加中文显示</span>                            <span class="token comment" spellcheck="true"># image,strs,local(图片的坐标),sizes,color </span>                            pic <span class="token operator">=</span> self<span class="token punctuation">.</span>change_cv2_draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">,</span><span class="token string">"%s %.2s%%"</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token punctuation">,</span>confidence_result<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">,</span>y<span class="token number">-5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true"># 将画好的图片赋值给self.picture 这个全局变量</span>                            <span class="token comment" spellcheck="true"># for i in range(100):</span>                            self<span class="token punctuation">.</span>picture <span class="token operator">=</span> pic                            <span class="token comment" spellcheck="true"># cv2.imwrite('target_images/2.jpg',self.picture)</span>                            <span class="token comment" spellcheck="true"># cv2.imwrite("%s/'%s'.jpg"%('target_images',time.strftime('%Y-%m-%d-%H:%M:%S',time.localtime(time.time()))),self.picture)</span>                            self<span class="token punctuation">.</span>save_images<span class="token punctuation">(</span><span class="token string">'target_images'</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 调用kafka发送错误消息</span>            kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string <span class="token operator">+</span> <span class="token string">'视频取帧识别保存出错'</span><span class="token punctuation">)</span>                              <span class="token triple-quoted-string string">"""推流"""</span>    <span class="token comment" spellcheck="true"># rtmp_url是推流的地址,rtmp_fps是推流的fps,widht和height是推流图像的分辨率（宽和高）</span>    <span class="token keyword">def</span> <span class="token function">push_stream</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>rtmp_url<span class="token punctuation">,</span>rtmp_fps<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># time.sleep(2) 等待 self.picture获取图片内容</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># command定义</span>        command <span class="token operator">=</span> <span class="token punctuation">[</span>r<span class="token string">'C:\Users\15256\Downloads\2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared\ffmpeg-4.4.1-full_build-shared\bin\ffmpeg.exe'</span><span class="token punctuation">,</span>        <span class="token string">'-y'</span><span class="token punctuation">,</span>        <span class="token string">'-f'</span><span class="token punctuation">,</span> <span class="token string">'rawvideo'</span><span class="token punctuation">,</span>        <span class="token string">'-vcodec'</span><span class="token punctuation">,</span> <span class="token string">'rawvideo'</span><span class="token punctuation">,</span>        <span class="token string">'-pix_fmt'</span><span class="token punctuation">,</span> <span class="token string">'bgr24'</span><span class="token punctuation">,</span>        <span class="token string">'-s'</span><span class="token punctuation">,</span> <span class="token string">"&amp;#123;&amp;#125;x&amp;#123;&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'-r'</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>rtmp_fps<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'-i'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span>        <span class="token string">'-c:v'</span><span class="token punctuation">,</span> <span class="token string">'libx264'</span><span class="token punctuation">,</span>        <span class="token string">'-pix_fmt'</span><span class="token punctuation">,</span> <span class="token string">'yuv420p'</span><span class="token punctuation">,</span>        <span class="token string">'-preset'</span><span class="token punctuation">,</span> <span class="token string">'ultrafast'</span><span class="token punctuation">,</span>        <span class="token string">'-f'</span><span class="token punctuation">,</span> <span class="token string">'flv'</span><span class="token punctuation">,</span>        rtmp_url<span class="token punctuation">]</span>        pipe <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>command<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>  stdin<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>rtmp_fps<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s在推流中'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># status 状态判断</span>                <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'0'</span> <span class="token punctuation">:</span>                    pipe<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 关闭输入管道</span>                    <span class="token comment" spellcheck="true"># pipe.communicate()  # 等待子进程关闭</span>                    <span class="token keyword">break</span>                                    <span class="token keyword">elif</span> self<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                    pipe<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 调用kafka发送错误消息</span>            kafka_producer<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s推流出错了'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">)</span>                          <span class="token triple-quoted-string string">"""保存图片 方法"""</span>    <span class="token comment" spellcheck="true"># save_path就是需要将 BGR 通道流的图片保存位置</span>    <span class="token keyword">def</span> <span class="token function">save_images</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 获取当前时间的字符串</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"%s/%s_(%s).jpg"</span><span class="token operator">%</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span>now<span class="token punctuation">,</span>self<span class="token punctuation">.</span>obj_name_string<span class="token punctuation">)</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>picture<span class="token punctuation">)</span>                    <span class="token triple-quoted-string string">"""通过kafka 做一个对象开关的方法"""</span>    <span class="token keyword">def</span> <span class="token function">obj_status</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># kafka_consumer(group_id,server_ip,topic,value_key</span>            <span class="token keyword">if</span>  kafka_consumer<span class="token punctuation">(</span>server_ip<span class="token punctuation">,</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>type<span class="token operator">+</span>self<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'status'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'0'</span>                <span class="token comment" spellcheck="true"># # 关闭重启方法</span>                <span class="token comment" spellcheck="true"># kafka_producer(&amp;#123;'error_status':'1'&amp;#125;,server_ip,(self.type+self.id))</span>                self<span class="token punctuation">.</span>__del__                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'对象'</span><span class="token operator">+</span> self<span class="token punctuation">.</span>obj_name_string<span class="token operator">+</span><span class="token string">'已经删除'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token triple-quoted-string string">"""通过kafka 做一个对象自动重新启动 的方法"""</span>    <span class="token comment" spellcheck="true"># # interface_url是接口地址,data 是传入的json数据</span>    <span class="token comment" spellcheck="true"># def obj_restart(self,interface_url,data):</span>    <span class="token comment" spellcheck="true">#     while True:</span>    <span class="token comment" spellcheck="true">#         if kafka_consumer((self.type+self.id),server_ip,(self.type+self.id),'error_status') == '1':</span>    <span class="token comment" spellcheck="true">#             if self.status == '1':</span>    <span class="token comment" spellcheck="true">#                 # print(self.obj_name_string + '准备重启')</span>    <span class="token comment" spellcheck="true">#                 # 发送关闭消息给kafka</span>    <span class="token comment" spellcheck="true">#                 kafka_producer(&amp;#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>    <span class="token comment" spellcheck="true">#                 # time.sleep(10)</span>    <span class="token comment" spellcheck="true">#                 # if (requests.post(url=interface_url, data= json.dumps(data))).json()['result'] == '1':</span>    <span class="token comment" spellcheck="true">#                 #     print(self.obj_name_string + '重启成功')</span>    <span class="token comment" spellcheck="true">#                 # else:</span>    <span class="token comment" spellcheck="true">#                 #     print('接口错误')</span>    <span class="token comment" spellcheck="true">#             elif self.status == '0':</span>    <span class="token comment" spellcheck="true">#                 break</span>    <span class="token comment" spellcheck="true"># 'path' : 'path',  </span>    <span class="token comment" spellcheck="true"># 'id' :'4',</span>    <span class="token comment" spellcheck="true"># 'type':'smoke',</span>    <span class="token comment" spellcheck="true"># 'status':'0',</span>    <span class="token comment" spellcheck="true"># 'confidence': '0.3'</span>    <span class="token comment" spellcheck="true"># interface_url是传入的url, data是传入的json数据, monitor_time是监听时间,server_ip是kafka服务器ip，topic是</span>    <span class="token comment" spellcheck="true"># def obj_restart(self,interface_url,data,monitor_time):</span>    <span class="token comment" spellcheck="true">#     while True:</span>    <span class="token comment" spellcheck="true">#         # 监听对象状态异常的延迟时间</span>    <span class="token comment" spellcheck="true">#         time.sleep(monitor_time)</span>    <span class="token comment" spellcheck="true">#         print('%s错误状态监听中'%(self.obj_name_string))</span>    <span class="token comment" spellcheck="true">#         # 监听时间判断status状态</span>    <span class="token comment" spellcheck="true">#         if self.status == '0':</span>    <span class="token comment" spellcheck="true">#             print(self.obj_name_string + '已经关闭')</span>    <span class="token comment" spellcheck="true">#             break</span>    <span class="token comment" spellcheck="true">#         elif self.status == '1':</span>    <span class="token comment" spellcheck="true">#             # 监听完成后判断 status状态</span>    <span class="token comment" spellcheck="true">#             if self.error_value == '1':</span>    <span class="token comment" spellcheck="true">#                 # 发送一条信息给kafka心跳接口，实现心跳接口线程关闭</span>    <span class="token comment" spellcheck="true">#                 kafka_producer(&amp;#123;'status':'0'&amp;#125;,server_ip,(self.type+self.id))</span>    <span class="token comment" spellcheck="true">#                 # print(self.obj_name_string+ '准备重启')</span>    <span class="token comment" spellcheck="true">#                 # if (requests.post(url=interface_url, data= json.dumps(data))).json()['result'] == '1':</span>    <span class="token comment" spellcheck="true">#                 #     print(self.obj_name_string + '重启成功')</span>    <span class="token comment" spellcheck="true">#                 #     # 等待别的进程全部关闭</span>    <span class="token comment" spellcheck="true">#                 #     time.sleep(15)</span>    <span class="token comment" spellcheck="true">#                 # else:</span>    <span class="token comment" spellcheck="true">#                 #     print('请求接口失败，服务关闭')</span>                                <span class="token triple-quoted-string string">"""定义一个可以在图片上添加中文的方法"""</span>    <span class="token comment" spellcheck="true"># 吸烟 %.2s%%"%(confidence_result*100),(x+w+5,y-5),30,(255,0,0))</span>    <span class="token comment" spellcheck="true"># image是图片 strs是中文汉字 local是做标 size 是字体尺寸 colour是颜色的RGB码</span>    <span class="token keyword">def</span> <span class="token function">change_cv2_draw</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image<span class="token punctuation">,</span>strs<span class="token punctuation">,</span>local<span class="token punctuation">,</span>sizes<span class="token punctuation">,</span>colour<span class="token punctuation">)</span><span class="token punctuation">:</span>        cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>        pilimg <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2img<span class="token punctuation">)</span>        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>pilimg<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 图片上打印</span>        font <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">"SIMYOU.TTF"</span><span class="token punctuation">,</span>sizes<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span>local<span class="token punctuation">,</span> strs<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> font<span class="token operator">=</span>font<span class="token punctuation">)</span>        image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pilimg<span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>        <span class="token keyword">return</span> image    <span class="token triple-quoted-string string">"""这是一个使用多线程的类"""</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true"># class Test():</span><span class="token comment" spellcheck="true">#     def __init__(self) -> None:</span><span class="token comment" spellcheck="true">#         self.ab = 5</span><span class="token comment" spellcheck="true">#     def __del__(self):</span><span class="token comment" spellcheck="true">#         print('线程删除成功')</span><span class="token comment" spellcheck="true">#     def test1(self,a,b,c):</span><span class="token comment" spellcheck="true">#         while True:</span><span class="token comment" spellcheck="true">#             time.sleep(2)</span><span class="token comment" spellcheck="true">#             self.ab = self.ab +1</span><span class="token comment" spellcheck="true">#             print('test1')</span><span class="token comment" spellcheck="true">#             print(self.ab)</span>            <span class="token comment" spellcheck="true">#     def test2(self,a,b,c):</span><span class="token comment" spellcheck="true">#         while True:</span><span class="token comment" spellcheck="true">#             time.sleep(1)</span><span class="token comment" spellcheck="true">#             self.ab =self.ab-1</span><span class="token comment" spellcheck="true">#             print(self.ab)</span><span class="token comment" spellcheck="true">#             print('test2')</span><span class="token comment" spellcheck="true">#     def test3(self):</span><span class="token comment" spellcheck="true">#         time.sleep(3)</span><span class="token comment" spellcheck="true">#         self.__del__()</span><span class="token comment" spellcheck="true">#         print('对象删除完成')</span><span class="token comment" spellcheck="true"># at = Test()</span><span class="token comment" spellcheck="true"># def t(a,b,c):</span><span class="token comment" spellcheck="true">#     print('hello word')</span><span class="token comment" spellcheck="true"># # a.test2(1,2,3)</span><span class="token comment" spellcheck="true"># MyThread(at.test1,args=(1, 2,5,)).start()</span><span class="token comment" spellcheck="true"># MyThread(at.test2,args=(1, 2,5,)).start()</span><span class="token comment" spellcheck="true"># MyThread(at.test3,args=()).start()</span><span class="token comment" spellcheck="true"># t1.start()</span><span class="token comment" spellcheck="true"># t2.start()</span><span class="token comment" spellcheck="true"># time.sleep(2)</span><span class="token comment" spellcheck="true"># t1.join()</span><span class="token comment" spellcheck="true"># t2.join()</span><span class="token comment" spellcheck="true"># a = 2</span><span class="token comment" spellcheck="true"># def add():</span><span class="token comment" spellcheck="true">#     global a</span><span class="token comment" spellcheck="true">#     while True:</span><span class="token comment" spellcheck="true">#         time.sleep(5)</span><span class="token comment" spellcheck="true">#         a = a+1</span>    <span class="token comment" spellcheck="true">#         print(a)</span><span class="token comment" spellcheck="true"># def sum():</span><span class="token comment" spellcheck="true">#     global a</span><span class="token comment" spellcheck="true">#     while True:</span><span class="token comment" spellcheck="true">#         time.sleep(10)</span>        <span class="token comment" spellcheck="true">#         a = a-1</span><span class="token comment" spellcheck="true">#         print(a)</span><span class="token comment" spellcheck="true"># MyThread(add,args=()).start()</span><span class="token comment" spellcheck="true"># MyThread(sum,args=()).start()</span></code></pre><p><code># 4. kafka_listen_4.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducer<span class="token keyword">import</span> json<span class="token triple-quoted-string string">"""data = &amp;#123;'value_1' : 'value_2'&amp;#125;producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'], value_serializer=lambda m: json.dumps(m).encode())future = producer.send('my' ,  value=data , partition= 0)future.get(timeout= 3)"""</span><span class="token triple-quoted-string string">"""server_ip 是服务器ip+端口的形式 ip:port 这里为了保证唯一将topic 和 group_id设置成一样的"""</span><span class="token keyword">def</span> <span class="token function">kafka_producer</span><span class="token punctuation">(</span>producer_data<span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">)</span><span class="token punctuation">:</span>    producer <span class="token operator">=</span> KafkaProducer<span class="token punctuation">(</span>bootstrap_servers<span class="token operator">=</span><span class="token punctuation">[</span>server_ip<span class="token punctuation">]</span><span class="token punctuation">,</span> value_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> m<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    future <span class="token operator">=</span> producer<span class="token punctuation">.</span>send<span class="token punctuation">(</span>topic<span class="token punctuation">,</span>  value<span class="token operator">=</span>producer_data <span class="token punctuation">,</span> partition<span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    future<span class="token punctuation">.</span>get<span class="token punctuation">(</span>timeout<span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">kafka_consumer</span><span class="token punctuation">(</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">,</span>value_key<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># consumer_timeout_ms=1000</span>    <span class="token comment" spellcheck="true"># consumer = KafkaConsumer(topic,group_id = group_id, bootstrap_servers= [server_ip], auto_offset_reset='latest',enable_auto_commit = True,</span>    <span class="token comment" spellcheck="true"># auto_commit_interval_ms = 1,value_deserializer=lambda m: json.loads(m.decode('ascii')))</span>    consumer <span class="token operator">=</span> KafkaConsumer<span class="token punctuation">(</span>topic<span class="token punctuation">,</span>    bootstrap_servers<span class="token operator">=</span> <span class="token punctuation">[</span>server_ip<span class="token punctuation">]</span><span class="token punctuation">,</span>    value_deserializer<span class="token operator">=</span><span class="token keyword">lambda</span> m<span class="token punctuation">:</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>m<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> msg <span class="token keyword">in</span> consumer<span class="token punctuation">:</span>        dic <span class="token operator">=</span> eval<span class="token punctuation">(</span>str<span class="token punctuation">(</span>msg<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> dic<span class="token punctuation">[</span>value_key<span class="token punctuation">]</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>    </code></pre><p><code># 5. post_request_text.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://localhost:5000/gttx/objectrecognition"</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span>information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span>                <span class="token string">'id'</span> <span class="token punctuation">:</span><span class="token string">'3'</span><span class="token punctuation">,</span>                <span class="token string">'type'</span><span class="token punctuation">:</span><span class="token string">'smoke'</span><span class="token punctuation">,</span>                <span class="token string">'status'</span><span class="token punctuation">:</span><span class="token string">'1'</span><span class="token punctuation">,</span>                <span class="token string">'confidence'</span><span class="token punctuation">:</span> <span class="token string">'0.5'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 数据打包传输</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span> data<span class="token operator">=</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(response)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'result'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><p><code># 6. requirements.txt分析</code></p><pre class=" language-python"><code class="language-python">absl<span class="token operator">-</span>py<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">0</span>cachetools<span class="token operator">==</span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">4</span>certifi<span class="token operator">==</span><span class="token number">2021.10</span><span class="token punctuation">.</span><span class="token number">8</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>cycler<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">0</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>fonttools<span class="token operator">==</span><span class="token number">4.28</span><span class="token punctuation">.</span><span class="token number">1</span>google<span class="token operator">-</span>auth<span class="token operator">==</span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">3</span>google<span class="token operator">-</span>auth<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">6</span>grpcio<span class="token operator">==</span><span class="token number">1.42</span><span class="token punctuation">.</span><span class="token number">0</span>idna<span class="token operator">==</span><span class="token number">3.3</span>importlib<span class="token operator">-</span>metadata<span class="token operator">==</span><span class="token number">4.8</span><span class="token punctuation">.</span><span class="token number">2</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>kafka<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>kiwisolver<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">2</span>Markdown<span class="token operator">==</span><span class="token number">3.3</span><span class="token punctuation">.</span><span class="token number">6</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>matplotlib<span class="token operator">==</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">0</span>numpy<span class="token operator">==</span><span class="token number">1.21</span><span class="token punctuation">.</span><span class="token number">4</span>oauthlib<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>opencv<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.58</span>packaging<span class="token operator">==</span><span class="token number">21.2</span>pandas<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">4</span>Pillow<span class="token operator">==</span><span class="token number">8.4</span><span class="token punctuation">.</span><span class="token number">0</span>protobuf<span class="token operator">==</span><span class="token number">3.19</span><span class="token punctuation">.</span><span class="token number">1</span>pyasn1<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">8</span>pyasn1<span class="token operator">-</span>modules<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">8</span>pyparsing<span class="token operator">==</span><span class="token number">2.4</span><span class="token punctuation">.</span><span class="token number">7</span>python<span class="token operator">-</span>dateutil<span class="token operator">==</span><span class="token number">2.8</span><span class="token punctuation">.</span><span class="token number">2</span>pytz<span class="token operator">==</span><span class="token number">2021.3</span>PyYAML<span class="token operator">==</span><span class="token number">6.0</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span>rsa<span class="token operator">==</span><span class="token number">4.7</span><span class="token punctuation">.</span><span class="token number">2</span>scipy<span class="token operator">==</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">2</span>seaborn<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">2</span>setuptools<span class="token operator">-</span>scm<span class="token operator">==</span><span class="token number">6.3</span><span class="token punctuation">.</span><span class="token number">2</span>six<span class="token operator">==</span><span class="token number">1.16</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">==</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">-</span>data<span class="token operator">-</span>server<span class="token operator">==</span><span class="token number">0.6</span><span class="token punctuation">.</span><span class="token number">1</span>tensorboard<span class="token operator">-</span>plugin<span class="token operator">-</span>wit<span class="token operator">==</span><span class="token number">1.8</span><span class="token punctuation">.</span><span class="token number">0</span>thop<span class="token operator">==</span><span class="token number">0.0</span><span class="token punctuation">.</span><span class="token number">31.</span>post2005241907tomli<span class="token operator">==</span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">2</span>torch<span class="token operator">==</span><span class="token number">1.10</span><span class="token punctuation">.</span><span class="token number">0</span>torchvision<span class="token operator">==</span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">1</span>tqdm<span class="token operator">==</span><span class="token number">4.62</span><span class="token punctuation">.</span><span class="token number">3</span>typing_extensions<span class="token operator">==</span><span class="token number">4.0</span><span class="token punctuation">.</span><span class="token number">0</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>zipp<span class="token operator">==</span><span class="token number">3.6</span><span class="token punctuation">.</span><span class="token number">0</span></code></pre><p><code># 7. kafka_consumer.py分析（测试）</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment" spellcheck="true"># 调用测试</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span>topic <span class="token operator">=</span> <span class="token string">'smoke3'</span>value_key <span class="token operator">=</span> <span class="token string">'status0'</span><span class="token comment" spellcheck="true"># 消息消费</span><span class="token comment" spellcheck="true"># while True:</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>kafka_consumer<span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">,</span>value_key<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">break</span>      </code></pre><p><code># 8. kafka_producer.py分析（测试）</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka_listen_4 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token triple-quoted-string string">"""调用测试"""</span>server_ip <span class="token operator">=</span> <span class="token string">'183.131.192.8:9092'</span>producer_data <span class="token operator">=</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'status0':'2434'&amp;#125;</span>topic <span class="token operator">=</span> <span class="token string">'smoke3'</span><span class="token comment" spellcheck="true"># key_value = 'status1'</span><span class="token comment" spellcheck="true"># 消息生产</span>kafka_producer<span class="token punctuation">(</span>producer_data<span class="token punctuation">,</span>server_ip<span class="token punctuation">,</span>topic<span class="token punctuation">)</span></code></pre><p><code># 9. test（用于测试一些写法）.py分析（测试）</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaConsumer<span class="token punctuation">,</span>KafkaProducer<span class="token keyword">import</span> json<span class="token keyword">import</span> cv2<span class="token keyword">import</span> time<span class="token comment" spellcheck="true"># consumer = KafkaConsumer('my_topic', group_id= 'group2', bootstrap_servers= ['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># for msg in consumer:</span><span class="token comment" spellcheck="true">#     print(msg)</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># future = producer.send('my_topic' , key= b'my_key', value= b'my_value', partition= 0)</span><span class="token comment" spellcheck="true"># result = future.get(timeout= 10)</span><span class="token comment" spellcheck="true"># print(result)</span><span class="token comment" spellcheck="true"># consumer = KafkaConsumer('my_topic', group_id= 'group2', bootstrap_servers= ['localhost:9092'])</span><span class="token triple-quoted-string string">"""生成端"""</span><span class="token comment" spellcheck="true"># data = json.dumps(&amp;#123;'id':'id','status':'status'&amp;#125;).encode()</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># future = producer.send('test' , data, partition= 0)</span><span class="token comment" spellcheck="true"># result = future.get(timeout= 10)</span><span class="token comment" spellcheck="true"># print(result)</span><span class="token comment" spellcheck="true"># data = &amp;#123;'value_1' : 'value_2'&amp;#125;</span><span class="token comment" spellcheck="true"># producer = KafkaProducer(bootstrap_servers=['183.131.192.8:9092'], value_serializer=lambda m: json.dumps(m).encode())</span><span class="token comment" spellcheck="true"># future = producer.send('my' ,  value=data , partition= 0)</span><span class="token comment" spellcheck="true"># future.get(timeout= 3)</span><span class="token triple-quoted-string string">"""消费者"""</span><span class="token comment" spellcheck="true"># consumer = KafkaConsumer('test', bootstrap_servers= ['183.131.192.8:9092'])</span><span class="token comment" spellcheck="true"># for msg in consumer:</span><span class="token comment" spellcheck="true">#     # print(msg)</span><span class="token comment" spellcheck="true">#     print('---------')</span><span class="token comment" spellcheck="true">#     print(msg)</span><span class="token comment" spellcheck="true">#     print('------------')</span><span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> json<span class="token keyword">import</span> torch<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">from</span> torch<span class="token punctuation">.</span>_C <span class="token keyword">import</span> device<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token comment" spellcheck="true"># 相对路径的方式导入mymodes下的yolov5s1.pt这个模型</span><span class="token comment" spellcheck="true"># model = torch.hub.load('./yolov5', 'custom', path='models/smoke.pt', source='local') </span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'http://nvr.secserv.top:10800/flv/hls/stream_3.flv'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图片的宽设置</span>width <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图像的高设置</span>height <span class="token operator">=</span> int<span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>video_fps <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello word'</span><span class="token punctuation">)</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># time.sleep(1/video_fps)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> ret<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"打开视频源失败"</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">,</span>frame<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># picture = Image.fromarray(cv2.cvtColor(frame,cv2.COLOR_BGR2RGB)) </span>    <span class="token comment" spellcheck="true"># results = model(picture, size=640)</span>    <span class="token comment" spellcheck="true"># print(results)</span>    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5 </tag>
            
            <tag> 视频推流 </tag>
            
            <tag> 视频目标物截图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站备案信息查询脚本</title>
      <link href="/2021/112912177.html"/>
      <url>/2021/112912177.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/web_scan_screenshot.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载网站备案查询和网页截图</a></p><h3 id="v1-0版本"><a href="#v1-0版本" class="headerlink" title="v1.0版本"></a>v1.0版本</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> ssl <span class="token keyword">import</span> cert_time_to_seconds<span class="token keyword">import</span> requests<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> time<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">import</span> threading<span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_url_informatin</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        url_all<span class="token operator">=</span><span class="token string">'https://icp.chinaz.com/home/info?host='</span> <span class="token operator">+</span> url        heards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.4; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2224.3 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 4.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2117.157 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1866.237 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/4E423F"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1623.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.17 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.62 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 4319.74.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.57 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.2 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1468.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1464.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1500.55 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.90 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; NetBSD) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.60 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.15 (KHTML, like Gecko) Chrome/24.0.1295.0 Safari/537.15"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.14 (KHTML, like Gecko) Chrome/24.0.1292.0 Safari/537.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.0; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.02"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-sg) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.2;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.1;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) Gecko/20100101 Firefox/14.0 Opera/12.0"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; WOW64; U; pt) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; de) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.9.168 Version/11.51"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; de) Opera 11.51"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; fr) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; es-ES) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/5.0 Opera 11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; bg) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.99 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-tw) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; Opera Tablet/15165; U; en) Presto/2.8.149 Version/11.1"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; Ubuntu/10.10 (maverick); pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ja) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; fr) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; sv) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-US) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101213 Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; nl; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; it) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.6.37 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; ko) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; fi) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-GB) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1 x64; U; en) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span>             <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.7.39 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20130401 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/29.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; OpenBSD amd64; rv:28.0) Gecko/20100101 Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:27.3) Gecko/20130101 Firefox/27.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:27.0) Gecko/20121011 Firefox/27.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:23.0) Gecko/20131011 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:22.0) Gecko/20130328 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Microsoft Windows NT 6.2.9200.0); rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:21.0.0) Gecko/20121011 Firefox/21.0.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux i686; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20130514 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:21.0) Gecko/20130326 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130330 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130328 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.0; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64;) Gecko/20100101 Firefox/20.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows x86; rv:19.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/18.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0)  Gecko/20100101 Firefox/18.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100101 Firefox/17.0.6"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko ) Version/5.1 Mobile/9B176 Safari/7534.48.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; da-dk) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; tr-TR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ko-KR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; fr-FR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs-CZ) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; sv-se) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ko-kr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-fr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; es-es) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-gb) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; de-de) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu-HU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; it-IT) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-ch) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; de-de) AppleWebKit/534.15+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; ar) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; tr-TR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; nb-NO) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; fr-FR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; zh-cn) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 7.0; InfoPath.3; .NET CLR 3.1.40767; Trident/6.0; en-IN)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/4.0; InfoPath.2; SV1; .NET CLR 2.0.50727; WOW64)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/1.22 (compatible; MSIE 10.0; Windows 3.1)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; WIndows NT 9.0; en-US))"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; InfoPath.3; MS-RTC LM 8; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; chromeframe/12.0.742.112)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                    <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; yie8)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET CLR 1.1.4322; .NET4.0C; Tablet PC 2.0)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/13.0.782.215)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0) chromeframe/10.0.648.205"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.1; SV1; .NET CLR 2.8.52393; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.1.76908; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.8.36217; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; .NET CLR 2.7.58687; SLCC2; Media Center PC 5.0; Zune 3.4; Tablet PC 3.6; InfoPath.3)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; Media Center PC 4.0; SLCC1; .NET CLR 3.0.04320)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; SLCC1; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 3.0.04506.30)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.0; Trident/4.0; FBSMTWB; .NET CLR 2.0.34861; .NET CLR 3.0.3746.3218; .NET CLR 3.5.33652; msn OptimizedIE8;ENUS)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; Media Center PC 6.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.3; .NET4.0C; .NET4.0E; .NET CLR 3.5.30729; .NET CLR 3.0.30729; MS-RTC LM 8)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 3.0)"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/536.26.17 (KHTML like Gecko) Version/6.0.2 Safari/536.26.17"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.4 (KHTML, like Gecko) Chrome/4.0.237.0 Safari/532.4 Debian"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Android; Linux armv7l; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1"</span><span class="token punctuation">,</span>            <span class="token string">"SEC-SGHX210/1.0 UP.Link/6.3.1.13.0"</span><span class="token punctuation">,</span>            <span class="token string">"Opera/9.80 (X11; FreeBSD 8.1-RELEASE i386; Edition Next) Presto/2.12.388 Version/12.10"</span><span class="token punctuation">]</span>        header <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'user-Agent'</span><span class="token punctuation">:</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>heards_list<span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span> url_all<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#requests模块会自动解码来自服务器的内容，可以使用res.encoding来查看编码</span>        html<span class="token operator">=</span>res<span class="token punctuation">.</span>text        html <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取公司名字</span>        company_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"ztInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        certificate_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        website_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> website_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> certificate_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> website_name  <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该'</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">'网站的信息'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'0'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>certificate_name<span class="token punctuation">,</span>website_name<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">'company_name'</span><span class="token punctuation">:</span> company_name<span class="token punctuation">,</span>                <span class="token string">'certificate_name'</span><span class="token punctuation">:</span>certificate_name<span class="token punctuation">,</span>                <span class="token string">'website_name'</span><span class="token punctuation">:</span>website_name            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'连接中断，重新发送请求中'</span><span class="token punctuation">)</span>        get_url_informatin<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 查询check_certificate</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    domains_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    sql <span class="token operator">=</span> <span class="token string">"SELECT domain FROM check_certificate"</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> results<span class="token punctuation">:</span>            domains_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'domains_list'</span><span class="token punctuation">:</span>domains_list        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token comment" spellcheck="true"># name 是网站名字</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 表单是 check_certificate company_name 后面没有逗号！！！！</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE check_certificate SET certificate = '%s', name = '%s',company_name = '%s' WHERE domain = '%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>domain <span class="token operator">+</span> <span class="token string">'更新成功'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#   return &amp;#123;</span><span class="token comment" spellcheck="true">#                 'company_name': company_name,</span><span class="token comment" spellcheck="true">#                 'certificate_name':certificate_name,</span><span class="token comment" spellcheck="true">#                 'website_name':website_name</span><span class="token comment" spellcheck="true">#             &amp;#125;</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 获取网站列表</span>    domains_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'domains_list'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> domain <span class="token keyword">in</span> domains_list<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 做一个随机延迟</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>create_random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取从网站爬取到的信息</span>        get_url_result <span class="token operator">=</span> get_url_informatin<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 当返回值是0的时候不插入跳过</span>        <span class="token keyword">if</span> get_url_result <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            certificate <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'certificate_name'</span><span class="token punctuation">]</span>            name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'website_name'</span><span class="token punctuation">]</span>            company_name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'company_name'</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># print(type(domain))</span>            <span class="token comment" spellcheck="true"># 调用更新函数</span>            sql_update<span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'push'</span><span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># MyThread(main,args=()).start()</span></code></pre><h3 id="v2-0版本"><a href="#v2-0版本" class="headerlink" title="v2.0版本"></a>v2.0版本</h3><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""网站备案信息查询"""</span><span class="token keyword">from</span> ssl <span class="token keyword">import</span> cert_time_to_seconds<span class="token keyword">import</span> requests<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> time<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">import</span> threading<span class="token keyword">import</span> datetime<span class="token triple-quoted-string string">"""执行告警信息添加参数"""</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token comment" spellcheck="true"># company_name 公司名字,ip ip地址，domain域名,warn_content告警信息</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span>    <span class="token comment" spellcheck="true"># 数据创建时间</span>    created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 当company_name 为None时填入null到数据库</span>    <span class="token keyword">if</span> company_name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> company_name <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        company_name <span class="token operator">=</span> <span class="token string">'Null'</span>        sql <span class="token operator">=</span> "INSERT INTO check_certificate_warning<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span> \        ip<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>send_type<span class="token punctuation">,</span>type<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>        sql <span class="token operator">=</span> "INSERT INTO check_certificate_warning<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span> \        ip<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>send_type<span class="token punctuation">,</span>type<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>warn_content<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""执行check_cerficate_deatil添加函数"""</span><span class="token comment" spellcheck="true"># 存储合规和不合规，网站没有备案</span><span class="token keyword">def</span> <span class="token function">sql_execute_detail</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "INSERT INTO check_certificate_detail<span class="token punctuation">(</span>check_certificate_id<span class="token punctuation">,</span> \        scan_base<span class="token punctuation">)</span> \        VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \        <span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>scan_base<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_url_informatin</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        url_all<span class="token operator">=</span><span class="token string">'https://icp.chinaz.com/home/info?host='</span> <span class="token operator">+</span> url        heards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.4; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2224.3 Safari/537.36"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 4.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2049.0 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2117.157 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1866.237 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/4E423F"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1664.3 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1623.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.17 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.62 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 4319.74.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.57 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.2 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1468.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1464.0 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1500.55 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.90 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; NetBSD) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.60 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.15 (KHTML, like Gecko) Chrome/24.0.1295.0 Safari/537.15"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.14 (KHTML, like Gecko) Chrome/24.0.1292.0 Safari/537.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.0; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.02"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-sg) Presto/2.9.181 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.2;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/12.0(Windows NT 5.1;U;en)Presto/22.9.168 Version/12.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1) Gecko/20100101 Firefox/14.0 Opera/12.0"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; WOW64; U; pt) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.10.229 Version/11.62"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; de) Presto/2.9.168 Version/11.52"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.9.168 Version/11.51"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; de) Opera 11.51"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; fr) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; es-ES) Presto/2.8.131 Version/11.11"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/5.0 Opera 11.11"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; bg) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.99 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; zh-tw) Presto/2.8.131 Version/11.10"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; Opera Tablet/15165; U; en) Presto/2.8.149 Version/11.1"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; Ubuntu/10.10 (maverick); pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; ja) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; fr) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; sv) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-US) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 5.1; U; cs) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101213 Opera/9.80 (Windows NT 6.1; U; zh-tw) Presto/2.7.62 Version/11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; nl; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux x86_64; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (X11; Linux i686; U; it) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.6.37 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; pl) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; ko) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; fi) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1; U; en-GB) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Opera/9.80 (Windows NT 6.1 x64; U; en) Presto/2.7.62 Version/11.00"</span><span class="token punctuation">,</span>             <span class="token string">"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.7.39 Version/11.00"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20130401 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/29.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; OpenBSD amd64; rv:28.0) Gecko/20100101 Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:27.3) Gecko/20130101 Firefox/27.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:27.0) Gecko/20121011 Firefox/27.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:23.0) Gecko/20131011 Firefox/23.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:22.0) Gecko/20130328 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Microsoft Windows NT 6.2.9200.0); rv:22.0) Gecko/20130405 Firefox/22.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/21.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:21.0.0) Gecko/20121011 Firefox/21.0.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Linux i686; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20130514 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; rv:21.0) Gecko/20130326 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130330 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130328 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130401 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 5.0; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.2; Win64; x64;) Gecko/20100101 Firefox/20.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows x86; rv:19.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/19.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/18.0.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0)  Gecko/20100101 Firefox/18.0"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100101 Firefox/17.0.6"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko ) Version/5.1 Mobile/9B176 Safari/7534.48.3"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; da-dk) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; tr-TR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ko-KR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; fr-FR) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs-CZ) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_8; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; zh-cn) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; sv-se) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ko-kr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; it-it) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-fr) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; es-es) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-gb) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; de-de) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu-HU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; de-DE) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; it-IT) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; fr-ch) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>             <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; de-de) AppleWebKit/534.15+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; ar) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; tr-TR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; nb-NO) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 6.0; fr-FR) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; zh-cn) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 7.0; InfoPath.3; .NET CLR 3.1.40767; Trident/6.0; en-IN)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/4.0; InfoPath.2; SV1; .NET CLR 2.0.50727; WOW64)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/1.22 (compatible; MSIE 10.0; Windows 3.1)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; WIndows NT 9.0; en-US))"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; InfoPath.3; MS-RTC LM 8; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; chromeframe/12.0.742.112)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                 <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span><span class="token punctuation">,</span>                <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)"</span><span class="token punctuation">,</span>                    <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; yie8)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET CLR 1.1.4322; .NET4.0C; Tablet PC 2.0)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/13.0.782.215)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0) chromeframe/10.0.648.205"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.1; SV1; .NET CLR 2.8.52393; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)"</span><span class="token punctuation">,</span>                     <span class="token string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.1.76908; WOW64; en-US)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.8.36217; WOW64; en-US)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; .NET CLR 2.7.58687; SLCC2; Media Center PC 5.0; Zune 3.4; Tablet PC 3.6; InfoPath.3)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; Media Center PC 4.0; SLCC1; .NET CLR 3.0.04320)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; SLCC1; .NET CLR 1.1.4322)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.0; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 3.0.04506.30)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.0; Trident/4.0; FBSMTWB; .NET CLR 2.0.34861; .NET CLR 3.0.3746.3218; .NET CLR 3.5.33652; msn OptimizedIE8;ENUS)"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; Media Center PC 6.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.3; .NET4.0C; .NET4.0E; .NET CLR 3.5.30729; .NET CLR 3.0.30729; MS-RTC LM 8)"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)"</span><span class="token punctuation">,</span>         <span class="token string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 3.0)"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/536.26.17 (KHTML like Gecko) Version/6.0.2 Safari/536.26.17"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.4 (KHTML, like Gecko) Chrome/4.0.237.0 Safari/532.4 Debian"</span><span class="token punctuation">,</span>            <span class="token string">"Mozilla/5.0 (Android; Linux armv7l; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1"</span><span class="token punctuation">,</span>            <span class="token string">"SEC-SGHX210/1.0 UP.Link/6.3.1.13.0"</span><span class="token punctuation">,</span>            <span class="token string">"Opera/9.80 (X11; FreeBSD 8.1-RELEASE i386; Edition Next) Presto/2.12.388 Version/12.10"</span><span class="token punctuation">]</span>        header <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'user-Agent'</span><span class="token punctuation">:</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>heards_list<span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span> url_all<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#requests模块会自动解码来自服务器的内容，可以使用res.encoding来查看编码</span>        html<span class="token operator">=</span>res<span class="token punctuation">.</span>text        html <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取公司名字</span>        company_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"ztInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        certificate_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        website_name <span class="token operator">=</span> html<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"siteInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># if website_name == '--' or certificate_name == '--' or website_name  == '':</span>        <span class="token comment" spellcheck="true">#     print('没有该' + url + '网站的信息')</span>        <span class="token comment" spellcheck="true">#     return '0'</span>        <span class="token comment" spellcheck="true"># else:</span>        <span class="token comment" spellcheck="true">#     print(company_name,certificate_name,website_name)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'company_name'</span><span class="token punctuation">:</span> company_name<span class="token punctuation">,</span>            <span class="token string">'certificate_name'</span><span class="token punctuation">:</span>certificate_name<span class="token punctuation">,</span>            <span class="token string">'website_name'</span><span class="token punctuation">:</span>website_name        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'连接中断，重新发送请求中'</span><span class="token punctuation">)</span>        get_url_informatin<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                <span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 查询check_certificate</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    domains_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    ips_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    company_names_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM check_certificate"</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> results<span class="token punctuation">:</span>            domains_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            ips_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            company_names_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'domains_list'</span><span class="token punctuation">:</span>domains_list<span class="token punctuation">,</span>            <span class="token string">'ips_list'</span><span class="token punctuation">:</span>ips_list<span class="token punctuation">,</span>            <span class="token string">'company_names_list'</span><span class="token punctuation">:</span>company_names_list        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token comment" spellcheck="true"># name 是网站名字</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 表单是 check_certificate company_name 后面没有逗号！！！！</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE check_certificate SET certificate = '%s', name = '%s',company_name = '%s' WHERE domain = '%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>domain <span class="token operator">+</span> <span class="token string">'更新成功'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#   return &amp;#123;</span><span class="token comment" spellcheck="true">#                 'company_name': company_name,</span><span class="token comment" spellcheck="true">#                 'certificate_name':certificate_name,</span><span class="token comment" spellcheck="true">#                 'website_name':website_name</span><span class="token comment" spellcheck="true">#             &amp;#125;</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 获取网站列表</span>    domains_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'domains_list'</span><span class="token punctuation">]</span>    ips_list <span class="token operator">=</span> sql_select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'ips_list'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 获取列表长度</span>    length <span class="token operator">=</span> len<span class="token punctuation">(</span>domains_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 做一个随机延迟</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>create_random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取从网站爬取到的信息</span>        <span class="token comment" spellcheck="true"># 域名</span>        domain <span class="token operator">=</span> domains_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># print('-----------'+domain)</span>        <span class="token comment" spellcheck="true"># ip</span>        ip <span class="token operator">=</span> ips_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        get_url_result <span class="token operator">=</span> get_url_informatin<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 返回结果</span>        certificate <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'certificate_name'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'website_name'</span><span class="token punctuation">]</span>        company_name <span class="token operator">=</span> get_url_result<span class="token punctuation">[</span><span class="token string">'company_name'</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>        <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> certificate <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token operator">or</span> name  <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 添加告警信息</span>            sql_execute<span class="token punctuation">(</span>company_name<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>domain<span class="token punctuation">,</span><span class="token string">'没有该域名备案信息'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 存储合规和不合规，网站没有备案</span>            sql_execute_detail<span class="token punctuation">(</span>ip<span class="token punctuation">,</span><span class="token string">'没有该域名备案信息'</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print(type(domain))</span>            <span class="token triple-quoted-string string">"""更新存储表"""</span>            sql_update<span class="token punctuation">(</span>domains_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>certificate<span class="token punctuation">,</span>name<span class="token punctuation">,</span>company_name<span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># MyThread(main,args=()).start()</span>   </code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站备案信息查询脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python调用asrtv1.0的语音识别脏话接口</title>
      <link href="/2021/112915113.html"/>
      <url>/2021/112915113.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/python_asrt_Recognition.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载调用asrt识别脏话</a></p><p><code># 1. 项目代码相对位置</code></p><p>需要下载源码分析</p><p><code>2. asrserver.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用flask实现多进程调用</span><span class="token keyword">import</span> http<span class="token punctuation">.</span>server<span class="token keyword">import</span> urllib<span class="token keyword">import</span> socket<span class="token keyword">from</span> numpy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>numeric <span class="token keyword">import</span> Inf<span class="token keyword">from</span> numpy<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>npyio <span class="token keyword">import</span> save<span class="token keyword">from</span> speech_model <span class="token keyword">import</span> ModelSpeech<span class="token keyword">from</span> speech_model_zoo <span class="token keyword">import</span> SpeechModel251<span class="token keyword">from</span> speech_features <span class="token keyword">import</span> Spectrogram<span class="token keyword">from</span> LanguageModel2 <span class="token keyword">import</span> ModelLanguage<span class="token keyword">import</span> json<span class="token keyword">import</span> librosa<span class="token keyword">from</span> utils<span class="token punctuation">.</span>ops <span class="token keyword">import</span> read_wav_data<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">import</span> requests<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true"># 定义一个拿出敏感词库的函数</span><span class="token keyword">def</span> <span class="token function">read_txt</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>file <span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        list_data <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 关闭文件很重要</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> list_data<span class="token comment" spellcheck="true"># 定义一个语音识别函数</span><span class="token keyword">def</span> <span class="token function">video_to_word</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>company_id<span class="token punctuation">,</span>task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        file_path <span class="token operator">=</span> save_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now<span class="token operator">+</span> <span class="token string">'.wav'</span>        <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print('已经创建路径'+ save_path)</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行save命令</span>        save_cmd <span class="token operator">=</span> <span class="token string">"ffmpeg -loglevel quiet -i %s -t 5 -f wav -ar 16000 %s"</span><span class="token operator">%</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取音频数组形式(wavsignal)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------'</span><span class="token punctuation">)</span>        wavsignal<span class="token punctuation">,</span> fs<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _ <span class="token operator">=</span> read_wav_data<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 转换为拼音</span>        r_speech <span class="token operator">=</span> ms<span class="token punctuation">.</span>recognize_speech<span class="token punctuation">(</span>wavsignal<span class="token punctuation">,</span> fs<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 转换为文本</span>        r_text <span class="token operator">=</span> ml<span class="token punctuation">.</span>SpeechToText<span class="token punctuation">(</span>r_speech<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'+++++++'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r_text<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'+++++++'</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""进行敏感词判断"""</span>        content <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> word <span class="token keyword">in</span> read_txt<span class="token punctuation">(</span><span class="token string">'./targetword/target.txt'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> word <span class="token keyword">in</span> r_text<span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print('-------')</span>                content <span class="token operator">=</span> content <span class="token operator">+</span> word <span class="token operator">+</span> <span class="token string">','</span>                <span class="token comment" spellcheck="true"># print(word)</span>                <span class="token comment" spellcheck="true"># print('-------')</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'java接口已经调用了'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用java接口"""</span>            send_data <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">'taskId'</span><span class="token punctuation">:</span>task_id<span class="token punctuation">,</span>                <span class="token string">'companyId'</span><span class="token punctuation">:</span>company_id<span class="token punctuation">,</span>                <span class="token string">'imgUrl'</span><span class="token punctuation">:</span>file_path<span class="token punctuation">,</span>                <span class="token string">'content'</span><span class="token punctuation">:</span>content<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>                            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>            <span class="token comment" spellcheck="true"># print(send_data)</span>            <span class="token comment" spellcheck="true"># 字典数据转为json数据</span>            send_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>send_data<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 发送相关参数</span>            <span class="token comment" spellcheck="true"># 亦Content-Type':'application/json的方式提交json请求</span>            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://10.8.0.42:8088/wx/photo/saveVoidWarning'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'Content-Type':'application/json'&amp;#125;, data=send_data)</span>            <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> len<span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 删除非敏感语音</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>            <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                    <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                  <span class="token triple-quoted-string string">"""flask接口"""</span>server <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># return json.dumps("&amp;#123;'message': 'None'&amp;#125;",ensure_ascii=False)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print('------------')</span>    <span class="token comment" spellcheck="true"># print(information)</span>    <span class="token comment" spellcheck="true"># print('------------')</span>    <span class="token comment" spellcheck="true"># return json.dumps(200,ensure_ascii=False)</span>        <span class="token comment" spellcheck="true"># # 获取变量</span>    path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span>    save_path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'savePath'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># save_path = 'target'</span>    company_id <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'companyId'</span><span class="token punctuation">]</span>    task_id <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'taskId'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 调用函数传入视频路径</span>    <span class="token comment" spellcheck="true"># 调用多线程实现异步处理</span>    MyThread<span class="token punctuation">(</span>video_to_word<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>company_id<span class="token punctuation">,</span>task_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># result = video_to_word(path,save_path,company_id,task_id)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""基础模型导入"""</span>    <span class="token comment" spellcheck="true"># resample_rate('test.wav')</span>    audio_length <span class="token operator">=</span> <span class="token number">1600</span>    audio_feature_length <span class="token operator">=</span> <span class="token number">200</span>    channels <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment" spellcheck="true"># 默认输出的拼音的表示大小是1428，即1427个拼音+1个空白块</span>    output_size <span class="token operator">=</span> <span class="token number">1428</span>    sm251 <span class="token operator">=</span> SpeechModel251<span class="token punctuation">(</span>        input_shape<span class="token operator">=</span><span class="token punctuation">(</span>audio_length<span class="token punctuation">,</span> audio_feature_length<span class="token punctuation">,</span> channels<span class="token punctuation">)</span><span class="token punctuation">,</span>        output_size<span class="token operator">=</span>output_size        <span class="token punctuation">)</span>    feat <span class="token operator">=</span> Spectrogram<span class="token punctuation">(</span><span class="token punctuation">)</span>    ms <span class="token operator">=</span> ModelSpeech<span class="token punctuation">(</span>sm251<span class="token punctuation">,</span> feat<span class="token punctuation">,</span> max_label_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>    ms<span class="token punctuation">.</span>load_model<span class="token punctuation">(</span><span class="token string">'save_models/'</span> <span class="token operator">+</span> sm251<span class="token punctuation">.</span>get_model_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.model.h5'</span><span class="token punctuation">)</span>    ml <span class="token operator">=</span> ModelLanguage<span class="token punctuation">(</span><span class="token string">'model_language'</span><span class="token punctuation">)</span>    ml<span class="token punctuation">.</span>LoadModel<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""启动flask服务"""</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5100</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre><p><code>2. post_test.py分析</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://10.8.0.37:5100/gttx/objectrecognition"</span><span class="token comment" spellcheck="true"># C:/Users/15256/Desktop/nowtime/yolov_smoke_v1.0/yolov5/smokingdata/images/train/000001.jpg</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span><span class="token comment" spellcheck="true"># http://pili-live-hdl.miaobolive.com/live/dfbe2bcc0acd956bda5c9a3d133e5c18.flv</span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'targetimages'&amp;#125; </span>information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/e160addb5b2e5f8123de6cb0c6e1956b.flv', </span>                <span class="token string">'savePath'</span><span class="token punctuation">:</span> <span class="token string">'target'</span><span class="token punctuation">,</span>                <span class="token string">'companyId'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>                <span class="token string">'taskId'</span><span class="token punctuation">:</span><span class="token number">3</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 10.0.0.59</span><span class="token comment" spellcheck="true">## 数据打包传输</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span> data<span class="token operator">=</span>information<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(response)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><p><code># 3. requirements.txt分析</code></p><pre class=" language-python"><code class="language-python">absl<span class="token operator">-</span>py<span class="token operator">==</span><span class="token number">0.15</span><span class="token punctuation">.</span><span class="token number">0</span>appdirs<span class="token operator">==</span><span class="token number">1.4</span><span class="token punctuation">.</span><span class="token number">4</span>astor<span class="token operator">==</span><span class="token number">0.8</span><span class="token punctuation">.</span><span class="token number">0</span>astunparse<span class="token operator">==</span><span class="token number">1.6</span><span class="token punctuation">.</span><span class="token number">3</span>audioread<span class="token operator">==</span><span class="token number">2.1</span><span class="token punctuation">.</span><span class="token number">9</span>cached<span class="token operator">-</span>property<span class="token operator">==</span><span class="token number">1.5</span><span class="token punctuation">.</span><span class="token number">2</span>cachetools<span class="token operator">==</span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">4</span>certifi<span class="token operator">==</span><span class="token number">2019.9</span><span class="token punctuation">.</span><span class="token number">11</span>cffi<span class="token operator">==</span><span class="token number">1.15</span><span class="token punctuation">.</span><span class="token number">0</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>cycler<span class="token operator">==</span><span class="token number">0.10</span><span class="token punctuation">.</span><span class="token number">0</span>decorator<span class="token operator">==</span><span class="token number">4.4</span><span class="token punctuation">.</span><span class="token number">2</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>flatbuffers<span class="token operator">==</span><span class="token number">1.12</span>gast<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span>google<span class="token operator">-</span>auth<span class="token operator">==</span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">3</span>google<span class="token operator">-</span>auth<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">6</span>google<span class="token operator">-</span>pasta<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">0</span>grpcio<span class="token operator">==</span><span class="token number">1.34</span><span class="token punctuation">.</span><span class="token number">1</span>h5py<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">0</span>idna<span class="token operator">==</span><span class="token number">3.3</span>imageio<span class="token operator">==</span><span class="token number">2.12</span><span class="token punctuation">.</span><span class="token number">0</span>imageio<span class="token operator">-</span>ffmpeg<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">5</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>joblib<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span>Keras<span class="token operator">-</span>Applications<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">8</span>keras<span class="token operator">-</span>nightly<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">0.</span>dev2021032900Keras<span class="token operator">-</span>Preprocessing<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">2</span>kiwisolver<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">1</span>librosa<span class="token operator">==</span><span class="token number">0.7</span><span class="token punctuation">.</span><span class="token number">2</span>llvmlite<span class="token operator">==</span><span class="token number">0.31</span><span class="token punctuation">.</span><span class="token number">0</span>Markdown<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>matplotlib<span class="token operator">==</span><span class="token number">3.4</span><span class="token punctuation">.</span><span class="token number">2</span>moviepy<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">3</span>numba<span class="token operator">==</span><span class="token number">0.48</span><span class="token punctuation">.</span><span class="token number">0</span>numpy<span class="token operator">==</span><span class="token number">1.19</span><span class="token punctuation">.</span><span class="token number">5</span>oauthlib<span class="token operator">==</span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">1</span>opt<span class="token operator">-</span>einsum<span class="token operator">==</span><span class="token number">3.3</span><span class="token punctuation">.</span><span class="token number">0</span>packaging<span class="token operator">==</span><span class="token number">21.3</span>Pillow<span class="token operator">==</span><span class="token number">8.3</span><span class="token punctuation">.</span><span class="token number">2</span>pooch<span class="token operator">==</span><span class="token number">1.5</span><span class="token punctuation">.</span><span class="token number">2</span>proglog<span class="token operator">==</span><span class="token number">0.1</span><span class="token punctuation">.</span><span class="token number">9</span>protobuf<span class="token operator">==</span><span class="token number">3.10</span><span class="token punctuation">.</span><span class="token number">0</span>pyasn1<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">8</span>pyasn1<span class="token operator">-</span>modules<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">8</span>pycparser<span class="token operator">==</span><span class="token number">2.21</span>pyparsing<span class="token operator">==</span><span class="token number">2.4</span><span class="token punctuation">.</span><span class="token number">7</span>python<span class="token operator">-</span>dateutil<span class="token operator">==</span><span class="token number">2.8</span><span class="token punctuation">.</span><span class="token number">1</span>python<span class="token operator">-</span>speech<span class="token operator">-</span>features<span class="token operator">==</span><span class="token number">0.6</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">-</span>oauthlib<span class="token operator">==</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span>resampy<span class="token operator">==</span><span class="token number">0.2</span><span class="token punctuation">.</span><span class="token number">2</span>rsa<span class="token operator">==</span><span class="token number">4.7</span><span class="token punctuation">.</span><span class="token number">2</span>scikit<span class="token operator">-</span>learn<span class="token operator">==</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">1</span>scipy<span class="token operator">==</span><span class="token number">1.6</span><span class="token punctuation">.</span><span class="token number">3</span>six<span class="token operator">==</span><span class="token number">1.15</span><span class="token punctuation">.</span><span class="token number">0</span>SoundFile<span class="token operator">==</span><span class="token number">0.10</span><span class="token punctuation">.</span><span class="token number">3.</span>post1tensorboard<span class="token operator">==</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span>tensorboard<span class="token operator">-</span>data<span class="token operator">-</span>server<span class="token operator">==</span><span class="token number">0.6</span><span class="token punctuation">.</span><span class="token number">1</span>tensorboard<span class="token operator">-</span>plugin<span class="token operator">-</span>wit<span class="token operator">==</span><span class="token number">1.8</span><span class="token punctuation">.</span><span class="token number">0</span>tensorflow<span class="token operator">-</span>estimator<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">0</span>tensorflow<span class="token operator">-</span>gpu<span class="token operator">==</span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">2</span>termcolor<span class="token operator">==</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span>threadpoolctl<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">0</span>tqdm<span class="token operator">==</span><span class="token number">4.62</span><span class="token punctuation">.</span><span class="token number">3</span>typing<span class="token operator">-</span>extensions<span class="token operator">==</span><span class="token number">3.7</span><span class="token punctuation">.</span><span class="token number">4.3</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>wrapt<span class="token operator">==</span><span class="token number">1.12</span><span class="token punctuation">.</span><span class="token number">1</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python调用asrt实现脏话识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python调用百度api的视频识别接口</title>
      <link href="/2021/112933904.html"/>
      <url>/2021/112933904.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://shixiuhai.github.io/work_share/python_baidu-api_videoRecognition.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载调用百度api图片审核接口项目</a></p><p><code># 1. 项目代码相对位置</code></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/baidu-api.PNG"></p><p><code>2. accetoken.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">get_accesstoken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># client_id 为官网获取的AK， client_secret 为官网获取的SK</span>    host <span class="token operator">=</span> <span class="token string">"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=GfHcIUdOtlOSOVtGWtW1w6&amp;client_secret=c9HtDl7rGPwo6O9NznWyuxvj9nMXe"</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>host<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(response)</span>    <span class="token keyword">if</span> response<span class="token punctuation">:</span>        <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'access_token'</span><span class="token punctuation">]</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>get_accesstoken<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>now<span class="token operator">-</span>start<span class="token punctuation">)</span></code></pre><p><code>3. main.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> os <span class="token keyword">import</span> access<span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">from</span> accetoken <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> cv2<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token triple-quoted-string string">'''图像审核接口,功能调用百度api对视频流进行截图处理'''</span><span class="token keyword">def</span> <span class="token function">process_video_to_images</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 文件夹路径不存在去创建</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># print('已经创建路径'+ save_path)</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>    now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 图片存储路径</span>    file_path <span class="token operator">=</span> save_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now <span class="token operator">+</span> <span class="token string">'.jpg'</span>    <span class="token comment" spellcheck="true"># print(path,file_path)</span>    save_cmd <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared/ffmpeg-4.4.1-full_build-shared/bin/ffmpeg.exe -loglevel quiet -i %s -r 1 -t 0.1 -f image2  %s"</span><span class="token operator">%</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 执行保存</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span>        f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>        img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># !!!!!!!!!关闭文件很重要</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> picture_save_alert<span class="token punctuation">(</span>img<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'视频打开失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':6,'conclusion': '视频打开失败'&amp;#125;,ensure_ascii=False)</span><span class="token keyword">def</span> <span class="token function">picture_save_alert</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>save_path<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># print('hello word')</span>    request_url <span class="token operator">=</span> <span class="token string">"https://aip.baidubce.com/rest/2.0/solution/v1/img_censor/v2/user_defined"</span>    <span class="token comment" spellcheck="true"># 识别</span>    params <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"image":img&amp;#125;</span>    access_token <span class="token operator">=</span> <span class="token string">'%s'</span><span class="token operator">%</span>get_accesstoken<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># access_token = '24.a6252d0fc87a8d462ccb4cb9f4a7e390.2592000.1640328040.282335-2521363'</span>    request_url <span class="token operator">=</span> request_url <span class="token operator">+</span> <span class="token string">"?access_token="</span> <span class="token operator">+</span> access_token    headers <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'content-type': 'application/x-www-form-urlencoded'&amp;#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>request_url<span class="token punctuation">,</span> data<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print('+++++++++')</span>    <span class="token comment" spellcheck="true"># print(response.json())</span>    <span class="token comment" spellcheck="true"># print('+++++++++')</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 请求成功</span>        <span class="token keyword">if</span> response<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'合规'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'conclusionType'</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># print(type(response.json()['conclusionType']))</span>                <span class="token comment" spellcheck="true"># print(id,companyId)</span>                <span class="token comment" spellcheck="true"># 图片命名规则</span>                <span class="token comment" spellcheck="true"># cv2.imwrite("%s/%s.jpg"%(save_path,now),frame)</span>                <span class="token comment" spellcheck="true"># print('图片合规的')</span>                result <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>                result <span class="token operator">=</span> dict<span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 移除图片</span>                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 返回成功的数据</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>result<span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># 不合规</span>            <span class="token keyword">elif</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'conclusionType'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不合规'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 不合规返回图片路径</span>                <span class="token comment" spellcheck="true"># 数据返回结果</span>                result <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>                result <span class="token operator">=</span> dict<span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 更新数据</span>                result<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                    <span class="token string">'imagePath'</span><span class="token punctuation">:</span>file_path                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span>                                <span class="token comment" spellcheck="true"># 返回成功的数据</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>result<span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return str(result)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span><span class="token triple-quoted-string string">"""flask接口"""</span>server <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>@server<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/gttx/objectrecognition'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'post'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">objectrecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    通过接口解析json数据    """</span>    <span class="token keyword">if</span> <span class="token operator">not</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 返回没有数据</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'百度接口调用失败'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'conclusionType':5,'conclusion': '百度接口调用失败'&amp;#125;,ensure_ascii=False)</span>        <span class="token comment" spellcheck="true"># return json.dumps("&amp;#123;'message': 'None'&amp;#125;",ensure_ascii=False)</span>    <span class="token comment" spellcheck="true"># 以utf-8编码接收json数据</span>    information <span class="token operator">=</span> request<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true"># 解析json数据为字典格式</span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span>    save_path <span class="token operator">=</span> information<span class="token punctuation">[</span><span class="token string">'savePath'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 调用函数</span>    result <span class="token operator">=</span> process_video_to_images<span class="token punctuation">(</span>path<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    启动flask服务    """</span>    <span class="token comment" spellcheck="true"># 指定端口,host,0.0.0.0代表不管几个网卡，任何ip都可访问</span>    <span class="token comment" spellcheck="true"># server.run(debug=True, threaded=True,port=5000, host='127.0.0.1') # 多线程指定</span>    <span class="token comment" spellcheck="true"># 多进程指定，各个进程之间不冲突</span>    server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> processes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre><p><code>4. post_test.py</code></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Perform test request"""</span><span class="token keyword">import</span> pprint<span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> argparse<span class="token keyword">import</span> io<span class="token keyword">import</span> threading<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token triple-quoted-string string">"""这是一个使用多线程的类"""</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>RLock<span class="token punctuation">(</span><span class="token punctuation">)</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 锁上</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>          self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解锁</span>        self<span class="token punctuation">.</span>lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> None<span class="token comment" spellcheck="true">## 定义访问接口</span>interfaceurl <span class="token operator">=</span> <span class="token string">"http://127.0.0.1:5000/gttx/objectrecognition"</span><span class="token comment" spellcheck="true"># C:/Users/15256/Desktop/nowtime/yolov_smoke_v1.0/yolov5/smokingdata/images/train/000001.jpg</span><span class="token comment" spellcheck="true">## 将要传入的数据设置为json格式</span><span class="token comment" spellcheck="true"># http://pili-live-hdl.miaobolive.com/live/dfbe2bcc0acd956bda5c9a3d133e5c18.flv</span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : r'C:\Users\15256\Desktop\nowtime\吸烟视频\2.mp4',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'targetimages'&amp;#125; </span><span class="token comment" spellcheck="true"># information = &amp;#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/76db77b91f9248d3e21eef0f1e815f37.flv',  </span><span class="token comment" spellcheck="true">#                 'savePath' :'./target/test'&amp;#125; </span><span class="token comment" spellcheck="true"># information = json.dumps(information)</span><span class="token keyword">import</span> random<span class="token comment" spellcheck="true">## 数据打包传输</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    information <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; 'path' : 'http://pili-live-hdl.miaobolive.com/live/6e8d175660edc74ea70f54abbd598c8a.flv',  </span>                <span class="token string">'savePath'</span> <span class="token punctuation">:</span><span class="token string">'./target/test/%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; </span>    information <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>information<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># _Data = information</span>    MyThread<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>interfaceurl<span class="token punctuation">,</span>information<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># response = requests.post(interfaceurl, data=information)</span>    <span class="token comment" spellcheck="true"># response = requests.post(interfaceurl, data=information)</span>    <span class="token comment" spellcheck="true"># print(response)</span>    <span class="token comment" spellcheck="true"># print(response.json())</span><span class="token comment" spellcheck="true"># requests.post(interfaceurl, data=information)</span></code></pre><p><code>4. requirements.txt</code></p><pre class=" language-python"><code class="language-python">baidu<span class="token operator">-</span>aip<span class="token operator">==</span><span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">18.0</span>certifi<span class="token operator">==</span><span class="token number">2021.10</span><span class="token punctuation">.</span><span class="token number">8</span>charset<span class="token operator">-</span>normalizer<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">7</span>click<span class="token operator">==</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">3</span>colorama<span class="token operator">==</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">4</span>Flask<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>idna<span class="token operator">==</span><span class="token number">3.3</span>itsdangerous<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>Jinja2<span class="token operator">==</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">3</span>kafka<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span>MarkupSafe<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span>numpy<span class="token operator">==</span><span class="token number">1.21</span><span class="token punctuation">.</span><span class="token number">4</span>opencv<span class="token operator">-</span>contrib<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.60</span>opencv<span class="token operator">-</span>python<span class="token operator">==</span><span class="token number">4.5</span><span class="token punctuation">.</span><span class="token number">4.60</span>Pillow<span class="token operator">==</span><span class="token number">8.4</span><span class="token punctuation">.</span><span class="token number">0</span>requests<span class="token operator">==</span><span class="token number">2.26</span><span class="token punctuation">.</span><span class="token number">0</span>urllib3<span class="token operator">==</span><span class="token number">1.26</span><span class="token punctuation">.</span><span class="token number">7</span>Werkzeug<span class="token operator">==</span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">2</span></code></pre><p><code>5. test.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> random<span class="token comment" spellcheck="true"># file_path = save_path + '/' + now+ '.wav'</span>now <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d-%H_%M_%S"</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图片存储路径</span>file_path <span class="token operator">=</span> <span class="token string">'target'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'test'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now  <span class="token operator">+</span> str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    file_path <span class="token operator">=</span> <span class="token string">'target'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'test'</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> now  <span class="token operator">+</span> str<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">'.jpg'</span>    <span class="token comment" spellcheck="true"># time.sleep(1)</span>    save_cmd <span class="token operator">=</span> <span class="token string">"C:/Users/15256/Downloads/2021-10-26-00-34-45-www.gyan.dev-ffmpeg-4.4.1-full_build-shared/ffmpeg-4.4.1-full_build-shared/bin/ffmpeg.exe -i http://pili-live-hdl.miaobolive.com/live/6e8d175660edc74ea70f54abbd598c8a.flv -r 1 -t 0.1 -f image2   %s"</span><span class="token operator">%</span>file_path    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>save_cmd<span class="token punctuation">)</span></code></pre><p><code>#6. README.md</code></p><h3 id="1-这个项目是调用百度api对视频链接进行截图识别返回结果"><a href="#1-这个项目是调用百度api对视频链接进行截图识别返回结果" class="headerlink" title="1. 这个项目是调用百度api对视频链接进行截图识别返回结果"></a>1. 这个项目是调用百度api对视频链接进行截图识别返回结果</h3><h3 id="2-accetoken-py是获取请求accetoken的函数"><a href="#2-accetoken-py是获取请求accetoken的函数" class="headerlink" title="2. accetoken.py是获取请求accetoken的函数"></a>2. accetoken.py是获取请求accetoken的函数</h3><h3 id="3-main-py-是项目的主代码"><a href="#3-main-py-是项目的主代码" class="headerlink" title="3. main.py 是项目的主代码"></a>3. main.py 是项目的主代码</h3><h3 id="4-post-test-py-是提交测试例子"><a href="#4-post-test-py-是提交测试例子" class="headerlink" title="4. post_test.py 是提交测试例子"></a>4. post_test.py 是提交测试例子</h3><h3 id="5-requirements-txt是虚拟环境需要的依赖包"><a href="#5-requirements-txt是虚拟环境需要的依赖包" class="headerlink" title="5. requirements.txt是虚拟环境需要的依赖包"></a>5. requirements.txt是虚拟环境需要的依赖包</h3><h3 id="6-test-py是项目测试某些python写法的文件"><a href="#6-test-py是项目测试某些python写法的文件" class="headerlink" title="6. test.py是项目测试某些python写法的文件"></a>6. test.py是项目测试某些python写法的文件</h3>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python调用百度api图像识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux日常笔记</title>
      <link href="/2021/112949872.html"/>
      <url>/2021/112949872.html</url>
      
        <content type="html"><![CDATA[<h4 id="linux-使用nohup创建后台"><a href="#linux-使用nohup创建后台" class="headerlink" title="linux 使用nohup创建后台"></a>linux 使用nohup创建后台</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 将 check_application.py放入后台运行并生成日志，日志目录在info.log</span><span class="token comment" spellcheck="true"># 2>&amp;1 的意思就是将标准错误重定向到标准输出</span>nohup python3 check_application<span class="token punctuation">.</span>py <span class="token operator">></span>log<span class="token operator">/</span>info<span class="token punctuation">.</span>log <span class="token number">2</span><span class="token operator">></span><span class="token operator">&amp;</span><span class="token number">1</span> <span class="token operator">&amp;</span></code></pre><h4 id="linux-删除所有空格（每行）"><a href="#linux-删除所有空格（每行）" class="headerlink" title="linux 删除所有空格（每行）"></a>linux 删除所有空格（每行）</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sed</span> -i s/<span class="token punctuation">[</span><span class="token punctuation">[</span>:space:<span class="token punctuation">]</span><span class="token punctuation">]</span>//g filename<span class="token function">sed</span> -i <span class="token string">'/^[[:blank:]]*$/d'</span> filename</code></pre><h4 id="linux-修改某个文件的某列"><a href="#linux-修改某个文件的某列" class="headerlink" title="linux 修改某个文件的某列"></a>linux 修改某个文件的某列</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"^-"</span> <span class="token operator">|</span> <span class="token function">wc</span> -l</code></pre><h4 id="linux-查看文件夹下文件个数"><a href="#linux-查看文件夹下文件个数" class="headerlink" title="linux 查看文件夹下文件个数"></a>linux 查看文件夹下文件个数</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"^-"</span> <span class="token operator">|</span> <span class="token function">wc</span> -l</code></pre><h4 id="linux-vim使用多窗口"><a href="#linux-vim使用多窗口" class="headerlink" title="linux  vim使用多窗口"></a>linux  vim使用多窗口</h4><pre class=" language-bash"><code class="language-bash">水平窗口的开启使用:sp命令即可 <span class="token comment" spellcheck="true"># （1）Ctrl+w+k 上一个窗口   Ctrl+w+ j  下一个窗口 （2）Ctrl+w+上下方向键</span>垂直窗口的开启使用:vs命令即可 <span class="token comment" spellcheck="true"># （1）Ctrl+w+h 当前窗口左边的一个窗口   Ctrl+w+ l  当前窗口右边的一个窗口 （2）Ctrl+w+左右方向键</span></code></pre><h4 id="linux-获取某个进程的pid号"><a href="#linux-获取某个进程的pid号" class="headerlink" title="linux  获取某个进程的pid号"></a>linux  获取某个进程的pid号</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> check_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span> # check_application.py 是运行程序的名字<span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> traffic_application.py <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> truck_application.py <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'SCREEN -S test'</span>  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span> # 获取screen 某个虚拟终端的id<span class="token comment" spellcheck="true">## 某个脚本案例</span><span class="token comment" spellcheck="true">#!/bin/bash</span><span class="token comment" spellcheck="true"># 获取pid程序运行的pid号</span>pid1<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> check_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span>pid2<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> traffic_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span>pid3<span class="token operator">=</span><span class="token punctuation">$(</span>ps -ef <span class="token operator">|</span> <span class="token function">grep</span> truck_application.py  <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">'grep'</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 杀死已经运行的程序</span><span class="token function">kill</span> -9 <span class="token variable">$pid1</span><span class="token function">kill</span> -9 <span class="token variable">$pid2</span><span class="token function">kill</span> -9 <span class="token variable">$pid3</span><span class="token comment" spellcheck="true"># 进入虚拟环境</span><span class="token function">source</span> env/bin/activate<span class="token comment" spellcheck="true"># 后台运行程序</span><span class="token function">nohup</span> python3 traffic_application.py <span class="token operator">></span>log/trafficInfo.log.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token function">nohup</span> python3 check_application.py <span class="token operator">></span>log/info.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token function">nohup</span> python3 truck_application.py <span class="token operator">></span>log/truckInfo.log 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">&amp;</span><span class="token comment" spellcheck="true"># 退出虚拟环境</span>deactivate<span class="token keyword">echo</span> <span class="token string">"check_application.py traffic_application.py truck_application.py重启成功"</span></code></pre><h4 id="linux设置环境变量"><a href="#linux设置环境变量" class="headerlink" title="linux设置环境变量"></a>linux设置环境变量</h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># bash 终端的情况下</span><span class="token comment" spellcheck="true">## 1. 对所有用户有效</span><span class="token function">vi</span> /etc/profile<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/usr/abc/def/<span class="token function">source</span> /etc/profile<span class="token comment" spellcheck="true">## 2. 对当前用户有效</span><span class="token function">vi</span> /root/.bashrc<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/usr/abc/def/<span class="token function">source</span> /root/.bashrc<span class="token comment" spellcheck="true">## 3. 添加多个环境变量</span><span class="token comment" spellcheck="true"># 比如添加搜索路径/home/cc/path1和/home/cc/path2,路径到PATH中,采用:来分隔,冒号左右不需要空格:</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/home/cc/path1:/home/cc/path2</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux日常随记 </tag>
            
            <tag> linux设置环境变量 </tag>
            
            <tag> nohup创建后台 </tag>
            
            <tag> linux删除所有空格 </tag>
            
            <tag> vim使用多窗口 </tag>
            
            <tag> linux获取进程pid </tag>
            
            <tag> linux查看文件数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python日常笔记</title>
      <link href="/2021/111223223.html"/>
      <url>/2021/111223223.html</url>
      
        <content type="html"><![CDATA[<h4 id="显示当前目录"><a href="#显示当前目录" class="headerlink" title="显示当前目录"></a>显示当前目录</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="python装饰器是什么"><a href="#python装饰器是什么" class="headerlink" title="python装饰器是什么"></a>python装饰器是什么</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">pass</span></code></pre><h4 id="不定参数函数变量"><a href="#不定参数函数变量" class="headerlink" title="不定参数函数变量"></a>不定参数函数变量</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># *args 是用来发送一个非键值对的可变数量的参数列表给一个函数</span><span class="token comment" spellcheck="true"># 1</span><span class="token keyword">def</span> <span class="token function">test_args_kwargs</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_args_kwargs<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">332</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token keyword">def</span> <span class="token function">test_args_kwargs</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_args_kwargs<span class="token punctuation">(</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># **kwargs 允许你将不定长度的键值对, 作为参数传递给一个函数</span><span class="token comment" spellcheck="true">#</span><span class="token keyword">def</span> <span class="token function">test_kwargs</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"name":'python',"name1":'java',"name2":'ruby',"name3":'lua'&amp;#125;</span>test_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>b<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2</span><span class="token keyword">def</span> <span class="token function">test_kwargs</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>a  <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'a'</span><span class="token punctuation">,</span>    <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token string">'b'</span><span class="token punctuation">,</span>    <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token string">'c'</span><span class="token punctuation">,</span>    <span class="token string">'d'</span><span class="token punctuation">:</span><span class="token string">'d'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>test_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>a<span class="token punctuation">)</span></code></pre><h4 id="python-linux下创建虚拟环境-名字为py36"><a href="#python-linux下创建虚拟环境-名字为py36" class="headerlink" title="python linux下创建虚拟环境 名字为py36"></a>python linux下创建虚拟环境 名字为py36</h4><pre class=" language-python"><code class="language-python">python3 <span class="token operator">-</span>m venv py36</code></pre><h4 id="pip-指定阿里源安装"><a href="#pip-指定阿里源安装" class="headerlink" title="pip 指定阿里源安装"></a>pip 指定阿里源安装</h4><pre class=" language-python"><code class="language-python">pip install <span class="token operator">-</span>r requirements<span class="token punctuation">.</span>txt  <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>pypi<span class="token operator">/</span>simple<span class="token operator">/</span></code></pre><h4 id="pip-生成-requirements-环境依赖文件"><a href="#pip-生成-requirements-环境依赖文件" class="headerlink" title="pip 生成 requirements 环境依赖文件"></a>pip 生成 requirements 环境依赖文件</h4><pre class=" language-python"><code class="language-python">pip freeze  <span class="token operator">></span> requirements</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python日常随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常密码本</title>
      <link href="/2021/11122148.html"/>
      <url>/2021/11122148.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="79494594617dc1fd340aade2b8ed0bec1379a288ed376c4cb58ee6c00d5c415f">14f2d733a805bc4143cc4d1dcd33bd086165bf1343064b1ba2555105fc046f80d76280ed663e93c948014a7a9106ba2aa41fafedae7e55ffac04c85d4751f94db011fc1c5c6b0e6c9b63e830ae38c3a8e6c7ca2c8eacc7620cd059b748963f8cdf92c328a89556dcf1aa7248bbc917ef8c8654e236bcbf14c8d1f0ff9d3a7b63a621732e3462816eaa2030e285830bbe2cb265983bcd68fa3eb43f5f6be4fc41befc0d00266898fea6c4c0bff3f1616d6263649999a671bc6369c24e9fcf4458d745481d36bfd9c847bf4aa4cfaec7037c9dd1e901b2d295021158872de8aea7c1ec7ba0659c25481d2f4721e18a9c8f7ab81d67078a985129030f945242f7cdc399e27d74522a55ca62bc2bdf2695bfb1b8fbff4462fff19512e19313d88373659558ae45a38914f5621114a3c8cfc565641acaad8645b70313c2aa8eec0fc7626ea471e6be33acdac13a966833828c500caeb36638b872c08f52a022fbb1f39d394a1b5afbc953e1547c9d3b7e741e671f59627e51430c4297e72c09a62b1b475ce91825b53f595c85a511d44eb192927b3bd747583046d876d5bd3bdfd264db4727f41bf9fd686c62ed2498006b2e03317f48df2d5aa8188f1b41df5299878acdfe1acf45bc493130928c24dc41701c11a4bd5d07a300771f07b26166ee65</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日常密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常密码记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python通过csv向mysql插入数据或者更新数据</title>
      <link href="/2021/110962388.html"/>
      <url>/2021/110962388.html</url>
      
        <content type="html"><![CDATA[<h1 id="python通过csv向mysql插入数据或者更新数据"><a href="#python通过csv向mysql插入数据或者更新数据" class="headerlink" title="python通过csv向mysql插入数据或者更新数据"></a><code>python通过csv向mysql插入数据或者更新数据</code></h1><h2 id="插入数据到excel里"><a href="#插入数据到excel里" class="headerlink" title="插入数据到excel里"></a><code>插入数据到excel里</code></h2><pre class=" language-python"><code class="language-python">data <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'评级编号': 1,2,</span>        <span class="token string">'名称'</span><span class="token punctuation">:</span> name_list<span class="token punctuation">,</span>        <span class="token string">'分数'</span><span class="token punctuation">:</span> score_list<span class="token punctuation">,</span>        <span class="token string">'年份'</span><span class="token punctuation">:</span> year_list<span class="token punctuation">,</span>        <span class="token string">'尺寸'</span><span class="token punctuation">:</span> size_list<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">'./1.xlsx'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 在 excel 里面格式如下</span>评级编号 名称 分数 年份 尺寸   <span class="token number">1</span>     <span class="token number">1</span>   <span class="token number">1</span>    <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">2</span>     <span class="token number">2</span>   <span class="token number">2</span>    <span class="token number">2</span>   <span class="token number">2</span></code></pre><h2 id="插入数据v1-0版本"><a href="#插入数据v1-0版本" class="headerlink" title="插入数据v1.0版本"></a><code>插入数据v1.0版本</code></h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>        <span class="token comment" spellcheck="true"># 进口数据插入</span>        created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>        sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 出口数据插入</span>        sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># print(row[0],float(row[1]))</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="插入数据v2-0版本"><a href="#插入数据v2-0版本" class="headerlink" title="插入数据v2.0版本"></a><code>插入数据v2.0版本</code></h2><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""v2.0添加了防止插入数据中断,查询时采用了两个字段 LOG_TIME 和 INTERFACE_INFO"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d <span class="token operator">and</span> <span class="token punctuation">(</span>INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span> <span class="token operator">or</span> INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span> " <span class="token operator">%</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""执行sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token triple-quoted-string string">"""防止重复的查询"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'插入新数据'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span><span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\nowtime\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="插入数据v3-0版本"><a href="#插入数据v3-0版本" class="headerlink" title="插入数据v3.0版本"></a><code>插入数据v3.0版本</code></h2><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""v3.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d" <span class="token operator">%</span> int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token keyword">pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token triple-quoted-string string">''''''        """插入数据"""        """防止重复的插入"""        # 查询数据不存在时再执行插入        if sql_select(timeconversion(row[0])) == 'unexisted':            """调用sql_execute插入数据"""            # 进口数据插入            created_time=datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")            sql_execute(timeconversion(row[0]),ip,host,1,interface_in_info,timeconversion(row[0]),row[1],ns,created_time)            # 出口数据插入            sql_execute(timeconversion(row[0]),ip,host,2,interface_out_info,timeconversion(row[0]),row[2],ns,created_time)                        # # print(row[0],float(row[1]))            # time.sleep(2)        '''</span><span class="token string">''</span>'<span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>        <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="插入数据v4-0版本"><a href="#插入数据v4-0版本" class="headerlink" title="插入数据v4.0版本"></a><code>插入数据v4.0版本</code></h2><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""v2.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info,实现了默认插入和已经存在的进行更新。"""</span><span class="token comment" spellcheck="true"># 导入相关需要使用的函数库</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d" <span class="token operator">%</span> int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token comment" spellcheck="true"># pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token triple-quoted-string string">"""插入数据"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token triple-quoted-string string">"""防止重复的插入"""</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>               <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="插入数据v5-0版本"><a href="#插入数据v5-0版本" class="headerlink" title="插入数据v5.0版本"></a><code>插入数据v5.0版本</code></h2><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""v4.0添加了防止插入数据中断,可以在已有的数据基础上更新数据，数据查询字段依靠log_time和interface_info,实现了默认插入和已经存在的进行更新增加了查询是否存在的可信度"""</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> time<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">import</span> os<span class="token triple-quoted-string string">"""遍历所有的csv文件"""</span><span class="token comment" spellcheck="true"># 待写</span><span class="token keyword">def</span> <span class="token function">get_csv_file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token triple-quoted-string string">"""生成随机整数"""</span><span class="token keyword">def</span> <span class="token function">create_random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">"""时间戳的转换"""</span><span class="token comment" spellcheck="true"># 正常日期转时间戳</span><span class="token keyword">def</span> <span class="token function">timeconversion</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换成时间戳</span>    t_result <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> t_result<span class="token triple-quoted-string string">"""执行sql语句查询"""</span> <span class="token comment" spellcheck="true"># 这里查询采用了两个字段LOG_TIME 和 INTERFACE_INFO</span><span class="token keyword">def</span> <span class="token function">sql_select</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql <span class="token operator">=</span> "SELECT <span class="token operator">*</span> FROM ZABBIX_FLOW_DATA \       WHERE LOG_TIME <span class="token operator">=</span> <span class="token operator">%</span>d <span class="token operator">and</span> <span class="token punctuation">(</span>INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span> <span class="token operator">or</span> INTERFACE_INFO<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span> " <span class="token operator">%</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行SQL语句</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># return 'sucessufl'</span>        <span class="token comment" spellcheck="true"># 获取所有记录列表</span>        results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(results)</span>        <span class="token keyword">if</span> results <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'existed'</span>        <span class="token keyword">elif</span> results <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'unexisted'</span>        <span class="token comment" spellcheck="true"># for row in results:</span>        <span class="token comment" spellcheck="true">#     print(row)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>       <span class="token keyword">return</span> <span class="token string">'查询异常错误'</span>            <span class="token triple-quoted-string string">"""sql数据更新数据"""</span><span class="token keyword">def</span> <span class="token function">sql_update</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>invalue<span class="token punctuation">,</span>outvalue<span class="token punctuation">)</span><span class="token punctuation">:</span>    sql_interface_in <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME= %d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>invalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">)</span>    sql_interface_out <span class="token operator">=</span> <span class="token string">"UPDATE ZABBIX_FLOW_DATA SET VALUE = '%s' WHERE LOG_TIME=%d and INTERFACE_INFO='%s'"</span> <span class="token operator">%</span><span class="token punctuation">(</span>outvalue<span class="token punctuation">,</span>int<span class="token punctuation">(</span>log_time<span class="token punctuation">)</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># try:</span>    <span class="token comment" spellcheck="true"># 使用cusor()方法获取操作游标</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 IN 口数据插入</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_in<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql_interface_out<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行 OUT 口数据插入</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新成功'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 提交到到据库执行</span>    <span class="token comment" spellcheck="true"># except:</span>    <span class="token comment" spellcheck="true">#     print('没有执行')</span>    <span class="token comment" spellcheck="true">#     db.rollback()'</span><span class="token triple-quoted-string string">"""sql数据插入数据"""</span><span class="token keyword">def</span> <span class="token function">sql_execute</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SQL 插入语句</span><span class="token comment" spellcheck="true"># type is </span>    sql <span class="token operator">=</span> "INSERT INTO ZABBIX_FLOW_DATA<span class="token punctuation">(</span>log_time<span class="token punctuation">,</span> \    ip<span class="token punctuation">,</span> host<span class="token punctuation">,</span> type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span> \    VALUES <span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span> <span class="token string">'%d'</span><span class="token punctuation">,</span> <span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'%s'</span><span class="token punctuation">)</span>" <span class="token operator">%</span> \    <span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 使用cursor()方法获取操作游标 </span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 执行sql语句</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 提交到数据库执行</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""插入数据查看调试"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"插入的数据为: '%s', '%s', %s, '%s', '%s','%s','%s','%s','%s'"</span><span class="token operator">%</span><span class="token punctuation">(</span>log_time<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span>type<span class="token punctuation">,</span>interface_info<span class="token punctuation">,</span>clock<span class="token punctuation">,</span>value<span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果发生错误则回滚,在错误的实在再关闭数据库</span>        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token triple-quoted-string string">"""使用pandas读取和处理"""</span><span class="token keyword">def</span> <span class="token function">read_deal_csv</span><span class="token punctuation">(</span>filedir<span class="token punctuation">,</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""处理一下filename，想办法获取到interface_info数据"""</span>    <span class="token keyword">pass</span>    this_file <span class="token operator">=</span> filedir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename    <span class="token comment" spellcheck="true"># 读取10行以后</span>    <span class="token comment" spellcheck="true"># 2.把Excel文件中的数据读入pandas</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>this_file<span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># row 取数据</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># 时间 row[0]</span>        <span class="token comment" spellcheck="true"># IN流量row[1]</span>        <span class="token comment" spellcheck="true"># OUT流量row[2]</span>        <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""对已经存在的数据进行更新"""</span>        <span class="token comment" spellcheck="true"># 查询数据存在时再自行更新</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'---------'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'existed'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据已经存在'</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">"""调用sql_update更新数据"""</span>            <span class="token comment" spellcheck="true"># pass</span>            <span class="token comment" spellcheck="true"># sql_execute(log_time,ip,host,type,interface_info,clock,value,ns,created_time) 传入的参数介绍</span>            sql_update<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token triple-quoted-string string">"""插入数据"""</span>        <span class="token comment" spellcheck="true"># 查询数据不存在时再执行插入</span>        <span class="token triple-quoted-string string">"""防止重复的插入"""</span>        <span class="token keyword">if</span> sql_select<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>interface_out_info<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'unexisted'</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""调用sql_execute插入数据"""</span>            <span class="token comment" spellcheck="true"># 进口数据插入</span>            created_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">)</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>interface_in_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 出口数据插入</span>            sql_execute<span class="token punctuation">(</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>host<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>interface_out_info<span class="token punctuation">,</span>timeconversion<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ns<span class="token punctuation">,</span>created_time<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true"># # print(row[0],float(row[1]))</span>            <span class="token comment" spellcheck="true"># time.sleep(2)</span>        <span class="token triple-quoted-string string">"""代码开始"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""连接数据库"""</span>    <span class="token comment" spellcheck="true"># 打开数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>                        user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                        password<span class="token operator">=</span><span class="token string">'sxh.200008'</span><span class="token punctuation">,</span>                        database<span class="token operator">=</span><span class="token string">'mydb'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""三个可以随意填充的数据"""</span>    ip<span class="token operator">=</span><span class="token string">''</span>    host<span class="token operator">=</span><span class="token string">''</span>    ns<span class="token operator">=</span><span class="token string">''</span>    <span class="token comment" spellcheck="true"># 手动设置interface_info</span>    interface_in_info<span class="token operator">=</span><span class="token string">'interface in-flowVlanif200'</span>    interface_out_info<span class="token operator">=</span><span class="token string">'interface out-flowVlanif200'</span>               <span class="token triple-quoted-string string">"""遍历csv文件"""</span>    <span class="token keyword">pass</span>    <span class="token triple-quoted-string string">"""读取csv文件并处理"""</span>    read_deal_csv<span class="token punctuation">(</span>r<span class="token string">'C:\Users\15256\Desktop\nowtime\补录流量'</span><span class="token punctuation">,</span><span class="token string">'1.csv'</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""数据库数据插入完成后关闭数据库"""</span>    <span class="token comment" spellcheck="true"># 关闭数据库连接</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python更新数据到mysql </tag>
            
            <tag> 读取execel数据 </tag>
            
            <tag> 插入数据到excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/2021/110263420.html"/>
      <url>/2021/110263420.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f1e9eb9cf127926b229d5519d3ac3a0c54549e07edb062f878d8afc6ee755ed1">793e42839e7bcdf5ec20d6466c3245e6a1177965da9af78b6d0c5982574866283af28eda785adacbed1c2b8f384df3cf92c5bb060b61d607723d358499bcc2c3b825a3089191aa97eba94e393dd70e37d998ac4706d7192f2f39fcc2a0e6e46019caec473e1f3c3f1043a1c8a12a446b575c3b01759c920d11ad5d564c6af77698526b04d3e5b349b297580a4644d40d7974e46863623e128b908c9daf15d63ef82115892e0371d7ea2436538d52d8b880b12ae0c76bd1bae00f11877b5395ccacf18833568b9e9319ec6de855f61dfc71758cc8ee713033a22549e59fda7f7c53ed8632d9be037ad088e0af39296036f51b99d0d0096ed647c82872871e1735dd9ca83c3246517d7d465812fbcf19376fde0cbe2e3dab906281d5f667f1440f3ee1ca261edec5fabfe49720cb6a6390cbb9166682e0c334d077d3ef6e1186a77e6972fdef5cc2bd6a50740f8fa486dbf0852c1a61ddbab83a4778a68a4f05f107d883f5980bde3511b3af2aeb55fe63dd7cd8562ecc20ccace85163da4c3addd0f398769ef39683ad5807b243a7bec10b0466c6d66cb7e963f89346185436780f04c1b933f5dd362d83c5ad0df627b8bae52672c6cc3fca8a3336d06c99fb863cfe411f0039c252e960d5733c16a6979248101405129e7173a3333e949fb708f6116ea528829f0ee89b0bf4b41a5ae69546248d2935c03ed66e288729254b15a0caf593bae392d8ecff8406cc47254a0cac3fd058b09946fa6e0d129bd5acc87b2343a6ff79488f3847163f070cdff3c4b502ea52c26b4add10a754e6e187a20625774f6045ed75021b18ad48f8a737cbf06c910b21b90773d52e865cc00ecb28a6a9e338235e0a47c977433e104158f53da42b2fd0840f810390350a008b70637bef0706aa671d00a4e9379a3ba57e695193c4272b49a1fd18894d6e74728fcf922dd4352ce67d088ac432b1538850511fdb1d77eaaea9a6e47832a6e017c57b6ea2b83255e0d090e7055e9db962f7fd6fa2fccabf12a54208177ac32dbfc16be4438ce763e0ce60b63ba4e4ce6ea623c28dca8743bde13db6f52e45b1f400c34da2d47043adf62497d510652796444221fcbcf6bf0d756f3f580826654570b30a52a39668ff5a95a1a028c057752767ee48011d9e47b4de62d8ddd8a7e85af60099a7897aea28220799ed0e5102cf6581ab057ed92b6dd05b7698cf669b13cd974d251236dd5238203147b25050ecba10b428e64b25f2035fb58f1fedf0d168dd4bf1e47af2ca93571c8eb296ff38d1ecd68ee5d2b67fc3cf7c8816ea3aa32824c201227e65663167c5cd2df1ef1c70186f7f5a89299fec78ec5d320ea8f4c0ebebf75ee44bbe349ca6b049e74142cf0cde27ec451d9c39f0c1462e45b11e4561f8c3e96ac02431fc1e7b6e6a7ea8e728ae9009ab2da56c3a16c886bb403e0410fcc5f217c99da8466b9c84e82c004113e321cbea6140a6c8567635b9046691be6298cf951fb09f904c4eaf47f13dfaafa8f7855366359882ba752cc1ce316c7dd2a73def31a0f20523d0e32e23ee236465a56c4aabb11348771a74417382aee2b87ac68087dab69da82c6d42faed051a54c541b85de23ee418d0cbdd087040a044c376c0aee1193d7be982339f5c2273a7ae901bf1ebf1f4ed266c348c50c7279a887c096df7b926c55be07772c632383124b943cc56ad13f5c3db84a9eee7692fa961551c1131e733ebff762ff6e06214cc19570e3da6460f627e23b5ac66c90ee247407855a8b5075d8fee262d2259f82310786663e61aeab6c5a0225be9db546ebe9b59b6d1e7387e220754ee1e0a74c6d8334dc0ff9fb7145c1d80463c181b37cd7b4617c04e948fa84e3758467a8b38607740d7bde56b8026e2c532aa763c6e59e0d396b427bd8e10578a848b9eb7ee25bf86152016c63f689036db731952e341f4add0146ba7e9e5b65cf98b3a0c021d74d8c21a5e6fb3bdb65df9b511b34cdc4b9f48d8f42715eb58360608ee8749d20c66bb9472541a6e8e40cbe390dd82912fb8ddc48626b69dc5d8f9a0121ed71e1c60b153a737012330fb612e7c9983db0d9564d82336cc578811e96655ad5c9933c3c49a7ceb865b9e2231bdf0b6387192882d60f7d20dc20759d5d96085dbdd155070de2e426feda5996c3ec8bd8d9245de2e6e477fa65dfda2116dca0da1762f6ca59d8c6a76e0b15fe72ce5972f0c54d97a83a20a4749b09d1e27e9e23fc0c6b3dd8533ad43825ee76e7d30614f4b71afe2570c7c8705ac411172cb8e147fd761d78598f734dc6765194782fb6db1c2c0d174ed6b454c1e0554dcc49454bc0769e5f8f4103a014f839994b06553c86390b3db0b9ec95bcd7535119197e034e80761f9862ac009dab102c320453aecffbcca8f6698d5cccd4b322f9eba8b9863726441f6560401f985ec3e5a7732a8754d9c91f8d694fdda2723a1bf815a19bafc414b3a09545e6c7472aa9f3548f8fe195bd5adfa88e0feecfc32e7f11810302ab5dad026fb6f0b86a843019eaa1b94931ed2946803c198e0e0f1a58e9573137de6edb32e08e29801ab377a5726eefce696cb68a6e992962e835bb6267b50195ffb138420c183f9cd9836c26d4857790923664bef608c41f6f62c1ceefe8e41559999cd7a107a351f731d83d83cf0a0e771d386c940c1d5fa3c8621920cc32813a3466bf6fa3141f3b356b2e369a1b7f4037a43cb417c57a095a548cc3bf7d971b71e834fb545161af7f6d44fed83884c93f2e3602c7ed113b2b89b5db8abe17b6a0a2ee74a7486b780671510501d33195012ae9c5938e588d52b0d5f8fb17fc9642ac348f5b2df04339f5806555b442be05d71c3df3db3e8db7304e8fa277e7f25f5679db41a4c6b98cd851fde5e566dc258317db7058c21382afb303e0c054c5a487e2fbb166a4a47b9fb7a5439895851390a8767422e43a3f06c2adf0addfd6e66e548fcbc72ff7fee7659beebd5167da1c9f2a8ddbc0fba93d3764509ed7a04ad4389f8bf5bbfb3433fd8bb9077dc8f406e0ac1fa7bfa36b2c5137074492aa22ecc62490fc56ea4bd9fa8f602aaea62ef0564fa001903ffca57be0314445cf69cd67699c5f0be4b7a5e249ff783c7a206fd05ca49369addc7f856d1de5e20c2f1b13673c41552fded68ce9f66426426823ae7cb3dd320ea506a30354683557c03e31a141b5e8348d4fb7362c7daeae555ca72dd2871cbd8f476b923bbe0452563fd4299ada1adc8b1168c283f3e1605cce4b18406c92d16ca5bd6ba7b0f8a90a69e107132d44a5bc834d00b81ed083ccb34aeb8e6e1a18dd0eeda99992a56eda0c5dc572b969eb09572b5ccfed3feaf2fe0b18eab556301bdd7522b862c73267121549f30bd1dc9b32786ff6592a0bafe3571b78438f571bf91c14c38de090a537a4b0ac78d8d4c10d14a80ac26f3a5977903b306d418e93d5dff160ef76a6c0328d112c591cc83d72814326f9b92ecd0b6623ea1d4a128</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防火墙连接云端详细配置</title>
      <link href="/2021/101910496.html"/>
      <url>/2021/101910496.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bcb9a7b69340432a8f86150a74acfbe84f68a2c72aa2c6f38922bf8b73bebff3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为防火墙连接云端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为USG防火墙二层部署</title>
      <link href="/2021/10194219.html"/>
      <url>/2021/10194219.html</url>
      
        <content type="html"><![CDATA[<h1 id="华为USG600V防火墙二层部署"><a href="#华为USG600V防火墙二层部署" class="headerlink" title="华为USG600V防火墙二层部署"></a><code>华为USG600V防火墙二层部署</code></h1><h2 id="1-整体拓扑及简介"><a href="#1-整体拓扑及简介" class="headerlink" title="1. 整体拓扑及简介"></a><code>1. 整体拓扑及简介</code></h2><p><a href="https://shixiuhai.github.io/work_share/USG6000V2.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载华为USG6000V防火墙二层部署ensp项目</a></p><blockquote><p>(1) 此拓扑是USG6000V的一个简单的二层部署，本项目的目标是实现vlan间的相互通信，所有pc都可以成功上网，上网的标志是所有的pc都能ping通114.114.114.114 这个地址。</p><p>(2) pc1和pc2属于vlan10，pc3和和pc4属于vlan20，pc5和pc6属于vlan30。sw1、sw2、sw3、sw0属于二层交换机，在上面划分了vlan相关，FW1是USG6000V防火墙这里做了二层的部署，cloud2在这里可以理解为三层的接入层（连接internat的路由器）。cloud1使用了防火墙GE0/0/0接口做为管理接口，实现PC登录防火墙的web页面进行防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/usg%E4%BA%8C%E5%B1%82%E9%83%A8%E7%BD%B2%E6%8B%93%E6%89%91.PNG" alt="二层部署拓扑"></p><h2 id="2-pc具体配置"><a href="#2-pc具体配置" class="headerlink" title="2. pc具体配置"></a><code>2. pc具体配置</code></h2><p>(1) pc1和pc2的配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc1%E5%92%8Cpc2%E9%85%8D%E7%BD%AE.PNG" alt="pc1-pc2"></p><p>（2）pc3和pc4配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc3%E5%92%8Cpc4%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="pc3-pc4"></p><p>(3) pc5和pc6配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc5%E5%92%8Cpc6%E9%85%8D%E7%BD%AE.PNG" alt="pc5-pc6"></p><h2 id="3-交换机具体配置"><a href="#3-交换机具体配置" class="headerlink" title="3. 交换机具体配置"></a><code>3. 交换机具体配置</code></h2><blockquote><p>这里描述了交换机的配置</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## sw1的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw2的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw3的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan30</span>port-group vlan30<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 30<span class="token comment" spellcheck="true">## sw0的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan 10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组命名为vlanall</span>port-group vlanall<span class="token comment" spellcheck="true"># 将g0/0/1到g0/0/4划入到端口组中</span>group-member GigabitEthernet0/0/1 to g0/0/4<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type trunk<span class="token comment" spellcheck="true"># 设置trunk允许通过的端口</span>port trunk allow-pass vlan 10 20</code></pre><h2 id="4-cloud1的具体配置"><a href="#4-cloud1的具体配置" class="headerlink" title="4. cloud1的具体配置"></a><code>4. cloud1的具体配置</code></h2><blockquote><p>这里需要先介绍一下cloud1的配置，因为后期需要通过本机的web页面登录防火墙实现对防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud1%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="cloud1"></p><p>这里不同电脑vmnet1的ip地址可能不同，比如我这里的ip是192.168.157.1那么我的防火墙G0/0/0地址就必须配置一个和192.168.157.1 同一个网段的地址。这里我防火墙ip地址配置的是192.168.157.5/24，具体ip配置可以进入ensp项目中通过终端查看防火墙的ip配置。这里防火墙G0/0/0接口里我配置了多个地址，但是只有192.168.157.5是有效的。所以由于不同电脑的vmnet的地址段不一样，你需要根据自己电脑的地址端在自己的防火墙上进行修改，或者你可以直接将vmnet1修改成和我一样的地址段。</p><h2 id="5-cloud2的具体配置"><a href="#5-cloud2的具体配置" class="headerlink" title="5. cloud2的具体配置"></a><code>5. cloud2的具体配置</code></h2><blockquote><p>这里cloud2的配置有点复杂，这里我们为了实现pc可以上外网，即可以ping通114.114.114.114，我们需要为cloud2绑定的vmnet8再绑定一下本机可以上网的网卡。</p></blockquote><p>(1) 创建cloud2绑定网卡</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud%E9%85%8D%E7%BD%AE1.PNG" alt="cloud2"></p><p>这里的vmnet8这个192.168.1.1 ip无需过多关注，因为cloud2的网关是我们通过绑定到本机可上网的网卡获取的。这里的地址现在绑定过上网网卡后还没有改变过来，所以这个192.168.1.1部署cloud2的实际地址，查看实现地址的方法如下，或者关闭ensp项目重新打开这里的vmnet8就可以获取真正的cloud2的地址了。</p><p>(2）绑定本机可上网网卡并获取cloud2的实际可使用网卡地址</p><blockquote><p>点击更改适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A81.png"></p><blockquote><p>打开WLAN适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/WLAN%E9%80%82%E9%85%8D%E5%99%A8.png"></p><blockquote><p>选择属性</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%B1%9E%E6%80%A7.png"></p><blockquote><p>设置共享</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%85%B1%E4%BA%AB.png"></p><blockquote><p>通过VMnet8查看cloud2实际ip地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%80%82%E9%85%8D%E5%99%A82.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>查看详细信息</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%9B%B8%E4%BF%A1%E4%BF%A1%E6%81%AF2.png"></p><p>这里的192.168.137.1可以认为是我们得到cloud2的真正的ip地址，用来做防火墙的网关，所以防火墙的上连接口需要配置一个和这个地址同一个网段ip地址，在我的项目中我配置了192.168.137.6/24这个地址。</p><h2 id="6-USG6000V的具体配置"><a href="#6-USG6000V的具体配置" class="headerlink" title="6. USG6000V的具体配置"></a><code>6. USG6000V的具体配置</code></h2><blockquote><p>这里我同样只是对防火墙上网进行了基本配置，但是这里是二层部署的配置，二层部署一般可以选择接口对模式或者交换模式。这里有一点需要重点强调！！！ 防火墙做二层部署一定需要记得创建vlan，不管接口对模式还是交换模式一定记得创建vlan。</p></blockquote><p>(1) 使用web界面登录到防火墙</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/web%E7%99%BB%E5%BD%95.PNG" alt="usgweb"></p><p>(2) 创建vlan 10 20 30</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%98%B2%E7%81%AB%E5%A2%99%E5%88%9B%E5%BB%BAvlan.png" alt="创建vlan"></p><p>这里GE0/0/0做为连接cloud1的接口使用，GE1/0/0用于连接交换机sw0，GE1/0/1做为防火墙的出口。</p><p>(3) 配置接口对</p><blockquote><p>接口位置选择 安全区域 连接类型 允许的vlan 接口模式</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E6%8E%A5%E5%8F%A3%E5%AF%B91.png" alt="接口对配置"></p><blockquote><p>接口对位置进行一下配置</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E6%8E%A5%E5%8F%A3%E5%AF%B92.png" alt="接口对配置"></p><p>(4) 配置安全策略</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A51.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A52.png" alt="安全策略"></p><p>这里只是对默认的default策略开启了全部允许，快速实现trust到untrst的策略设置，实际配置中会建立多条安全策略。</p><h2 id="7-路由器AR2配置"><a href="#7-路由器AR2配置" class="headerlink" title="7. 路由器AR2配置"></a><code>7. 路由器AR2配置</code></h2><blockquote><p>这里路由器需要配置静态缺省路由和nat，其中缺省路由是为了实现下面多个vlan的pc可以上网，缺省路由实现AR2可以访问外网，当AR2可以访问外网后下面所有vlan下pc即可通过AR2实现访问外网。</p></blockquote><p>配置NAT和静态路由</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 这里nat配置Easy ip的方式，即多对一的方式</span><span class="token comment" spellcheck="true"># 创建acl 2000</span>acl 2000rule permit <span class="token function">source</span> 10.0.0.0 0.0.0.255rule permit <span class="token function">source</span> 172.1.1.0 0.0.0.255rule permit <span class="token function">source</span> 192.168.0.0 0.0.0.255<span class="token comment" spellcheck="true"># 设置NAT地址池的转换策略</span>int e0/0/8nat outbound 2000 <span class="token comment" spellcheck="true">## 配置缺省路由</span><span class="token comment" spellcheck="true"># 这里我们配置的是一条缺省路由实现出去，192.168.137.1就是我们前面获取cloud2的真正的地址，来做为防火墙的下一跳，出接口是GE1/0/1接口</span>ip route-static 0.0.0.0 0.0.0.0 192.168.137.1 </code></pre><h2 id="8-验证是否实现上网"><a href="#8-验证是否实现上网" class="headerlink" title="8. 验证是否实现上网"></a><code>8. 验证是否实现上网</code></h2><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%AA%8C%E8%AF%81.PNG"></p><p>这里选择vlan10的pc1和vlan30的pc5进行了一个验证，得pc上外网成功，至此这个项目操作结束。</p><h2 id="9-项目总结"><a href="#9-项目总结" class="headerlink" title="9. 项目总结"></a><code>9. 项目总结</code></h2><p>（1）本项目复习了华为交换机vlan的划分创建</p><p>（2）本项目验证了防火墙二层部署的简单情况</p><p>（3）本项目的难点在于cloud2配置绑定WLAN网卡，和防火墙需要配置一条缺省路由</p><p>（4）本项目的防火墙web配置也可以通过命令配置</p><p>（5）本项目对路由器进行了简单的nat配置和静态缺省路由配置</p><p>（6）本项目需要强调一下防火墙在做二层部署的时候一定要创建需要的vlan</p><h2 id="10-小贴士常用查询某个配置的命令"><a href="#10-小贴士常用查询某个配置的命令" class="headerlink" title="10. 小贴士常用查询某个配置的命令"></a><code>10. 小贴士常用查询某个配置的命令</code></h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 进如命令模式进行命令配置</span>system-view <span class="token comment" spellcheck="true"># 配置命令的第一步</span><span class="token comment" spellcheck="true">## 查询当前的配置</span>display this<span class="token comment" spellcheck="true">## 查询创建了哪些vlan</span>display vlan<span class="token comment" spellcheck="true">## 设备状态信息刷屏</span>Tab<span class="token comment" spellcheck="true">## 查询接口配置ip状态</span>display ip interface brief<span class="token comment" spellcheck="true">## 查询接口状态</span>display interface brief<span class="token comment" spellcheck="true">## 清晰查看端口属于哪个vlan</span>display port vlan<span class="token comment" spellcheck="true">## 查看路由表</span>display ip routing-table<span class="token comment" spellcheck="true">## 查看接口有哪些配置</span>int 接口名display this</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USG6000V二层部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为USG防火墙三层部署</title>
      <link href="/2021/101947200.html"/>
      <url>/2021/101947200.html</url>
      
        <content type="html"><![CDATA[<h1 id="华为USG600V防火墙三层部署"><a href="#华为USG600V防火墙三层部署" class="headerlink" title="华为USG600V防火墙三层部署"></a><code>华为USG600V防火墙三层部署</code></h1><h2 id="1-整体拓扑及简介"><a href="#1-整体拓扑及简介" class="headerlink" title="1. 整体拓扑及简介"></a><code>1. 整体拓扑及简介</code></h2><p><a href="https://shixiuhai.github.io/work_share/USG6000V.zip"  target="_blank"  style="color: #8ebf42"> 点击这里下载华为USG6000V防火墙三层部署ensp项目</a></p><blockquote><p>(1) 此拓扑是USG600V一个简单的三层部署，本项目实现的目标是不同vlan之间可以相互通信，所有的pc都可以上网，上网的标志是所有的pc都可以ping通114.114.114.114这个地址。</p><p>(2) pc1和pc2属于vlan10，pc3和和pc4属于vlan20，pc5和pc6属于vlan30。sw1、sw2、sw3、sw0属于二层交换机，在上面划分了vlan相关，FW1是USG6000V防火墙这里做了三层的部署，cloud2在这里可以理解为三层的接入层（连接internat的路由器）。cloud1使用了防火墙GE0/0/0接口做为管理接口，实现PC登录防火墙的web页面进行防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%89%E5%B1%82%E9%83%A8%E7%BD%B2%E7%AE%80%E5%8D%95%E6%8B%93%E6%89%911.PNG"></p><h2 id="2-pc具体配置"><a href="#2-pc具体配置" class="headerlink" title="2. pc具体配置"></a><code>2. pc具体配置</code></h2><p>(1) pc1和pc2的配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc1%E5%92%8Cpc2%E9%85%8D%E7%BD%AE.PNG" alt="pc1-pc2"></p><p>（2）pc3和pc4配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc3%E5%92%8Cpc4%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="pc3-pc4"></p><p>(3) pc5和pc6配置</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pc5%E5%92%8Cpc6%E9%85%8D%E7%BD%AE.PNG" alt="pc5-pc6"></p><h2 id="3-交换机具体配置"><a href="#3-交换机具体配置" class="headerlink" title="3. 交换机具体配置"></a><code>3. 交换机具体配置</code></h2><blockquote><p>这里描述了交换机的配置</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## sw1的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw2的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan10</span>port-group vlan10<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 10<span class="token comment" spellcheck="true">## sw3的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组并命名为vlan30</span>port-group vlan30<span class="token comment" spellcheck="true"># 将e0/0/2 到 e0/0/3划入到端口组中</span>group-member e0/0/2 to e0/0/3<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type access<span class="token comment" spellcheck="true"># 设置端口属于vlan</span>port default vlan 30<span class="token comment" spellcheck="true">## sw0的配置</span><span class="token comment" spellcheck="true"># 端口组的方式配置</span><span class="token comment" spellcheck="true"># 创建vlan 10 20 30</span>vlan batch 10 20 30<span class="token comment" spellcheck="true"># 创建端口组命名为vlanall</span>port-group vlanall<span class="token comment" spellcheck="true"># 将g0/0/1到g0/0/4划入到端口组中</span>group-member GigabitEthernet0/0/1 to g0/0/4<span class="token comment" spellcheck="true"># 设置端口类型trunk 或者 access</span>port link-type trunk<span class="token comment" spellcheck="true"># 设置trunk允许通过的端口</span>port trunk allow-pass vlan 10 20</code></pre><h2 id="4-cloud1的具体配置"><a href="#4-cloud1的具体配置" class="headerlink" title="4. cloud1的具体配置"></a><code>4. cloud1的具体配置</code></h2><blockquote><p>这里需要先介绍一下cloud1的配置，因为后期需要通过本机的web页面登录防火墙实现对防火墙的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud1%E7%9A%84%E9%85%8D%E7%BD%AE.PNG" alt="cloud1"></p><p>这里不同电脑vmnet1的ip地址可能不同，比如我这里的ip是192.168.157.1那么我的防火墙G0/0/0地址就必须配置一个和192.168.157.1 同一个网段的地址。这里我防火墙ip地址配置的是192.168.157.5/24，具体ip配置可以进入ensp项目中通过终端查看防火墙的ip配置。这里防火墙G0/0/0接口里我配置了多个地址，但是只有192.168.157.5是有效的。所以由于不同电脑的vmnet的地址段不一样，你需要根据自己电脑的地址端在自己的防火墙上进行修改，或者你可以直接将vmnet1修改成和我一样的地址段。</p><h2 id="5-cloud2的具体配置"><a href="#5-cloud2的具体配置" class="headerlink" title="5. cloud2的具体配置"></a><code>5. cloud2的具体配置</code></h2><blockquote><p>这里cloud2的配置有点复杂，这里我们为了实现pc可以上外网，即可以ping通114.114.114.114，我们需要为cloud2绑定的vmnet8再绑定一下本机可以上网的网卡。</p></blockquote><p>(1) 创建cloud2绑定网卡</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/cloud%E9%85%8D%E7%BD%AE1.PNG" alt="cloud2"></p><p>这里的vmnet8这个192.168.1.1 ip无需过多关注，因为cloud2的网关是我们通过绑定到本机可上网的网卡获取的。这里的地址现在绑定过上网网卡后还没有改变过来，所以这个192.168.1.1部署cloud2的实际地址，查看实现地址的方法如下，或者关闭ensp项目重新打开这里的vmnet8就可以获取真正的cloud2的地址了。</p><p>(2）绑定本机可上网网卡并获取cloud2的实际可使用网卡地址</p><blockquote><p>点击更改适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A81.png"></p><blockquote><p>打开WLAN适配器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/WLAN%E9%80%82%E9%85%8D%E5%99%A8.png"></p><blockquote><p>选择属性</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%B1%9E%E6%80%A7.png"></p><blockquote><p>设置共享</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%85%B1%E4%BA%AB.png"></p><blockquote><p>通过VMnet8查看cloud2实际ip地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E9%80%82%E9%85%8D%E5%99%A82.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>查看详细信息</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E7%9B%B8%E4%BF%A1%E4%BF%A1%E6%81%AF2.png"></p><p>这里的192.168.137.1可以认为是我们得到cloud2的真正的ip地址，用来做防火墙的网关，所以防火墙的上连接口需要配置一个和这个地址同一个网段ip地址，在我的项目中我配置了192.168.137.6/24这个地址。</p><h2 id="6-USG6000V的具体配置"><a href="#6-USG6000V的具体配置" class="headerlink" title="6. USG6000V的具体配置"></a><code>6. USG6000V的具体配置</code></h2><blockquote><p>这里我只是对防火墙能进行上网进行了配置，并不包含USG6000V的IPSEC隧道的打通、北向接口、日志上传、防火墙更新这些相关配置。防火墙上云端的相关配置请参考文章 <a href="https://fuyaoershang.xyz/2021/101910496.html">防火墙连接云端详细配置 </a>，这里的配置全部基于web页面进行配置。</p></blockquote><p>(1) 使用web界面登录到防火墙</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/web%E7%99%BB%E5%BD%95.PNG" alt="usgweb"></p><p>(2) 配置防火墙ip地址相关</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/image-20211019114515487.png" alt="防火墙ip"></p><p>这里GE0/0/0作为连接cloud1的接口使用。GE1/0/0做了三个子接口，用于作为下面三个vlan的网关来使用。GE1/0/1做为防火墙的出口。</p><p>(3) 配置安全策略</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A51.png"></p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A52.png" alt="安全策略"></p><p>这里只是对默认的default策略开启了全部允许，只是为了能够上网。</p><p>(4) nat策略配置（配置源地址转换，实现下面三个vlan的任意一个主机都可以上网）</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/pcnat%E7%AD%96%E7%95%A5%E4%B8%8A%E7%BD%91%E9%85%8D%E7%BD%AE.png" alt="nat策略"></p><p>(5) 配置路由使我们实现真正的上外网（ping 通 114.114.114.114）</p><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%B7%AF%E7%94%B1.png" alt="缺省路由"></p><p>这里我们配置的是一条缺省路由实现出去，192.168.137.1就是我们前面获取cloud2的真正的地址，来做为防火墙的下一条，出接口是GE1/0/1接口。</p><h2 id="7-验证是否实现上网"><a href="#7-验证是否实现上网" class="headerlink" title="7. 验证是否实现上网"></a><code>7. 验证是否实现上网</code></h2><p><img src="https://cdn.jsdelivr.net/gh/shixiuhai/Gallery1@master/%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%AA%8C%E8%AF%81.PNG"></p><p>这里选择vlan10的pc1和vlan30的pc5进行了一个验证，得pc上外网成功，至此这个项目操作结束。</p><h2 id="8-项目总结"><a href="#8-项目总结" class="headerlink" title="8. 项目总结"></a><code>8. 项目总结</code></h2><p>（1）本项目复习了华为交换机vlan的划分创建</p><p>（2）本项目验证了防火墙三层部署的简单情况</p><p>（3）本项目的难点在于cloud2配置绑定WLAN网卡，和防火墙需要配置一条缺省路由</p><p>（4）本项目的防火墙web配置也可以通过命令配置</p><h2 id="9-小贴士常用查询某个配置的命令"><a href="#9-小贴士常用查询某个配置的命令" class="headerlink" title="9. 小贴士常用查询某个配置的命令"></a><code>9. 小贴士常用查询某个配置的命令</code></h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 进如命令模式进行命令配置</span>system-view <span class="token comment" spellcheck="true"># 配置命令的第一步</span><span class="token comment" spellcheck="true">## 查询当前的配置</span>display this<span class="token comment" spellcheck="true">## 查询创建了哪些vlan</span>display vlan<span class="token comment" spellcheck="true">## 设备状态信息刷屏</span>Tab<span class="token comment" spellcheck="true">## 查询接口配置ip状态</span>display ip interface brief<span class="token comment" spellcheck="true">## 查询接口状态</span>display interface brief<span class="token comment" spellcheck="true">## 清晰查看端口属于哪个vlan</span>display port vlan<span class="token comment" spellcheck="true">## 查看路由表</span>display ip routing-table<span class="token comment" spellcheck="true">## 查看接口有哪些配置</span>int 接口名display this</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USG6000V三层部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-lfs的使用</title>
      <link href="/2021/101656698.html"/>
      <url>/2021/101656698.html</url>
      
        <content type="html"><![CDATA[<h2 id="git-lfs使用"><a href="#git-lfs使用" class="headerlink" title="git-lfs使用"></a><code>git-lfs使用</code></h2><blockquote><p>这是一个引用测试 &gt;</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 开启lfs功能</span><span class="token function">git</span> lfs <span class="token function">install</span> <span class="token comment" spellcheck="true"># clone仓库到本地</span><span class="token function">git</span> lfs clone ?.url.git <span class="token comment" spellcheck="true"># 使用git clone也可以</span><span class="token comment" spellcheck="true"># 命令进行大文件追踪</span><span class="token function">git</span> lfs track <span class="token comment" spellcheck="true">#  例如git lfs track "*.png" 追踪所有后缀为png的文件</span><span class="token comment" spellcheck="true"># 查看现有的文件追踪模式,执行过 git lfs track file 后可以查看追踪了哪些文件</span><span class="token function">git</span> lfs track <span class="token comment" spellcheck="true"># 提交代码需要将gitattributes文件提交至仓库. 它保存了文件的追踪记录</span><span class="token function">git</span> add .gitattributes<span class="token comment" spellcheck="true"># .gitattributes文件提交后可以运行以下命令查看当前跟踪的文件列表</span><span class="token function">git</span> lfs ls-files <span class="token comment" spellcheck="true"># 上传和git方式一样</span><span class="token function">git</span> add file.psd<span class="token function">git</span> commit -m <span class="token string">"Add design file"</span><span class="token function">git</span> push origin main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 代码托管平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git-lfs使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传项目代码到github</title>
      <link href="/2021/101621696.html"/>
      <url>/2021/101621696.html</url>
      
        <content type="html"><![CDATA[<h2 id="代码托管到github平台"><a href="#代码托管到github平台" class="headerlink" title="代码托管到github平台"></a><code>代码托管到github平台</code></h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 设置 username 和 email，添加远程地址</span><span class="token function">git</span> config --global user.name <span class="token string">"your name"</span><span class="token function">git</span> config --global user.email <span class="token string">"your_email@youremail.com"</span><span class="token comment" spellcheck="true"># 下载ssh私钥到本地</span><span class="token function">cd</span> ?/.ssh <span class="token comment" spellcheck="true"># 在windows或者linux的.ssh目录里把私钥拷贝下来,私钥的文件名字为id_rsa</span><span class="token comment" spellcheck="true"># 验证成功设置好用户名和密钥</span><span class="token function">ssh</span> -T git@github.com <span class="token comment" spellcheck="true"># 成功会出现Hi shixiuhai! You've successfully authenticated, but GitHub does not provide shell access.</span><span class="token comment" spellcheck="true"># 查看git本地初始化</span><span class="token function">git</span> config --list<span class="token comment" spellcheck="true">## 创建一个本地仓库并修改</span><span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 创建本地仓库</span><span class="token function">git</span> init<span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 查看本地仓库文件状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true">## 将git clone下载到本地 生成的本地仓库 提交到远程仓库</span><span class="token function">git</span> clone ?.url.git<span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# smarthome"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 查看本地仓库文件状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true"># 把本地仓库文件上传到远程仓库</span><span class="token function">git</span> push <span class="token comment" spellcheck="true">## 在本地创建好项目上传到远程仓库</span><span class="token comment" spellcheck="true"># 创建一个文件命名为README.md并写入"# smarthome"</span><span class="token keyword">echo</span> <span class="token string">"# shixiuhai"</span> <span class="token operator">>></span> README.md<span class="token comment" spellcheck="true"># 创建本地仓库</span><span class="token function">git</span> init<span class="token comment" spellcheck="true"># 把README.md项目文件添加到本地暂存区</span><span class="token function">git</span> add README.md <span class="token comment" spellcheck="true"># git add . 添加当前目录所有文件到本地仓库暂存区</span><span class="token comment" spellcheck="true"># 提交描述,并把暂存区内容提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment" spellcheck="true"># 提交到主分支上</span><span class="token function">git</span> branch -M main <span class="token comment" spellcheck="true"># 或者 创建名为main的分支</span><span class="token function">git</span> branch <span class="token comment" spellcheck="true"># 添加远程仓库对象origin和远程仓库地址</span><span class="token function">git</span> remote add origin git@github.com:shixiuhai/shixiuhai.git<span class="token comment" spellcheck="true"># 添加到远程仓库</span><span class="token function">git</span> push -u origin main <span class="token comment" spellcheck="true"># 或者git push -u origin master 或者git push  </span><span class="token comment" spellcheck="true">## 查看远程仓库对象和远程仓库连接地址</span><span class="token function">git</span> remote -v<span class="token comment" spellcheck="true">## 分支相关可参考 https://backlog.com/git-tutorial/cn/stepup/stepup2_3.html</span><span class="token comment" spellcheck="true">## 从远程仓库把代码修改合并到本地</span><span class="token function">git</span> pull <span class="token comment" spellcheck="true"># 或者 git pull origin, git pull 等于 git fetch remotename + git merge remotename branchname</span><span class="token comment" spellcheck="true">## 创建分支并和合并分支</span><span class="token function">git</span> branch branchname <span class="token comment" spellcheck="true"># 创建分支branchname是分支名字</span><span class="token comment" spellcheck="true"># 查看已经创建的分支</span><span class="token function">git</span> branch<span class="token comment" spellcheck="true"># 切换分支到branchname1 </span><span class="token function">git</span> checkout branchname1<span class="token comment" spellcheck="true"># 向master分支合并branchnam1分支</span><span class="token function">git</span> checkout master <span class="token comment" spellcheck="true"># 切换到主分支</span><span class="token function">git</span> merge issue1 <span class="token comment" spellcheck="true"># 将issue1分支合并到master</span><span class="token comment" spellcheck="true">## 删除已经创建的分支 branchname</span><span class="token function">git</span> branch -d branchname<span class="token comment" spellcheck="true">## 修改项目文件</span><span class="token comment" spellcheck="true"># 先进入修改</span>vim filename<span class="token comment" spellcheck="true"># 查看状态</span><span class="token function">git</span> status<span class="token comment" spellcheck="true"># 添加到暂存区</span><span class="token function">git</span> add filename<span class="token comment" spellcheck="true"># 暂存区提交到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"描述"</span><span class="token comment" spellcheck="true">## 删除项目文件</span><span class="token comment" spellcheck="true"># 从本地仓库中删除文件</span><span class="token function">git</span> <span class="token function">rm</span> filename<span class="token comment" spellcheck="true"># 删除源文件</span><span class="token function">rm</span> -rf filename<span class="token comment" spellcheck="true"># 提交暂存区到本地仓库</span><span class="token function">git</span> commit -m <span class="token string">"描述"</span><span class="token comment" spellcheck="true">## github设置全局代理</span><span class="token function">git</span> config --global https.proxy http://127.0.0.1:1080<span class="token function">git</span> config --global https.proxy https://127.0.0.1:1080<span class="token function">git</span> config --global --unset http.proxy<span class="token function">git</span> config --global --unset https.proxy<span class="token comment" spellcheck="true">## git上传指定账户和密码</span><span class="token function">git</span> push http://abc@qq.com:abc123456@git.xxx.com/www.git<span class="token function">git</span> push http://username:password@172.16.210.112/project/test.git<span class="token comment" spellcheck="true">## git下载指定账户和密码</span><span class="token function">git</span> clone http://abc@qq.com:abc123456@git.xxx.com/www.git</code></pre>]]></content>
      
      
      <categories>
          
          <category> 代码托管平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github基础配置 </tag>
            
            <tag> github设置代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由交换基础配置</title>
      <link href="/2021/10154050.html"/>
      <url>/2021/10154050.html</url>
      
        <content type="html"><![CDATA[<!-- # 路由交换 --><h2 id="第一章-路由交换基础相关"><a href="#第一章-路由交换基础相关" class="headerlink" title="第一章 路由交换基础相关"></a><code>第一章 路由交换基础相关</code></h2><h3 id="1-1-交换机划分vlan相关配置"><a href="#1-1-交换机划分vlan相关配置" class="headerlink" title="1.1 交换机划分vlan相关配置"></a><code>1.1 交换机划分vlan相关配置</code></h3><pre class=" language-shell"><code class="language-shell">## sw1-1配置# 端口组的方式# 创建vlan10 20 30vlan batch 10 20 30# 创建端口组并命名为vlan10port-group vlan10# 将e0/0/2 到 e0/0/3划入到端口组中group-member e0/0/2 to e0/0/3# 设置端口类型trunk 或者 accessport link-type access# 设置端口属于vlanport default vlan 10## sw1-2配置# 端口方式# 创建vlan10 20 30vlan batch 10 20 30# 进入到端口中int e0/0/1# 设置端口类似为 accessport link-type access# 设置端口属于vlanport default vlan 10## sw2-1配置# 端口组的方式# 创建vlan10 20 30vlan batch 10 20 30# 创建端口组并命名为vlan10port-group vlan10# 将e0/0/2 到 e0/0/3划入到端口组中group-member e0/0/2 to e0/0/3# 设置端口类型trunk 或者 accessport link-type access# 设置端口属于vlanport default vlan 10## sw2-2配置# 端口方式# 创建vlan10 20 30vlan batch 10 20 30# 进入到端口中int e0/0/1# 设置端口类似为 accessport link-type access# 设置端口属于vlanport default vlan 10## sw3配置# 批量创建vlan vlan batch 10 20 30# 创建端口组命名为vlanallport-group vlanall# 将g0/0/1到g0/0/4划入到端口组中group-member GigabitEthernet0/0/1 to g0/0/4# 设置端口类型trunk 或者 accessport link-type trunk# 设置trunk允许通过的端口port trunk allow-pass vlan 10 20</code></pre><h3 id="1-2-单臂路由基础配置"><a href="#1-2-单臂路由基础配置" class="headerlink" title="1.2 单臂路由基础配置"></a><code>1.2 单臂路由基础配置</code></h3><pre class=" language-shell"><code class="language-shell">## AR2配置# 进入e0/0/0接口int e0/0/0# 开启接口二层交换功能undo portswitch# 进入子接口e0/0/0.1并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 10ip address 10.0.0.1 255.255.255.0 arp broadcast enable# 进入子接口e0/0/0.2并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 20ip address 172.1.1.1 255.255.255.0 arp broadcast enable# 进入子接口e0/0/0.3并命名子接口为e0/0/0.1（例如e0/0/0.10也可以）int e0/0/0.1# 设置vid、ip、arp允许dot1q termination vid 30ip address 192.168.0.1 255.255.255.0 arp broadcast enable</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换基础 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web渗透</title>
      <link href="/2021/101455981.html"/>
      <url>/2021/101455981.html</url>
      
        <content type="html"><![CDATA[<h1 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a><code>web渗透</code></h1><h2 id="第1章-基本搜索工具的使用"><a href="#第1章-基本搜索工具的使用" class="headerlink" title="第1章 基本搜索工具的使用"></a><code>第1章 基本搜索工具的使用</code></h2><h3 id="1-1-Google语法使用"><a href="#1-1-Google语法使用" class="headerlink" title="1.1 Google语法使用"></a><code>1.1 Google语法使用</code></h3><p>关于谷歌相关的语法搜索列表</p><table><thead><tr><th>关键词</th><th>示例1</th><th>示例2</th></tr></thead><tbody><tr><td>site</td><td>site:edu.cn（搜索指定站点）</td><td>“site:edu.en”</td></tr><tr><td>link</td><td>link:<a href="http://www.baidu.com（这个的功能是查询所有链接到某个特定URL上的列表。要注意的是，是特定的URL页面，如输入：“link:www.baidu.com”进行搜索，如下图所示，就会返回所有链接到百度主页的网页了。因此，我们同样可以指定特定的URL页面来进行搜索）">www.baidu.com（这个的功能是查询所有链接到某个特定URL上的列表。要注意的是，是特定的URL页面，如输入：“link:www.baidu.com”进行搜索，如下图所示，就会返回所有链接到百度主页的网页了。因此，我们同样可以指定特定的URL页面来进行搜索）</a></td><td>“link:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>inurl</td><td>inurl:ww.baidu.com（inurl语法返回的网页链接中包含第一个关键字，后面的关键字则出现在链接中或者网页文档中）</td><td>“inurl:ww.baidu.com”</td></tr><tr><td>allinurl</td><td>allinurl:<a href="http://www.baidu.com(返回的网页的链接中包含所有查询关键字.这个查询的对象只集中于网页的链接字符串)/">www.baidu.com（返回的网页的链接中包含所有查询关键字。这个查询的对象只集中于网页的链接字符串）</a></td><td>“allinurl:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>intitle</td><td>intitle:index.of(allintitle和intitle的用法类似于上面的allinurl和inurl，只是后者对URL进行查询，而前者对网页的标题栏进行查询。网页标题，就是HTML标记语言中之间的部分。网页设计的一个原则就是要把主页的关键内容用简洁的语言表示在网页标题中。因此，只查询标题栏，通常也可以找到高相关率的专题页面)</td><td>“intitle:index.of”</td></tr><tr><td>allintitle</td><td>allintitle:index.of</td><td>“intitle:index.of”</td></tr><tr><td>info</td><td>info:<a href="http://www.baidu.com(这个语法可以搜索到关于一个url的更多信息的页面列表,这里的信息包括这个网页的cache,还有与这个网页相似的网页等等,注意下面的英文信息就好)/">www.baidu.com（这个语法可以搜索到关于一个URL的更多信息的页面列表，这里的信息包括这个网页的cache，还有与这个网页相似的网页等等，注意下面的英文信息就好）</a></td><td>“info:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>intext</td><td>intext:<a href="http://www.baidu.com（“intext:”是用来搜索网页正文内容的，这样就可以忽略网页中的超文本链接、URL和题目）">www.baidu.com（“intext:”是用来搜索网页正文内容的，这样就可以忽略网页中的超文本链接、URL和题目）</a></td><td>“intext:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>inanchor</td><td>inanchor:<a href="http://www.baidu.com（这个语法的意思是在页面的链接锚点进行搜索，链接锚点指的是一个链接的描述文本，如这样的一段HTML代码：`">www.baidu.com（这个语法的意思是在页面的链接锚点进行搜索，链接锚点指的是一个链接的描述文本，如这样的一段HTML代码：`</a><a href=https://www.baidu.com>百度</a>`，链接的锚点就是“百度”了）</td><td></td></tr><tr><td>related</td><td>related:<a href="http://www.sina.com.cn/index.shtml">www.sina.com.cn/index.shtml</a> (related用来搜索结构内容方面相似的网页。例：搜索所有与中文新浪网主页相似的页面如网易首页，搜狐首页，中华网首页等）</td><td>“related:<a href="http://www.sina.com.cn/index.shtml&quot;">www.sina.com.cn/index.shtml&quot;</a></td></tr><tr><td>cache</td><td>cache:<a href="http://www.baidu.com(cache可以帮助我们查找到google索引过的页面副本,它最大的好处就是及时源文件界面不存在了,或者变成了其它的内容,我们依然可以搜索的到)/">www.baidu.com（Cache可以帮助我们查找到google索引过的页面副本，它最大的好处就是及时源文件界面不存在了，或者变成了其它的内容，我们依然可以搜索的到）</a></td><td>“cache:<a href="http://www.baidu.com&quot;/">www.baidu.com&quot;</a></td></tr><tr><td>filetype</td><td>filetype:mdb（filetype是指搜索指定后缀的文件。这个不太常用，但是在黑客领域有一定的作用。但是我们的重点是讲解语法，如下图所示，输入“filetype:mdb”，结果就会显示出一些网站的数据库文件）</td><td>“filetype:pdf”</td></tr><tr><td>+</td><td>“关键词a” + “关键词b”</td><td></td></tr><tr><td>-</td><td>“关键词a” - “关键词b”</td><td></td></tr><tr><td>OR</td><td>“关键词a” OR “关键词b”</td><td></td></tr></tbody></table><h2 id="1-2-Shodan语法使用"><a href="#1-2-Shodan语法使用" class="headerlink" title="1.2 Shodan语法使用"></a><code>1.2 Shodan语法使用</code></h2><table><thead><tr><th>关键词</th><th>示例1</th></tr></thead><tbody><tr><td>一般搜索</td><td>关键词+关键词   apache2 country:”CN”/  webcam contry:”US” / “webcam” country:”US”</td></tr><tr><td>限定国家</td><td>country:”CN”</td></tr><tr><td>限定城市</td><td>city:”ShangHai”</td></tr><tr><td>限定主机名或域名</td><td>hostname:.org / hostname:”google” / hostname:baidu.com</td></tr><tr><td>限定组织或机构</td><td>org:”alibaba”</td></tr><tr><td>限定系统OS版本</td><td>os:”Windows Server 2008 R2”  / os:”Windows 7 or 8” / os:”Linux 2.6.x”</td></tr><tr><td>限定端口</td><td>port:22 / port:80</td></tr><tr><td>指定网段或ip</td><td>net:”59.56.19.0/24” / net:121.24.35.1</td></tr><tr><td>指定使用的软件或产品</td><td>product:”Apache httpd” / product:”nginx”/ product:”Microsoft IIS httpd” / product:”mysql”</td></tr><tr><td>指定CVE漏洞编号</td><td>vuln:”CVE-2014-0723”</td></tr><tr><td>指定网页内容</td><td>http.html:”hello world”</td></tr><tr><td>指定网页标题</td><td>http.title:”hello”</td></tr><tr><td>指定返回响应码</td><td>http.status:200</td></tr><tr><td>指定返回中的server类型</td><td>http.server:Apache/2.4.7 / http.server:PHP</td></tr><tr><td>指定地理位置</td><td>geo:”31.25,121.44”</td></tr><tr><td>指定ISP供应商</td><td>isp:”China Telecom”</td></tr><tr><td>搜索指定的软件版本</td><td>version:”7.1.4”</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="1-3-kali-网络、DNS配置、远程ssh连接配置"><a href="#1-3-kali-网络、DNS配置、远程ssh连接配置" class="headerlink" title="1.3 kali 网络、DNS配置、远程ssh连接配置"></a><code>1.3 kali 网络、DNS配置、远程ssh连接配置</code></h3><pre class=" language-shell"><code class="language-shell">#### 网络配置为静态网卡vim /etc/network/interfaces## 添加以下内容# The loopback network interfaceauto loiface lo inet loopbackauto eth0iface eth0 inet staticaddress 192.168.1.2netmask 255.255.255.0gateway 192.168.1.254dns-nameservers 114.114.114.114#### DNS配置为 114.114.114.114vim /etc/resolv.conf## 添加以下内容# Generated by NetworkManagernameserver 114.114.114.114#### 配置远程允许root用户和私钥进行ssh登录vim /etc/ssh/sshd_config## 修改或者添加一下内容# 允许root和秘钥登录PermitRootLogin yesPubkeyAuthentication yes</code></pre><h2 id="第2章-BurpSuite使用"><a href="#第2章-BurpSuite使用" class="headerlink" title="第2章 BurpSuite使用"></a><code>第2章 BurpSuite使用</code></h2><p>BurpSuite中文汉化版使用相关教程 <a href="https://www.xcnte.com/archives/426/">https://www.xcnte.com/archives/426/</a></p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="第三章-OSWAP使用"><a href="#第三章-OSWAP使用" class="headerlink" title="第三章 OSWAP使用"></a><code>第三章 OSWAP使用</code></h2><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="1-sqlmap-扫描"><a href="#1-sqlmap-扫描" class="headerlink" title="1 .sqlmap 扫描"></a><font color=gren>1 .sqlmap 扫描</font></h4><p>扫描网址：<a href="https://damocles.compoundevents.org/post.php?id=109">https://damocles.compoundevents.org/post.php?id=109</a></p><p>扫描参数：sqlmap -u “<a href="https://damocles.compoundevents.org/post.php?id=109&quot;">https://damocles.compoundevents.org/post.php?id=109&quot;</a>  –random-agent -D conmpoun6-wp232 –tables</p><p>数据表：</p><ul><li><p>compoun6_wp232</p></li><li><p>information_schema</p></li></ul><p>compoun6_wp232 数据库数据表：</p><p>+————————————+<br>| wpvs_commentmeta                   |<br>| wpvs_comments                      |<br>| wpvs_groups_capability             |<br>| wpvs_groups_group                  |<br>| wpvs_groups_group_capability       |<br>| wpvs_groups_user_capability        |<br>| wpvs_groups_user_group             |<br>| wpvs_links                         |<br>| wpvs_loginizer_logs                |<br>| wpvs_mendeleycache                 |<br>| wpvs_options                       |<br>| wpvs_postmeta                      |<br>| wpvs_posts                         |<br>| wpvs_teachpress_artefacts          |<br>| wpvs_teachpress_assessments        |<br>| wpvs_teachpress_authors            |<br>| wpvs_teachpress_course_capabilites |<br>| wpvs_teachpress_course_documents   |<br>| wpvs_teachpress_course_meta        |<br>| wpvs_teachpress_courses            |<br>| wpvs_teachpress_pub                |<br>| wpvs_teachpress_pub_capabilites    |<br>| wpvs_teachpress_pub_documents      |<br>| wpvs_teachpress_pub_imports        |<br>| wpvs_teachpress_pub_meta           |<br>| wpvs_teachpress_rel_pub_auth       |<br>| wpvs_teachpress_relation           |<br>| wpvs_teachpress_settings           |<br>| wpvs_teachpress_signup             |<br>| wpvs_teachpress_stud               |<br>| wpvs_teachpress_stud_meta          |<br>| wpvs_teachpress_tags               |<br>| wpvs_teachpress_user               |<br>| wpvs_term_relationships            |<br>| wpvs_term_taxonomy                 |<br>| wpvs_termmeta                      |<br>| wpvs_terms                         |<br>| wpvs_usermeta                      |<br>| wpvs_users                         |<br>+————————————+</p><p>information_schema 数据库数据表：</p><p>+—————————————+<br>| CHARACTER_SETS                        |<br>| CLIENT_STATISTICS                     |<br>| COLLATIONS                            |<br>| COLLATION_CHARACTER_SET_APPLICABILITY |<br>| COLUMN_PRIVILEGES                     |<br>| ENGINES                               |<br>| EVENTS                                |<br>| FILES                                 |<br>| GLOBAL_STATUS                         |<br>| GLOBAL_TEMPORARY_TABLES               |<br>| GLOBAL_VARIABLES                      |<br>| INDEX_STATISTICS                      |<br>| INNODB_BUFFER_PAGE                    |<br>| INNODB_BUFFER_PAGE_LRU                |<br>| INNODB_BUFFER_POOL_STATS              |<br>| INNODB_CHANGED_PAGES                  |<br>| INNODB_CMP                            |<br>| INNODB_CMPMEM                         |<br>| INNODB_CMPMEM_RESET                   |<br>| INNODB_CMP_PER_INDEX                  |<br>| INNODB_CMP_PER_INDEX_RESET            |<br>| INNODB_CMP_RESET                      |<br>| INNODB_FT_BEING_DELETED               |<br>| INNODB_FT_CONFIG                      |<br>| INNODB_FT_DEFAULT_STOPWORD            |<br>| INNODB_FT_DELETED                     |<br>| INNODB_FT_INDEX_CACHE                 |<br>| INNODB_FT_INDEX_TABLE                 |<br>| INNODB_LOCKS                          |<br>| INNODB_LOCK_WAITS                     |<br>| INNODB_METRICS                        |<br>| INNODB_SYS_COLUMNS                    |<br>| INNODB_SYS_DATAFILES                  |<br>| INNODB_SYS_FIELDS                     |<br>| INNODB_SYS_FOREIGN                    |<br>| INNODB_SYS_FOREIGN_COLS               |<br>| INNODB_SYS_INDEXES                    |<br>| INNODB_SYS_TABLES                     |<br>| INNODB_SYS_TABLESPACES                |<br>| INNODB_SYS_TABLESTATS                 |<br>| INNODB_SYS_VIRTUAL                    |<br>| INNODB_TABLESPACES_ENCRYPTION         |<br>| INNODB_TABLESPACES_SCRUBBING          |<br>| INNODB_TEMP_TABLE_INFO                |<br>| INNODB_TRX                            |<br>| KEY_COLUMN_USAGE                      |<br>| OPTIMIZER_TRACE                       |<br>| PARAMETERS                            |<br>| PARTITIONS                            |<br>| PLUGINS                               |<br>| PROCESSLIST                           |<br>| PROFILING                             |<br>| REFERENTIAL_CONSTRAINTS               |<br>| ROUTINES                              |<br>| SCHEMATA                              |<br>| SCHEMA_PRIVILEGES                     |<br>| SESSION_STATUS                        |<br>| SESSION_VARIABLES                     |<br>| TABLESPACES                           |<br>| TABLE_CONSTRAINTS                     |<br>| TABLE_PRIVILEGES                      |<br>| TABLE_STATISTICS                      |<br>| TEMPORARY_TABLES                      |<br>| THREAD_STATISTICS                     |<br>| TRIGGERS                              |<br>| USER_PRIVILEGES                       |<br>| USER_STATISTICS                       |<br>| VIEWS                                 |<br>| XTRADB_INTERNAL_HASH_TABLES           |<br>| XTRADB_READ_VIEW                      |<br>| XTRADB_RSEG                           |<br>| XTRADB_ZIP_DICT                       |<br>| XTRADB_ZIP_DICT_COLS                  |<br>| COLUMNS                               |<br>| STATISTICS                            |<br>| TABLES                                |<br>+—————————————+</p><p>查询其中某一张表的内容：</p><p>sqlmap -u “<a href="https://damocles.compoundevents.org/post.php?id=109&quot;">https://damocles.compoundevents.org/post.php?id=109&quot;</a>  -t 5  –random-agent -D information_schema   -T KEY_COLUMN_USAGE  –columns </p><p>查询表中的字段： </p><p>+——————-+————————————+<br>| user_login        | user_pass                          |<br>+——————-+————————————+<br>| dirkE             | $P$BphxuJTLbBrLRI70FK3Gq8uRKDFpoj1 |<br>| anaisC            | $P$B8u1KNzF5eFXVAe1ZVxcCxj8.2UO4j1 |<br>| NinaRidder        | $P$BzZeqQ.Qu02E89yI9eoSghcqUJ3Pcw1 |<br>| PhilipWard        | $P$Bsl4CSrPQ/Jr/U47kLw7MADCHrdiH90 |<br>| HesselWinsemius   | $P$BDpmNsugn4qXEo8r8L/rnH6Zr03zPz0 |<br>| EmanueleBevacqua  | $P$B4TLlQh.SnYS0AgfIA93TSmN0qELnr. |<br>| AntoniaSebastian  | $P$BLZpW2QSgwPlIlib5PnhCX4ahO/O7z1 |<br>| test              | $P$B9jxrqgOHfL71oTuraeFZmXZy7wY3X/ |<br>| KarinW            | $P$B1W5dvRnwZkDOVLl4Qza4xvD6TDwMo. |<br>| JakobZscheischler | $P$Bjlc/BfsIi7ENsyguNqGVs981Rxx1d/ |<br>| ThomasWahl        | $P$BWyrB0tusTrOxOYGq7MldJv2pYLVcM1 |<br>| AlexC             | $P$BqcYW6Nk6/RcERK7tuYfEu.WaiIyL30 |<br>| JannisH           | $P$BCBrg2m1tkIL.9f2ZKQs/shq2d5UuG/ |<br>| AloisT            | $P$BTfccK84Knge1ZbldGY5fqtGX8udAE. |<br>| DirkD             | $P$BsN7CeVOjrgvhQnXlcGSmTW58Ind5n1 |<br>| oliviaR           | $P$BmGLIII.l3i9roEgdEUInzid9DMp1y0 |<br>| AlexandreR        | $P$B1x/sgMfxOVAq72wVFMcnbeiY0nBQ8/ |<br>| WimT              | $P$BNcxFnJN.SMlhNB75FlLZxRVh.Devz/ |<br>| ColinR            | $P$BXK0R9cZpgu29VCs8/6jCMJPs5mfM9/ |<br>| ElisaR            | $P$BPEsvmIlt2xhoJ8tj1mw3LB30VOYaX. |<br>| MojtabaS          | $P$B9dhn/vo07px1PGgQPRHuzKu3phX1.1 |<br>+——————-+————————————+</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java笔记</title>
      <link href="/2021/101456103.html"/>
      <url>/2021/101456103.html</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA-学习笔记"><a href="#JAVA-学习笔记" class="headerlink" title="JAVA 学习笔记"></a>JAVA 学习笔记</h1><h3 id="java基础入门路线图参考"><a href="#java基础入门路线图参考" class="headerlink" title="java基础入门路线图参考"></a><code>java基础入门路线图参考</code></h3><ul><li><input checked="" disabled="" type="checkbox"> <strong>java环境配置</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java语言特性</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java体系平台</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java虚拟机</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java垃圾回收</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>jvm、jre、jdk关系</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java注释</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java文本编辑器和集成环境</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java 变量的概念和定义</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java数据类型</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>java算数运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>赋值运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>比较运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>逻辑运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>位运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>三元运算符</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>运算符优先级</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>顺序结构</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>分支结构</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>循环结果for和while</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>嵌套循环</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>一维数组和多维数组</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>数组常见算法</strong></li><li><input checked="" disabled="" type="checkbox"> <strong>面对对象编程</strong></li><li><input disabled="" type="checkbox"> <strong>类的写法</strong></li><li><input disabled="" type="checkbox"> <strong>对象创建和应用</strong></li><li><input disabled="" type="checkbox"> <strong>类的属性</strong></li><li><input disabled="" type="checkbox"> <strong>类的方法</strong></li><li><input disabled="" type="checkbox"> <strong>方法重载</strong></li><li><input disabled="" type="checkbox"> <strong>方法参数传递</strong></li><li><input disabled="" type="checkbox"> <strong>包package和引用import</strong></li><li><input disabled="" type="checkbox"> <strong>封装和隐藏</strong></li><li><input disabled="" type="checkbox"> <strong>访问权限修饰符</strong></li><li><input disabled="" type="checkbox"> <strong>类的构造方法</strong></li><li><input disabled="" type="checkbox"> <strong>构造方法重载</strong></li><li><input disabled="" type="checkbox"> <strong>this关键字</strong></li><li><input disabled="" type="checkbox"> <strong>_javaBean</strong></li><li><input disabled="" type="checkbox"> <strong>继承</strong></li><li><input disabled="" type="checkbox"> <strong>单继承和多继承</strong></li><li><input disabled="" type="checkbox"> <strong>父子类与访问修饰符的关系</strong></li><li><input disabled="" type="checkbox"> <strong>关键字super</strong></li><li><input disabled="" type="checkbox"> <strong>关键字super和this区别</strong></li><li><input disabled="" type="checkbox"> <strong>java对象实例化过程</strong></li><li><input disabled="" type="checkbox"> <strong>多态性</strong></li><li><input disabled="" type="checkbox"> <strong>对象类型转换</strong></li><li><input disabled="" type="checkbox"> <strong>==与equals</strong></li><li><input disabled="" type="checkbox"> <strong>包封装和tostring</strong></li><li><input disabled="" type="checkbox"> <strong>关键字static</strong></li><li><input disabled="" type="checkbox"> <strong>单例设计模式</strong></li><li><input disabled="" type="checkbox"> <strong>代码块</strong></li><li><input disabled="" type="checkbox"> <strong>关键字final</strong></li><li><input disabled="" type="checkbox"> <strong>抽象类</strong></li><li><input disabled="" type="checkbox"> <strong>模板设计方式</strong></li><li><input disabled="" type="checkbox"> <strong>接口</strong></li><li><input disabled="" type="checkbox"> <strong>工厂模式</strong></li><li><input disabled="" type="checkbox"> <strong>内部类</strong></li><li><input disabled="" type="checkbox"> <strong>捕获异常</strong></li><li><input disabled="" type="checkbox"> <strong>Hashset集合</strong></li><li><input disabled="" type="checkbox"> <strong>List集合</strong></li><li><input disabled="" type="checkbox"> <strong>map集合</strong></li><li><input disabled="" type="checkbox"> <strong>工具类Collections</strong></li><li><input disabled="" type="checkbox"> <strong>为什么使用范型</strong></li><li><input disabled="" type="checkbox"> <strong>范型相关</strong></li><li><input disabled="" type="checkbox"> <strong>file类及相关</strong></li><li><input disabled="" type="checkbox"> <strong>文件字节流相关</strong></li><li><input disabled="" type="checkbox"> <strong>对象流</strong></li><li><input disabled="" type="checkbox"> <strong>随机存取流</strong></li><li><input disabled="" type="checkbox"> <strong>反射机制概况</strong></li><li><input disabled="" type="checkbox"> <strong>class类</strong></li><li><input disabled="" type="checkbox"> <strong>反射机制相关</strong></li><li><input disabled="" type="checkbox"> <strong>java动态代理</strong></li><li><input disabled="" type="checkbox"> <strong>线程</strong></li><li><input disabled="" type="checkbox"> <strong>线程的同步与死锁</strong></li><li><input disabled="" type="checkbox"> <strong>线程通信</strong></li></ul><h2 id="第1章-Java-环境变量配置"><a href="#第1章-Java-环境变量配置" class="headerlink" title="第1章 Java 环境变量配置"></a><code>第1章 Java 环境变量配置</code></h2><ul><li><p>配置 JAVA_HOME 变量，在系统环境变量里添加JAVA_HOME变量 C:\Users\15256\OneDrive\史秀海项目\编程语言学习\java\jdk1.8.0_102\jdk1.8.0_102</p></li><li><p>配置CLASSPATH变量 ，在系统环境变量里添加</p><p>CLASSPATH变量  .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p></li><li><p>path变量添加两个：%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin;</p></li></ul><h2 id="第2章-java运算符相关"><a href="#第2章-java运算符相关" class="headerlink" title="第2章 java运算符相关"></a><code>第2章 java运算符相关</code></h2><h2 id="第3章-java循环结构相关"><a href="#第3章-java循环结构相关" class="headerlink" title="第3章 java循环结构相关"></a><code>第3章 java循环结构相关</code></h2><h2 id="第四章-类和对象相关"><a href="#第四章-类和对象相关" class="headerlink" title="第四章 类和对象相关"></a><code>第四章 类和对象相关</code></h2><h3 id="5-运行Java第一个程序-hello-word"><a href="#5-运行Java第一个程序-hello-word" class="headerlink" title="5.  运行Java第一个程序 hello word"></a>5.  运行Java第一个程序 hello word</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"hello word"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="程序基础逻辑集合"><a href="#程序基础逻辑集合" class="headerlink" title="程序基础逻辑集合"></a>程序基础逻辑集合</h3></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *      * 这是文本注释     * @param args     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 单行注释</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java变量的概念和定义        1. 基本数据类型(8种)            1. 整数数据类型（byte、short、int、long）            2. 浮点类型 （float、 double） float a = 1.22f            3. 字符类型 （char）            4. 布尔类型 （boolean） 布尔类型只要true和false        2. 引用数据类型            1. string类型 (String)            */</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">1.33f</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        c <span class="token operator">=</span> i <span class="token operator">+</span> a<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> <span class="token string">"hell"</span> <span class="token operator">+</span> <span class="token string">"o"</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"print word is "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        三元运算符（三目运算符）        条件表达式?表达式1:表达式2;        */</span>        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> k <span class="token operator">=</span> d <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取三个数中较大的数 （通过三元运算符号）</span>        <span class="token keyword">int</span> a1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a3 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1 <span class="token operator">></span> a2 <span class="token operator">?</span> <span class="token punctuation">(</span>a1 <span class="token operator">></span> a3 <span class="token operator">?</span> a1 <span class="token operator">:</span> a3<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>a2 <span class="token operator">></span> a3 <span class="token operator">?</span> a2 <span class="token operator">:</span> a3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java 分支结构 if-else, switch        */</span>        <span class="token keyword">int</span> b1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> k1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>b1 <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> k1 <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>b1 <span class="token operator">==</span><span class="token number">1</span> <span class="token operator">||</span> k1 <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// 如果数字1输出星期一以此类推 (case数字的应用)</span>       <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期二"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期六"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"星期天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不知道星期几"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>                  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// case 字符串上的使用</span>       String str <span class="token operator">=</span> <span class="token string">"bcd"</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"a"</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"bcd"</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"bcd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"I don'not know"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>               <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// case语句字符上的使用</span>       <span class="token keyword">int</span> s1 <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'a'</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'b'</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"no char"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">/*        java 循环结构 for while do/while        */</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i2 <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 三位数拆解各个位数</span>        <span class="token comment" spellcheck="true">// 通过while循环输出1到100数字</span>        <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>t <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"while 循环的值是 "</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>            t<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// for 循环return的使用</span>        <span class="token comment" spellcheck="true">// for(int v = 0; v &lt; 9; v++)&amp;#123;</span>        <span class="token comment" spellcheck="true">//     if(v == 7)&amp;#123;</span>                        <span class="token comment" spellcheck="true">//          return; // 看上去效果和break一样，实际上是退出整个类。</span>        <span class="token comment" spellcheck="true">//     &amp;#125;</span>        <span class="token comment" spellcheck="true">//     System.out.println(v);</span>                    <span class="token comment" spellcheck="true">// &amp;#125;</span>                <span class="token comment" spellcheck="true">/*        java 的一位数组定义        type var[]; 或者 type[] var;        int a[]; int[] a1; double b[]; Mydate[] c;        */</span>                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ii <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明一个能放4个int类型的数据数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ii0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明了一个存放1、2、3、4这四个数的数组</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 数组内每个数都有一个下标，这个下标是数字</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"strs的长度是 "</span> <span class="token operator">+</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/*        java 多维数组和命名方法         type var[][]; 或者 type[][] var;        */</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 第一维部分长度是2，第二维也就是第一维每个元素长度是3</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 只定义第一维长度，第二维不定义</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 二维数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 特殊写法，c1是一维数组，c2是二维数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数组的一维长度</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> g <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> g<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr0 <span class="token operator">=</span> arr<span class="token punctuation">[</span>g<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> llen <span class="token operator">=</span> arr0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// </span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> llen<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                res <span class="token operator">+=</span> arr0<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这个二维数组的和是："</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        java 常见数组算法        求数组中元素的最大值，最小值，总数，平均数        */</span>        <span class="token comment" spellcheck="true">// 求数组中元素最大值</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 最大值</span>        <span class="token keyword">int</span> max <span class="token operator">=</span> arr3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 假设 arr[0]是最大值</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i5 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i5 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i5<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arr3<span class="token punctuation">[</span>i5<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                max <span class="token operator">=</span> arr3<span class="token punctuation">[</span>i5<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//存放最大值</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 总和平均数</span>        <span class="token keyword">int</span> res1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i6 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i6<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            res1 <span class="token operator">+=</span> arr3<span class="token punctuation">[</span>i6<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"res1这个数组总和是："</span> <span class="token operator">+</span> res1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"res1这个数组的平均数是"</span> <span class="token operator">+</span> res1<span class="token operator">/</span><span class="token punctuation">(</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 注意复制不是赋值</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> copy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i7 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i7 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i7<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            copy<span class="token punctuation">[</span>i7<span class="token punctuation">]</span> <span class="token operator">=</span> arr3<span class="token punctuation">[</span>i7<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 反转</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i8 <span class="token operator">&lt;</span> arr3<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i8<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            temp<span class="token punctuation">[</span>i8<span class="token punctuation">]</span> <span class="token operator">=</span> arr3<span class="token punctuation">[</span>arr3<span class="token punctuation">.</span>length<span class="token operator">-</span>i8<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 数组元素排序 冒泡排序(从大到小或者从小到大进行排序)</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> m<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    temp1 <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    m<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp1<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*         面向对象编程         */</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明一个Person类型变量，变量名为person</span>        <span class="token comment" spellcheck="true">// new Person() 就是实例化Person类</span>        person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 给Person对象的name属性赋值</span>        person<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 对象方法调用</span>                       Animal ani <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ani<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">"大米小米"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ani<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token string">"飞翔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>Person 类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 人 *  */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    String name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 姓名,String 的默认值是null</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 年龄，int 的默认值是0</span>    <span class="token comment" spellcheck="true">// 行为, 方法, 也叫函数</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 方法的名称如果是多个单词,首个单词字母小写，其他字母单词大写，驼峰命名法</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>Animal 类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 动物的类 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    String name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 动物名称</span>    <span class="token keyword">int</span> eye<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 眼睛的个数</span>    <span class="token keyword">int</span> legs<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 几条腿</span>    <span class="token comment" spellcheck="true">/**     * param food 食物     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span>String food<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"此动物的食物是: "</span> <span class="token operator">+</span> food<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 动物的移动方式     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span>String moveType<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"此动物的移动方式是: "</span> <span class="token operator">+</span> moveType<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp配置相关</title>
      <link href="/2021/092915509.html"/>
      <url>/2021/092915509.html</url>
      
        <content type="html"><![CDATA[<h2 id="frp-服务端配置"><a href="#frp-服务端配置" class="headerlink" title="frp 服务端配置"></a>frp 服务端配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> frp_0.33.0_linux_amd64/<span class="token function">vi</span> frps.ini<span class="token punctuation">[</span>common<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># frp监听的端口，默认是7000，可以改成其他的</span>bind_port <span class="token operator">=</span> 7000<span class="token comment" spellcheck="true"># 授权码，请改成更复杂的</span>token <span class="token operator">=</span> 52010  <span class="token comment" spellcheck="true"># 这个token之后在客户端会用到</span><span class="token comment" spellcheck="true"># frp管理后台端口，请按自己需求更改</span>dashboard_port <span class="token operator">=</span> 7500<span class="token comment" spellcheck="true"># frp管理后台用户名和密码，请改成自己的</span>dashboard_user <span class="token operator">=</span> admindashboard_pwd <span class="token operator">=</span> adminenable_prometheus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># 配置http代理</span>vhost_http_port <span class="token operator">=</span> 80<span class="token comment" spellcheck="true"># 配置https代理</span>vhost_https_port <span class="token operator">=</span> 443<span class="token comment" spellcheck="true"># frp日志配置</span>log_file <span class="token operator">=</span> /var/log/frps.loglog_level <span class="token operator">=</span> infolog_max_days <span class="token operator">=</span> 3<span class="token comment" spellcheck="true">## 设置和启动frp服务</span><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/frp<span class="token function">sudo</span> <span class="token function">cp</span> frps.ini /etc/frp<span class="token function">sudo</span> <span class="token function">cp</span> frps /usr/bin<span class="token function">sudo</span> <span class="token function">cp</span> systemd/frps.service /usr/lib/systemd/system/<span class="token comment" spellcheck="true"># (或者 /lib/systemd/system)</span><span class="token function">sudo</span> systemctl <span class="token function">enable</span> frps<span class="token function">sudo</span> systemctl start frpssystemctl daemon-reloadsystemctl <span class="token function">enable</span> disk-space-check.service<span class="token comment" spellcheck="true">## 设计开机自启动</span>$ <span class="token function">cat</span> /usr/lib/systemd/system/mycmd.service<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description <span class="token operator">=</span> some shell script<span class="token comment" spellcheck="true"># 要求脚本具有可执行权限</span>ConditionFileIsExecutable<span class="token operator">=</span>/usr/bin/some.sh<span class="token comment" spellcheck="true"># 指定要运行的命令、脚本</span><span class="token punctuation">[</span>Service<span class="token punctuation">]</span>ExecStart <span class="token operator">=</span> /usr/bin/some.sh<span class="token comment" spellcheck="true"># 下面这段不能少</span><span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy <span class="token operator">=</span> multi-user.target$ systemctl daemon-reload$ systemctl <span class="token function">enable</span> mycmd.service<span class="token comment" spellcheck="true">## 防火墙开放端口</span><span class="token comment" spellcheck="true"># 添加监听端口</span><span class="token function">sudo</span> firewall-cmd --permanent --add-port<span class="token operator">=</span>7000/tcp<span class="token comment" spellcheck="true"># 添加管理后台端口</span><span class="token function">sudo</span> firewall-cmd --permanent --add-port<span class="token operator">=</span>7500/tcp<span class="token function">sudo</span> firewall-cmd --reload</code></pre><h2 id="frp-客户端配置"><a href="#frp-客户端配置" class="headerlink" title="frp 客户端配置"></a>frp 客户端配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> frpc.ini  <span class="token comment" spellcheck="true"># (注意哦，不是frps.ini)</span><span class="token comment" spellcheck="true"># 客户端配置</span><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> 服务器ipserver_port <span class="token operator">=</span> 7000 <span class="token comment" spellcheck="true"># 与frps.ini的bind_port一致</span>token <span class="token operator">=</span> 52010  <span class="token comment" spellcheck="true"># 与frps.ini的token一致</span><span class="token comment" spellcheck="true"># 配置ssh服务</span><span class="token punctuation">[</span>ssh<span class="token punctuation">]</span><span class="token function">type</span> <span class="token operator">=</span> tcplocal_ip <span class="token operator">=</span> 127.0.0.1local_port <span class="token operator">=</span> 22remote_port <span class="token operator">=</span> 6000  <span class="token comment" spellcheck="true"># 这个自定义，之后再ssh连接的时候要用</span><span class="token comment" spellcheck="true"># 配置http服务，可用于小程序开发、远程调试等，如果没有可以不写下面的</span><span class="token punctuation">[</span>web<span class="token punctuation">]</span><span class="token function">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> 127.0.0.1local_port <span class="token operator">=</span> 8080subdomain <span class="token operator">=</span> test.hijk.pw  <span class="token comment" spellcheck="true"># web域名</span>remote_port <span class="token operator">=</span> 自定义的远程服务器端口，例如8080<span class="token comment" spellcheck="true">## web相关配置</span><span class="token punctuation">[</span>walterlv_example_http<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 依然支持 http 访问</span><span class="token function">type</span> <span class="token operator">=</span> http<span class="token comment" spellcheck="true"># 本地 Web 服务的端口</span>local_port <span class="token operator">=</span> 10000<span class="token comment" spellcheck="true"># 需要反向代理的域名（当访客通过此域名访问 A 机器时，才会将请求反向代理到此 Web 服务）</span>custom_domains <span class="token operator">=</span> example.walterlv.com<span class="token punctuation">[</span>walterlv_example<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 配置 https 访问</span><span class="token function">type</span> <span class="token operator">=</span> https<span class="token comment" spellcheck="true"># 本地 Web 服务的端口（与前面的配置一样，都对应同一个 Web 服务）</span>local_port <span class="token operator">=</span> 10000<span class="token comment" spellcheck="true"># 需要反向代理的域名（当访客通过此域名访问 A 机器时，才会将请求反向代理到此 Web 服务）</span>custom_domains <span class="token operator">=</span> example.walterlv.com<span class="token comment" spellcheck="true"># 接下来的配置是支持 https 的重点配置</span><span class="token comment" spellcheck="true"># 配置插件，将 https 请求转换成 http 请求后再发送给本地 Web 服务程序</span>plugin <span class="token operator">=</span> https2http<span class="token comment" spellcheck="true"># 转换成 http 后，发送到本机的 10000 端口</span>plugin_local_addr <span class="token operator">=</span> 127.0.0.1:10000<span class="token comment" spellcheck="true"># 可能是 frp 的 Bug？这里必须写成 127.0.0.1，稍后解释</span>plugin_host_header_rewrite <span class="token operator">=</span> 127.0.0.1<span class="token comment" spellcheck="true"># 指定代理方式为 frp</span>plugin_header_X-From-Where <span class="token operator">=</span> frp<span class="token comment" spellcheck="true"># 指定成你在前面部分导出的证书的路径</span>plugin_crt_path <span class="token operator">=</span> C:/Samples/_.walterlv.com_chain.crtplugin_key_path <span class="token operator">=</span> C:/Samples/_.walterlv.com_key.key</code></pre><h2 id="测试穿透是否配置成功"><a href="#测试穿透是否配置成功" class="headerlink" title="测试穿透是否配置成功"></a>测试穿透是否配置成功</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> 用户名@服务端ip  -p 端口号<span class="token comment" spellcheck="true"># 这里一定要注意，这里用的是服务端的ip和用户名，端口号用的frpc.ini文件中的remote_port。如果你登录成功，那么，恭喜你，你已经学会了利用frc怎么配置内网穿透了！！！</span></code></pre><h3 id="frps-完整"><a href="#frps-完整" class="headerlink" title="frps 完整"></a>frps 完整</h3><pre class=" language-bash"><code class="language-bash">vim frps.ini 基础配置​bind_addr           服务端监听地址          0.0.0.0        bind_port           服务端监听端口           7000      bind_udp_port       服务端监听 UDP 端口        0       kcp_bind_port       服务端监听 KCP 协议端口     0        proxy_bind_addr     代理监听地址      log_file            日志文件地址             /var/log/frp.loglog_level           日志级别                trace, debug, info, warn, error<span class="token punctuation">(</span>默认info<span class="token punctuation">)</span>log_max_days        日志文件保留天数           3    detailed_errors_to_client  服务端返回详细错误信息给客户端  <span class="token boolean">true</span>tls_cert_file       TLS 服务端证书文件路径           tls_key_file        TLS 服务端密钥文件路径           tls_trusted_ca_file  TLS CA 证书路径    ​权限验证authentication_method       鉴权方式              token <span class="token punctuation">(</span>默认token 。oidc<span class="token punctuation">)</span>         authenticate_heartbeats     开启心跳消息鉴权       <span class="token boolean">false</span>        token                       鉴权使用的 token 值   客户端需要设置一样的值才能鉴权通过​管理配置allow_ports          允许代理绑定的服务端端口     1000-2000,2001,3000-4000max_pool_count       最大连接池大小             5max_ports_per_client 限制单个客户端最大同时存在的代理数  0<span class="token punctuation">(</span>0表示没有限制<span class="token punctuation">)</span>tls_only             只接受启用了 TLS 的客户端连接     <span class="token boolean">false</span>        ​监控dashboard_addr          启用 Dashboard 监听的本地地址    0.0.0.0         dashboard_port          启用 Dashboard 监听的本地端口    0       dashboard_user          HTTP BasicAuth 用户名          dashboard_pwd           HTTP BasicAuth 密码           enable_prometheus       是否提供 Prometheus 监控接口    <span class="token boolean">false</span>       需要同时启用了 Dashboard 才会生效asserts_dir             静态资源目录          Dashboard 使用的资源默认打包在二进制文件中，通过指定此参数使用自定义的静态资源​HTTP <span class="token operator">&amp;</span> HTTPSvhost_http_port         为 HTTP 类型代理监听的端口    0       启用后才支持 HTTP 类型的代理，默认不启用vhost_https_port        为 HTTPS 类型代理监听的端口   0       启用后才支持 HTTPS 类型的代理，默认不启用vhost_http_timeout      HTTP 类型代理在服务端的 ResponseHeader 超时时间  60      subdomain_host          二级域名后缀          custom_404_page         自定义 404 错误页面地址          ​TCPMUXtcpmux_httpconnect_port     为 TCPMUX 类型代理监听的端口  0       启用后才支持 TCPMUX 类型的代理，默认不启用</code></pre>]]></content>
      
      
      <categories>
          
          <category> 内网穿透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp配置基础 </tag>
            
            <tag> frp使用 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
